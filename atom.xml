<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>失控</title>
  
  
  <link href="http://blog.cndis.cn/atom.xml" rel="self"/>
  
  <link href="http://blog.cndis.cn/"/>
  <updated>2022-12-07T07:26:25.120Z</updated>
  <id>http://blog.cndis.cn/</id>
  
  <author>
    <name>JankinLui</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Markdown语法及Hexo命令</title>
    <link href="http://blog.cndis.cn/post/8903dfc3.html"/>
    <id>http://blog.cndis.cn/post/8903dfc3.html</id>
    <published>2022-09-18T06:04:01.000Z</published>
    <updated>2022-12-07T07:26:25.120Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>Markdown语法</strong><br>你可以使用vim工具直接编辑md文件，也可以用记事本打开md文件编辑你的文章，也可以Markdown的编辑器编写，有很多在线的编辑器，何有不少客户端的编辑器，我是Mac系统，用的一个叫 Mou 的编辑器，还比较好使。Windows系统下，你可以自己找一下，应该也会有很好用的编辑器。</p><p><strong>什么是Markdown</strong></p><p>Markdown 是一种轻量级标记语言，创始人为约翰·格鲁伯和亚伦·斯沃茨。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML文档”。 ——维基百科</p><p>先简单介绍一下，Markdown的语法，具体怎么用，我相信大家一看例文就马上明白了。</p><h1 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h1><ol><li><p>分段： 两个回车</p></li><li><p>换行 两个空格 + 回车</p></li><li><p>标题 # ~ ###### 井号的个数表示几级标题，即Markdown可以表示一级标题到六级标题</p></li><li><p>引用 &gt;</p></li><li><p>列表 * ， + ， - ， 1. ，选其中之一，注意后面有个空格</p></li><li><p>代码区块 四个空格 开头</p></li><li><p>链接</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[文字](链接地址)</span><br></pre></td></tr></table></figure></li><li><p>图片</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![](图片地址) //图片地址可以是本地路径，也可以是网络地址</span><br></pre></td></tr></table></figure></li><li><p>强调</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**文字** ， __文字__ ， _文字_ ， *文字*</span><br></pre></td></tr></table></figure></li><li><p>代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">```代码输入地方``</span><br></pre></td></tr></table></figure></li></ol><h1 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h1><p>我们在前面的已经略微的接触了一些hexo的命令，如 hexo new “my blog” ， hexo server 等。下面来介绍一下我们经常会用到的hexo命令</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo -g //安装</span><br><span class="line">npm update hexo -g //升级</span><br><span class="line">hexo g // = hexo generate 生成</span><br><span class="line">hexo s // = hexo server 本地服务预览</span><br><span class="line">hexo s -p xxxx // 更改本地端口</span><br><span class="line">hexo d // = hexo deploy 部署</span><br><span class="line">*下载了豆瓣插件 即不可使用 hexo d</span><br><span class="line">hexo d -g // = hexo g -d 生成后部署</span><br><span class="line">hexo clean //清缓存</span><br></pre></td></tr></table></figure><h2 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &quot;my blog&quot;  #新建，新建的文件在 hexo/source/_posts/my-blog.md</span><br><span class="line">hexo g      #生成静态页面，一般部署上去的时候都需要编译一下，编译后，会出现一个 public 文件夹，将所有的md文件编译成html文件</span><br><span class="line">hexo s#开启本地服务</span><br><span class="line">hexo d#部署</span><br><span class="line">hexo clean#清除 public，当 source 文件夹中的部分资源更改过之后，特别是对文件进行了删除或者路径的改变之后，需要执行这个命令，然后重新编译</span><br><span class="line">hexo algolia#更新algolia搜索Index</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Markdown语法学习和简单的Hexo命令</summary>
    
    
    
    <category term="Markdown" scheme="http://blog.cndis.cn/categories/Markdown/"/>
    
    <category term="Hexo" scheme="http://blog.cndis.cn/categories/Markdown/Hexo/"/>
    
    
    <category term="Markdown语法" scheme="http://blog.cndis.cn/tags/Markdown%E8%AF%AD%E6%B3%95/"/>
    
    <category term="Hexo命令" scheme="http://blog.cndis.cn/tags/Hexo%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>sersync实时同步服务</title>
    <link href="http://blog.cndis.cn/post/3d5aa7d2.html"/>
    <id>http://blog.cndis.cn/post/3d5aa7d2.html</id>
    <published>2022-08-07T01:33:04.000Z</published>
    <updated>2022-12-07T07:26:25.133Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-实现实时同步数据的原理"><a href="#第一章-实现实时同步数据的原理" class="headerlink" title="第一章 实现实时同步数据的原理"></a>第一章 实现实时同步数据的原理</h1><ol><li>需要部署好rsync守护进程服务，实现数据传输</li><li>需要部署好inotify服务，现实目录中数据变化监控</li><li>将rsync服务和inotify服务建立联系，将变化的数据进行实时备份传输</li></ol><h1 id="第二章-实时同步数据的方法"><a href="#第二章-实时同步数据的方法" class="headerlink" title="第二章 实时同步数据的方法"></a>第二章 实时同步数据的方法</h1><h2 id="2-1-部署好rsync守护进程服务"><a href="#2-1-部署好rsync守护进程服务" class="headerlink" title="2.1 部署好rsync守护进程服务"></a>2.1 部署好rsync守护进程服务</h2><p>服务端配置操作</p><p>客户端配置操作</p><h2 id="2-2-部署好inotify监控服务"><a href="#2-2-部署好inotify监控服务" class="headerlink" title="2.2 部署好inotify监控服务"></a>2.2 部署好inotify监控服务</h2><h3 id="2-2-1-第一个步骤：安装软件"><a href="#2-2-1-第一个步骤：安装软件" class="headerlink" title="2.2.1 第一个步骤：安装软件"></a>2.2.1 第一个步骤：安装软件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y inotify-tools</span><br></pre></td></tr></table></figure><h3 id="2-2-2-第二个步骤：熟悉命令的使用"><a href="#2-2-2-第二个步骤：熟悉命令的使用" class="headerlink" title="2.2.2 第二个步骤：熟悉命令的使用"></a>2.2.2 第二个步骤：熟悉命令的使用</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/bin/inotifywait              ---监控目录数据信息变化</span><br><span class="line">/usr/bin/inotifywatch           ---对监控的变化信息进行统计</span><br></pre></td></tr></table></figure><h3 id="2-2-3-inotifywait命令使用方法"><a href="#2-2-3-inotifywait命令使用方法" class="headerlink" title="2.2.3 inotifywait命令使用方法"></a>2.2.3 inotifywait命令使用方法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-m| --monitor                      ---实现一直监控目录的数据变化</span><br><span class="line">-r |  --recursive                  ---进行递归监控</span><br><span class="line">-q | --quiet                       ---尽量减少信息的输出</span><br><span class="line">--format &lt;fmt&gt;                     ---指定输出信息的格式</span><br><span class="line">--timefmt &lt;fmt&gt;                    ---指定输出的时间信息格式</span><br><span class="line">-e | ---event                      ---指定监控的事件信息</span><br></pre></td></tr></table></figure><h3 id="2-2-4-创建文件监控信息输出"><a href="#2-2-4-创建文件监控信息输出" class="headerlink" title="2.2.4 创建文件监控信息输出"></a>2.2.4 创建文件监控信息输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/data/   CREATE   user13            ---一个文件被创建</span><br><span class="line">/data/   OPEN user13                ---打开创建的文件</span><br><span class="line">/data/   ATTRIB user13              ---修改文件的属性信息</span><br><span class="line">/data/   CLOSE_WRITE,CLOSE user13   ---保存关闭一个文件</span><br></pre></td></tr></table></figure><h3 id="2-2-5-删除文件监控信息输出"><a href="#2-2-5-删除文件监控信息输出" class="headerlink" title="2.2.5 删除文件监控信息输出"></a>2.2.5 删除文件监控信息输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/data/   DELETE   user13</span><br></pre></td></tr></table></figure><h3 id="2-2-6-修改文件监控信息输出"><a href="#2-2-6-修改文件监控信息输出" class="headerlink" title="2.2.6 修改文件监控信息输出"></a>2.2.6 修改文件监控信息输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/data/   CREATE   user13            ---一个文件被创建</span><br><span class="line">/data/   OPEN user13                ---打开创建的文件</span><br><span class="line">/data/   MODIFY user13              ---修改文件的内容信息</span><br><span class="line">/data/   CLOSE_WRITE,CLOSE user13   ---保存关闭一个文件</span><br></pre></td></tr></table></figure><h3 id="2-2-7-inotify监控命令格式"><a href="#2-2-7-inotify监控命令格式" class="headerlink" title="2.2.7 inotify监控命令格式"></a>2.2.7 inotify监控命令格式</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">inotifywait -mrq --timefmt &quot;%F&quot; --format &quot;%T %w %f 事件信息：%e&quot; /home/ljq/yunw -e CREATE</span><br><span class="line">create创建、delete删除、moved_to移入、close_write修改</span><br><span class="line">显示信息：</span><br><span class="line">2020-07-09 /home/ljq/yunw/ 05.txt 事件信息：CREATE</span><br></pre></td></tr></table></figure><h3 id="2-2-8-企业应用：防止系统重要文件被破坏"><a href="#2-2-8-企业应用：防止系统重要文件被破坏" class="headerlink" title="2.2.8 企业应用：防止系统重要文件被破坏"></a>2.2.8 企业应用：防止系统重要文件被破坏</h3><p>需要用到inotify进行实时一直监控  例如：&#x2F;etc</p><h2 id="2-3-部署好sersync实时同步服务"><a href="#2-3-部署好sersync实时同步服务" class="headerlink" title="2.3 部署好sersync实时同步服务"></a>2.3 部署好sersync实时同步服务</h2><h3 id="2-3-1-第一个历程：需要下载安装软件"><a href="#2-3-1-第一个历程：需要下载安装软件" class="headerlink" title="2.3.1 第一个历程：需要下载安装软件"></a>2.3.1 第一个历程：需要下载安装软件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/wsgzao/sersync</span><br><span class="line">https://codeload.github.com/wsgzao/sersync/zip/master</span><br></pre></td></tr></table></figure><p>上传到Linux服务器的&#x2F;server&#x2F;tools</p><blockquote><p>ps：软件都放到一个目录，便于管理</p></blockquote><h3 id="2-3-2-第二个历程：解压软件压缩包，将压缩的数据进行保存"><a href="#2-3-2-第二个历程：解压软件压缩包，将压缩的数据进行保存" class="headerlink" title="2.3.2 第二个历程：解压软件压缩包，将压缩的数据进行保存"></a>2.3.2 第二个历程：解压软件压缩包，将压缩的数据进行保存</h3><p>unzip 压缩包名称</p><p>创建sersync目录结构</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim sersync_jb.sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /usr/local/sersync</span><br><span class="line">mkdir /usr/local/sersync/conf</span><br><span class="line">mkdir /usr/local/sersync/bin</span><br><span class="line">mkdir /usr/local/sersync/log</span><br><span class="line">cd /server/tools/sersync-master/GNU-Linux-x86/</span><br><span class="line">cp confxml.xml /usr/local/sersync/conf</span><br><span class="line">cp sersync2 /usr/local/sersync/bin</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sh sersync_jb.sh</span><br></pre></td></tr></table></figure><h3 id="2-3-3-第三个历程：编写配置文件"><a href="#2-3-3-第三个历程：编写配置文件" class="headerlink" title="2.3.3 第三个历程：编写配置文件"></a>2.3.3 第三个历程：编写配置文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /usr/local/sersync/conf/confxml.xml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 6     &lt;filter start=&quot;false&quot;&gt;</span><br><span class="line">7         &lt;exclude expression=&quot;(.*)\.svn&quot;&gt;&lt;/exclude&gt;</span><br><span class="line">8         &lt;exclude expression=&quot;(.*)\.gz&quot;&gt;&lt;/exclude&gt;</span><br><span class="line">9         &lt;exclude expression=&quot;^info/*&quot;&gt;&lt;/exclude&gt;</span><br><span class="line">10         &lt;exclude expression=&quot;^static/*&quot;&gt;&lt;/exclude&gt;</span><br><span class="line">11     &lt;/filter&gt;</span><br><span class="line">说明：排除指定数据信息不要进行实时传输同步，默认关闭</span><br><span class="line"></span><br><span class="line">12     &lt;inotify&gt;</span><br><span class="line">13         &lt;delete start=&quot;true&quot;/&gt;</span><br><span class="line">14         &lt;createFolder start=&quot;true&quot;/&gt;</span><br><span class="line">15         &lt;createFile start=&quot;false&quot;/&gt;</span><br><span class="line">16         &lt;closeWrite start=&quot;true&quot;/&gt;</span><br><span class="line">17         &lt;moveFrom start=&quot;true&quot;/&gt;</span><br><span class="line">18         &lt;moveTo start=&quot;true&quot;/&gt;</span><br><span class="line">19         &lt;attrib start=&quot;false&quot;/&gt;</span><br><span class="line">20         &lt;modify start=&quot;false&quot;/&gt;</span><br><span class="line">21     &lt;/inotify&gt;</span><br><span class="line">说明：定义inotify程序监控事件需要同步的内容</span><br><span class="line"></span><br><span class="line">24         &lt;localpath watch=&quot;/opt/tongbu&quot;&gt;                                                      //指定监控的目录</span><br><span class="line">25             &lt;remote ip=&quot;127.0.0.1&quot; name=&quot;tongbu1&quot;/&gt;                                     //指定备份服务器地址   指定备份服务器模块信息</span><br><span class="line">26             &lt;!--&lt;remote ip=&quot;192.168.8.39&quot; name=&quot;tongbu&quot;/&gt;--&gt;</span><br><span class="line">27             &lt;!--&lt;remote ip=&quot;192.168.8.40&quot; name=&quot;tongbu&quot;/&gt;--&gt;</span><br><span class="line">28         &lt;/localpath&gt;</span><br><span class="line">29         &lt;rsync&gt;</span><br><span class="line">30             &lt;commonParams params=&quot;-artuz&quot;/&gt;                                              //指定rsync推送命令参数</span><br><span class="line">31             &lt;auth start=&quot;false&quot; users=&quot;root&quot; passwordfile=&quot;/etc/rsync.pas&quot;/&gt;       //指定认证用户   指定认证用户密码文件</span><br><span class="line">32             &lt;userDefinedPort start=&quot;false&quot; port=&quot;874&quot;/&gt;&lt;!-- port=874 --&gt;</span><br></pre></td></tr></table></figure><h3 id="2-3-4-第四个历程：启动sersync服务程序"><a href="#2-3-4-第四个历程：启动sersync服务程序" class="headerlink" title="2.3.4 第四个历程：启动sersync服务程序"></a>2.3.4 第四个历程：启动sersync服务程序</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export PATH=&quot;$PATH:/usr/local/sersync/bin&quot;</span><br><span class="line">echo $PATH</span><br><span class="line">#/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin:/usr/local/sersync/bin</span><br></pre></td></tr></table></figure><h4 id="2-3-4-1-执行实时同步程序"><a href="#2-3-4-1-执行实时同步程序" class="headerlink" title="2.3.4.1 执行实时同步程序"></a>2.3.4.1 执行实时同步程序</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sersync2 -dro /usr/local/sersync/conf/confxml.xml</span><br></pre></td></tr></table></figure><h4 id="2-3-4-2-关闭实时同步程序"><a href="#2-3-4-2-关闭实时同步程序" class="headerlink" title="2.3.4.2 关闭实时同步程序"></a>2.3.4.2 关闭实时同步程序</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps -ef | grep sersync</span><br><span class="line">#root      6186     1  0 05:17 ?        00:00:00 sersync2 -dro /usr/local/sersync/conf/confxml.xml</span><br><span class="line">#root      6229     1  0 05:18 ?        00:00:00 sersync2 -dro /usr/local/sersync/conf/confxml.xml</span><br><span class="line">#root      6280     1  0 05:21 ?        00:00:00 sersync2 -dro /usr/local/sersync/conf/confxml.xml</span><br><span class="line">#root      6370  6248  0 05:27 pts/1    00:00:00 grep --color=auto sersync</span><br><span class="line">yum provides killall</span><br><span class="line">yum install -y psmisc</span><br><span class="line">killall sersync2</span><br></pre></td></tr></table></figure><blockquote><p>ps：killall以进程名kill所有进程，sersync个人开发的脚本程序，比较弱智，需要手动kill进程</p></blockquote><h3 id="2-3-5-第五个历程：实现开机自启动"><a href="#2-3-5-第五个历程：实现开机自启动" class="headerlink" title="2.3.5 第五个历程：实现开机自启动"></a>2.3.5 第五个历程：实现开机自启动</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/rc.local &lt;-- sersync2 -dro /usr/local/sersync/conf/confxml.xml</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">配置搭建Linux的sersync实时同步服务</summary>
    
    
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/categories/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="Linux" scheme="http://blog.cndis.cn/tags/Linux/"/>
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/tags/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    <category term="sersync" scheme="http://blog.cndis.cn/tags/sersync/"/>
    
    <category term="实时同步服务" scheme="http://blog.cndis.cn/tags/%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>安装neofetch</title>
    <link href="http://blog.cndis.cn/post/1cf70e68.html"/>
    <id>http://blog.cndis.cn/post/1cf70e68.html</id>
    <published>2022-08-07T01:24:06.000Z</published>
    <updated>2022-12-07T07:26:25.104Z</updated>
    
    <content type="html"><![CDATA[<p>Neofetch 可在大多数 Linux 发行版的默认仓库中找到。</p><p>在 Arch Linux 及其衍生版上，使用这个命令安装它：</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S netofetch</span><br></pre></td></tr></table></figure><p>在 Debian（Stretch &#x2F; Sid）上：</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install neofetch</span><br></pre></td></tr></table></figure><p>在 Fedora 27 上：</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dnf install neofetch</span><br></pre></td></tr></table></figure><p>在 RHEL、CentOS 上：</p><p>启用 EPEL 仓库：</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install epel-relase</span><br></pre></td></tr></table></figure><p>获取 neofetch 仓库：</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/konimex-neofetch-epel-7.repo</span><br><span class="line">https://copr.fedorainfracloud.org/coprs/konimex/neofetch/repo/epel-7/konimex-neofetch-epel-7.repo</span><br></pre></td></tr></table></figure><p>然后，安装 Neofetch：</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install neofetch</span><br></pre></td></tr></table></figure><p>在 Ubuntu 17.10 和更新版本上：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install neofetch</span><br></pre></td></tr></table></figure><p>在 Ubuntu 16.10 和更低版本上：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:dawidd0811/neofetch</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install neofetch</span><br></pre></td></tr></table></figure><p>在 NixOS 上：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nix-env -i neofetch</span><br></pre></td></tr></table></figure><p>使用 Neofetch 显示 Linux 系统信息</p><p>Neofetch 非常简单直接。让我们看一些例子。</p><p>打开终端，然后运行以下命令：</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">neofetch</span><br></pre></td></tr></table></figure><p>示例输出：</p><p><img src="/post/1cf70e68.htm/%E6%88%90%E6%9E%9C.png"></p>]]></content>
    
    
    <summary type="html">以命令行的形式把系统的logo生成</summary>
    
    
    
    <category term="Linux" scheme="http://blog.cndis.cn/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>rsync备份服务项目</title>
    <link href="http://blog.cndis.cn/post/ea302d03.html"/>
    <id>http://blog.cndis.cn/post/ea302d03.html</id>
    <published>2022-08-04T12:10:45.000Z</published>
    <updated>2022-12-07T07:26:25.137Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第1章-rsync-软件介绍"><a href="#第1章-rsync-软件介绍" class="headerlink" title="第1章 rsync 软件介绍"></a><strong>第</strong>1章 <strong>rsync</strong> <strong>软件介绍</strong></h1><h2 id="1-1-什么是rsync"><a href="#1-1-什么是rsync" class="headerlink" title="1.1 什么是rsync"></a><strong>1.1</strong> 什么是rsync</h2><p>rsync 是一款开源的、快速的、多功能的、可实现全量及增量的本地或远程数据同步备份的优秀工具。</p><p><a href="http://www.samba.org/ftp/rsync/rsync.html">英文手册阅读</a></p><h3 id="1-1-1-全量及增量"><a href="#1-1-1-全量及增量" class="headerlink" title="1.1.1 全量及增量"></a><strong>1.1.1</strong> 全量及增量</h3><p>全量：将全部数据，进行传输覆盖</p><p>增量：只传输差异部分的数据</p><h2 id="1-2-实现增量复制的原理"><a href="#1-2-实现增量复制的原理" class="headerlink" title="1.2 实现增量复制的原理"></a><strong>1.2</strong> 实现增量复制的原理</h2><p>Rsync通过其独特的“quick check”算法，实现增量传输数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]#man rsync</span><br><span class="line">Rsync  finds  files  that  need  to  be transferred using a “quick check” algorithm (by default)  that  looks  for  files  that  have changed  in  size  or  in  last-modified time.  Any changes in the other preserved attributes (as requested by options) are  made  on the  destination file directly when the quick check indicates that the file’s data does not need to be updated.</span><br></pre></td></tr></table></figure><p>在同步备份数据时，默认情况下，Rsync通过其独特的“quick check”算法，它仅同步大小或者最后修改时间发生变化的文件或目录，当然也可根据权限，属主等属性的变化同步，但需要指定相应的参数，甚至可以实现只同步一个文件里有变化的内容部分，所以，可以实现快速的同步备份数据。</p><blockquote><p>ps</p><p><em>centos 5 rsync 2.x</em> <em>先比对再同步，速度较慢</em></p><p> <em>centos 6 rsync 3.x</em> <em>一边比对，一边对差异部分进行同步</em></p></blockquote><h3 id="1-2-1-软件版本"><a href="#1-2-1-软件版本" class="headerlink" title="1.2.1 软件版本"></a><strong>1.2.1</strong> 软件版本</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# rsync --version</span><br><span class="line">rsync  version 3.0.6  protocol version 30</span><br><span class="line">Copyright (C) 1996-2009 by Andrew Tridgell, Wayne Davison, and others.</span><br><span class="line">Web site: http://rsync.samba.org/</span><br><span class="line">Capabilities:</span><br><span class="line">    64-bit files, 64-bit inums, 64-bit timestamps, 64-bit long ints,</span><br><span class="line">    socketpairs, hardlinks, symlinks, IPv6, batchfiles, inplace,</span><br><span class="line">    append, ACLs, xattrs, iconv, symtimes</span><br><span class="line">rsync comes with ABSOLUTELY NO WARRANTY.  This is free software, and you</span><br><span class="line">are welcome to redistribute it under certain conditions.  See the GNU</span><br><span class="line">General Public Licence for details.</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1-3-rsync-软件功能介绍"><a href="#1-3-rsync-软件功能介绍" class="headerlink" title="1.3 rsync 软件功能介绍"></a>1.3 rsync 软件功能介绍</h2><ul><li><p><em>类似于 cp 命令 – 实现本地备份传输数据</em></p></li><li><p><em>类似于scp 命令 – 远程备份传输数据</em></p></li><li><p><em>类似于 rm 命令 – 实现无差异同步备份</em></p></li><li><p><em>类似于</em> <em>ls</em> <em>命令</em> <em>–</em> <em>本地文件信息查看</em></p></li></ul><blockquote><p>ps</p><p>rsync 命令属于1v4 的命令</p></blockquote><h3 id="1-3-1-rsync-x3D-x3D-cp"><a href="#1-3-1-rsync-x3D-x3D-cp" class="headerlink" title="1.3.1 rsync &#x3D;&#x3D; cp"></a>1.3.1 rsync &#x3D;&#x3D; cp</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# cp -a  /etc/hosts /tmp/</span><br><span class="line">[root@backup ~]# ls /tmp/</span><br><span class="line">hosts</span><br><span class="line">[root@backup ~]# \rm /tmp/hosts</span><br><span class="line">[root@backup ~]# rsync  /etc/hosts /tmp/</span><br><span class="line">[root@backup ~]# ls /tmp/hosts</span><br><span class="line">/tmp/hosts</span><br></pre></td></tr></table></figure><h3 id="1-3-2-rsync-x3D-x3D-scp"><a href="#1-3-2-rsync-x3D-x3D-scp" class="headerlink" title="1.3.2 rsync &#x3D;&#x3D; scp"></a>1.3.2 rsync &#x3D;&#x3D; scp</h3><ol><li><p>使用scp实现</p><p>检查对端服务器目标位置上是否有该文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 ~]# ls /tmp/hosts</span><br><span class="line">ls: cannot access /tmp/hosts: No such file or directory</span><br></pre></td></tr></table></figure><p>从本地拷贝到远端服务器上</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# ls /tmp/hosts</span><br><span class="line">/tmp/hosts</span><br><span class="line">[root@backup ~]# scp -rp /etc/hosts 10.0.0.31:/tmp/</span><br><span class="line">The authenticity of host &#x27;10.0.0.31 (10.0.0.31)&#x27; can&#x27;t be established.</span><br><span class="line">RSA key fingerprint is d3:41:bb:0d:43:88:da:a3:2c:e8:36:91:11:c9:e4:9c.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class="line">Warning: Permanently added &#x27;10.0.0.31&#x27; (RSA) to the list of known hosts.</span><br><span class="line">root@10.0.0.31&#x27;s password:</span><br><span class="line">hosts                                           100%  357     0.4KB/s   00:00</span><br></pre></td></tr></table></figure><p>检查远端服务器上的结果</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 ~]# ls /tmp/hosts</span><br><span class="line">/tmp/hosts</span><br></pre></td></tr></table></figure></li><li><p>使用rsync 实现</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# rsync -rp /etc/hosts 10.0.0.31:/tmp/</span><br><span class="line">root@10.0.0.31&#x27;s password:</span><br><span class="line">[root@backup ~]#</span><br><span class="line">[root@nfs01 ~]# ls /tmp/hosts</span><br><span class="line">/tmp/hosts</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h3 id="1-3-3-rsync-x3D-x3D-rm"><a href="#1-3-3-rsync-x3D-x3D-rm" class="headerlink" title="1.3.3 rsync &#x3D;&#x3D; rm"></a>1.3.3 rsync &#x3D;&#x3D; rm</h3><h4 id="1-3-3-1-环境准备"><a href="#1-3-3-1-环境准备" class="headerlink" title="1.3.3.1 环境准备"></a>1.3.3.1 环境准备</h4><p>创建出来一次命令 进行操作</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup tmp]# mkdir /znix</span><br><span class="line">[root@backup znix]# cp /tmp/* .</span><br><span class="line">[root@backup znix]# ll</span><br><span class="line">total 4</span><br><span class="line">-rw-r--r-- 1 root root 357 Oct 11 15:21 hosts</span><br></pre></td></tr></table></figure><p>rm命令操作</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup znix]# rm -rf /znix/hosts</span><br><span class="line">[root@backup znix]# ll /znix/hosts</span><br><span class="line">ls: cannot access /znix/hosts: No such file or directory</span><br></pre></td></tr></table></figure><p>查看这文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# l</span><br><span class="line">total 4</span><br><span class="line">-rw-r--r-- 1 root root 357 Oct 11 15:21 hosts</span><br></pre></td></tr></table></figure><p>创建一个空目录，使用空目录进行无差异同步</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# mkdir /null</span><br><span class="line">[root@backup ~]# rsync --delete  /null/ /znix/</span><br><span class="line">rsync: --delete does not work without -r or -d.</span><br><span class="line">rsync error: syntax or usage error (code 1) at main.c(1422) [client=3.0.6]</span><br><span class="line">[root@backup ~]# rsync  -a  --delete  /null/ /znix/</span><br><span class="line">[root@backup ~]# ll /znix/</span><br><span class="line">total 0</span><br></pre></td></tr></table></figure><h3 id="1-3-4-rsync-x3D-x3D-ls-l"><a href="#1-3-4-rsync-x3D-x3D-ls-l" class="headerlink" title="1.3.4 rsync &#x3D;&#x3D; ls -l"></a>1.3.4 rsync &#x3D;&#x3D; ls -l</h3><p>使用rsync 可以实现与 ls 类似的功能</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# ls -l install.log</span><br><span class="line">-rw-r--r--. 1 root root 21736 Sep 25 08:38 install.log</span><br><span class="line">[root@backup ~]# rsync install.log</span><br><span class="line">-rw-r--r--       21736 2017/09/25 08:38:28 install.log</span><br></pre></td></tr></table></figure><h2 id="1-4-Rsync的特性总结（7个特性信息说明）"><a href="#1-4-Rsync的特性总结（7个特性信息说明）" class="headerlink" title="1.4 Rsync的特性总结（7个特性信息说明）"></a>1.4 Rsync的特性总结（7个特性信息说明）</h2><ol><li><p>支持拷贝普通文件与特殊文件如链接文件，设备等。</p></li><li><p>可以有排除指定文件或目录同步的功能，相当于打包命令tar的排除功能。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar zcvf backup_1.tar.gz /opt/data -exclude=clsn  </span><br></pre></td></tr></table></figure><blockquote><p>说明：</p><p>在打包&#x2F;opt&#x2F;data时就排除了clsn命名的目录和文件。 </p></blockquote></li><li><p>可以做到保持原文件或目录的权限、时间、软硬链接、属主、组等所有属性均不改变-p。</p></li><li><p>可实现增量同步，既只同步发生变化的数据，因此数据传输效率很高（tar -N）。<br> 将备份&#x2F;home 目录自 2008-01-29 以来修改过的文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -N 2008-01-29 -zcvf /backups/inc-backup_$(date +%F).tar.gz /home</span><br></pre></td></tr></table></figure><p> 将备份 &#x2F;home 目录昨天以来修改过的文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -N $(date -d yesterday &quot;+%F&quot;) -zcvf /backups/inc-backup_$(date +%F).tar.gz /home</span><br></pre></td></tr></table></figure><p>添加文件到已经打包的文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -rf all.tar *.gif</span><br></pre></td></tr></table></figure><blockquote><p>说明：</p><p>这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。</p></blockquote></li><li><p>可以使用rcp,rsh,ssh等方式来配合进行隧道加密传输文件（rsync本身不对数据加密）</p></li><li><p>可以通过socket(进程方式)传输文件和数据（服务端和客户端）* * * * *。重点掌握</p></li><li><p>支持匿名的或认证（无需系统用户）的进程模式传输，可实现方便安全的进行数据备份及镜像。</p></li></ol><h2 id="1-5-Rsync的企业工作场景说明"><a href="#1-5-Rsync的企业工作场景说明" class="headerlink" title="1.5 Rsync的企业工作场景说明"></a>1.5 Rsync的企业工作场景说明</h2><ol><li><p>两台服务器之间数据同步（定时任务cron+rsync)</p><p>同步网站内部人员数据信息（定时任务最小周期为1分钟）</p></li><li><p>两台服务器之间数据同步（实时任务inotify&#x2F;sersync&#x2F;lrsyncd+rsync）同步网站用户人员数据信息</p></li></ol><h1 id="第2章-rsync使用方式"><a href="#第2章-rsync使用方式" class="headerlink" title="第2章 rsync使用方式"></a>第2章 rsync使用方式</h1><h2 id="2-1-rsync软件工作方式"><a href="#2-1-rsync软件工作方式" class="headerlink" title="2.1 rsync软件工作方式"></a>2.1 rsync软件工作方式</h2><p>SYNOPSIS</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">本地数据同步方式</span><br><span class="line">Local:  rsync [OPTION...] SRC... [DEST]</span><br><span class="line">远程数据同步方式</span><br><span class="line">Access via remote shell:</span><br><span class="line">Pull: rsync [OPTION...] [USER@]HOST:SRC... [DEST]</span><br><span class="line">Push: rsync [OPTION...] SRC... [USER@]HOST:DEST</span><br><span class="line">守护进程方式同步数据</span><br><span class="line">Access via rsync daemon:</span><br><span class="line">Pull: rsync [OPTION...] [USER@]HOST::SRC... [DEST]</span><br><span class="line">      rsync [OPTION...] rsync://[USER@]HOST[:PORT]/SRC... [DEST]</span><br><span class="line">Push: rsync [OPTION...] SRC... [USER@]HOST::DEST</span><br><span class="line">      rsync [OPTION...] SRC... rsync://[USER@]HOST[:PORT]/DEST</span><br></pre></td></tr></table></figure><h3 id="2-1-1-本地数据同步方式（类似于cp）"><a href="#2-1-1-本地数据同步方式（类似于cp）" class="headerlink" title="2.1.1 本地数据同步方式（类似于cp）"></a>2.1.1 本地数据同步方式（类似于cp）</h3><p>Local: rsync [OPTION…] SRC… [DEST]</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>rsync</td><td>数据同步命令</td></tr><tr><td>[OPTION…]</td><td>rsync命令参数信息</td></tr><tr><td>SRC</td><td>要同不得数据信息（文件或目录）</td></tr><tr><td>[DEST]</td><td>将数据传输到什么位置</td></tr></tbody></table><h4 id="2-1-1-1-实例演示命令："><a href="#2-1-1-1-实例演示命令：" class="headerlink" title="2.1.1.1 实例演示命令："></a><strong>2.1.1.1</strong> 实例演示命令：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# rsync  /etc/hosts /tmp/</span><br><span class="line">[root@backup ~]# ls /tmp/hosts</span><br><span class="line">/tmp/hosts</span><br></pre></td></tr></table></figure><h3 id="2-1-2-远程数据同步方式（类似scp）—又称为隧道传输"><a href="#2-1-2-远程数据同步方式（类似scp）—又称为隧道传输" class="headerlink" title="2.1.2 远程数据同步方式（类似scp）—又称为隧道传输"></a><strong>2.1.2</strong> 远程数据同步方式（类似scp）—又称为隧道传输</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Access via remote shell:</span><br><span class="line">  Pull: rsync [OPTION...] [USER@]HOST:SRC... [DEST]</span><br><span class="line">  Push: rsync [OPTION...] SRC... [USER@]HOST:DEST</span><br></pre></td></tr></table></figure><blockquote><p>说明：</p><p>需要进行交互传输数据。如果想实现免交互传输数据，需要借助ssh+key方式实现</p></blockquote><table><thead><tr><th><em><strong>pull：拉：</strong></em></th><th></th></tr></thead><tbody><tr><td>[USER@] ：</td><td>以什么用户身份传输数据信息</td></tr><tr><td>HOST:</td><td>远程主机信息（IP地址信息 主机名称信息）</td></tr><tr><td>SRC:</td><td>远端要恏过来的数据信息</td></tr><tr><td>[dest]</td><td>恏到本地什么位置</td></tr><tr><td><em><strong>push：推：</strong></em></td><td></td></tr><tr><td>SRC：</td><td>本地要怼过去的数据信息</td></tr><tr><td>DEST</td><td>怼到远端什么位置</td></tr></tbody></table><h3 id="2-1-3-【实践操作】pull拉"><a href="#2-1-3-【实践操作】pull拉" class="headerlink" title="2.1.3 【实践操作】pull拉"></a><strong>2.1.3</strong> 【实践操作】pull拉</h3><p>从远端拉文件到当前目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 ~]# touch /tmp/1.txt</span><br><span class="line">[root@backup ~]# rsync nfs01:/tmp/1.txt .</span><br><span class="line">root@nfs01&#x27;s password:</span><br><span class="line">[root@backup ~]# ll</span><br><span class="line">total 44</span><br><span class="line">-rw-r--r--  1 root root     0 Oct 11 16:16 1.txt</span><br></pre></td></tr></table></figure><h3 id="2-1-4-【实践操作】push推（目录）"><a href="#2-1-4-【实践操作】push推（目录）" class="headerlink" title="2.1.4 【实践操作】push推（目录）"></a><strong>2.1.4</strong> 【实践操作】push推（目录）</h3><ol><li><p>将本地的hosts文件推到远端服务器上</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup tmp]# ll</span><br><span class="line">total 4</span><br><span class="line">-rw-r--r-- 1 root root 357 Oct 11 15:12 hosts</span><br></pre></td></tr></table></figure></li><li><p>使用push的格式 推整个目录（包括目录）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup tmp]# rsync -r /tmp nfs01:/tmp/</span><br><span class="line">root@nfs01&#x27;s password:</span><br><span class="line">[root@nfs01 tmp]# ll</span><br><span class="line">total 4</span><br><span class="line">drwxr-xr-x 3 root root 4096 Oct 11 16:20 tmp</span><br></pre></td></tr></table></figure></li><li><p>推整个目录下的文件（不包括目录本身）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup tmp]# rsync -r /tmp/ nfs01:/tmp/</span><br><span class="line">root@nfs01&#x27;s password:</span><br><span class="line">[root@nfs01 tmp]# ll</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 root root  357 Oct 11 16:21 hosts</span><br><span class="line">drwxr-xr-x 3 root root 4096 Oct 11 16:20 tmp</span><br></pre></td></tr></table></figure><blockquote><p>说明：</p><p><em>&#x2F;tmp  –表示将tmp目录本身及目录下的内容进行传输</em></p><p><em>&#x2F;tmp&#x2F; –表示只传输**tmp目录下面的内容信息</em></p></blockquote></li></ol><h2 id="2-2-守护进程方式同步数据"><a href="#2-2-守护进程方式同步数据" class="headerlink" title="2.2 守护进程方式同步数据"></a><strong>2.2</strong> <strong>守护进程方式同步数据</strong></h2><p>[root@localhost ~]# uname -a<br> Linux 2.6.32-696.el6.x86_64 #1 SMP Tue Mar 21 19:29:05 UTC 2017 x86_64 x86_64 x86_64 GNU&#x2F;Linux<br> Access via rsync daemon:<br> Pull: rsync [OPTION…] [USER@]HOST::SRC… [DEST]<br>    rsync [OPTION…] rsync:&#x2F;&#x2F;[USER@]HOST[:PORT]&#x2F;SRC… [DEST]<br> Push: rsync [OPTION…] SRC… [USER@]HOST::DEST<br>    rsync [OPTION…] SRC… rsync:&#x2F;&#x2F;[USER@]HOST[:PORT]&#x2F;DEST</p><h3 id="2-2-1-配置rsync守护进程方式（需要有服务端与客户端）"><a href="#2-2-1-配置rsync守护进程方式（需要有服务端与客户端）" class="headerlink" title="2.2.1 配置rsync守护进程方式（需要有服务端与客户端）"></a><strong>2.2.1</strong> <strong>配置</strong>rsync守护进程方式（需要有服务端与客户端）</h3><p>规划：</p><p>  <em>1. backup服务器作为rsync服务端</em></p><p>  <em>2. 以rysnc客户端作为参照物，将数据推到rsync服务器上</em></p><h3 id="2-2-2-配置rsync服务端（将服务端配置到-backup-服务器上）"><a href="#2-2-2-配置rsync服务端（将服务端配置到-backup-服务器上）" class="headerlink" title="2.2.2 配置rsync服务端（将服务端配置到 backup 服务器上）"></a><strong>2.2.2</strong> 配置rsync服务端（将服务端配置到 <strong>backup</strong> 服务器上）</h3><h4 id="第一个里程碑：-软件是否存在"><a href="#第一个里程碑：-软件是否存在" class="headerlink" title="第一个里程碑： 软件是否存在"></a>第一个里程碑： 软件是否存在</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# rpm -qa |grep rsync</span><br><span class="line">rsync-3.0.6-12.el6.x86_64</span><br></pre></td></tr></table></figure><h4 id="第二个里程碑：-进行软件服务配置"><a href="#第二个里程碑：-进行软件服务配置" class="headerlink" title="第二个里程碑： 进行软件服务配置"></a>第二个里程碑： 进行软件服务配置</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# vim /etc/rsyncd.conf</span><br><span class="line">uid = rsync             //指定管理备份目录的用户</span><br><span class="line">gid = rsync             //指定管理备份目录的用户组</span><br><span class="line">port=873                //定义rsync备份服务的网络端口号</span><br><span class="line">fake super=yes          //伪装root用户(无需让rsync以root身份运行，允许存储文件的完整属性)</span><br><span class="line">use chroot = no         //和安全相关的配置</span><br><span class="line">max connections = 200   //最大连接数  同时自能有200个客户端连接到备份服务器</span><br><span class="line">timeout = 300           //超时时间（单位秒）</span><br><span class="line">pid file = /var/run/rsyncd.pid         //记录进程号码信息 1.让程序快速停止进程  2.判断一个服务是否正在运行</span><br><span class="line">lock file = /var/run/rsync.lock        //锁文件 保证文件到达限制后无法再进行连接</span><br><span class="line">log file = /var/log/rsyncd.log         //rsync服务的日志文件  用于排除分析问题</span><br><span class="line">ignore errors                          //忽略传输文件中的简单错误</span><br><span class="line">read only = false                //指定备份目录是可读可写</span><br><span class="line">list = false                     //使客户端可以查看服务器的模块信息</span><br><span class="line">hosts allow = 172.16.1.0/24      //允许传输备份数据的主机（白名单）</span><br><span class="line">hosts deny = 0.0.0.0/32          //禁止传输备份数据的主机（黑名单）</span><br><span class="line">auth users = rsync_backup        //指定认证用户</span><br><span class="line">secrets file = /etc/rsync.password     //指定认证用户密码文件  用户名称：密码信息</span><br><span class="line">[backup]                         //模块信息</span><br><span class="line">comment = &quot;backup dir by clsn&quot;                                   </span><br><span class="line">path = /backup          //模块中备份参数  指定备份目录</span><br></pre></td></tr></table></figure><h4 id="第三个里程：创建rsync用户"><a href="#第三个里程：创建rsync用户" class="headerlink" title="第三个里程：创建rsync用户"></a>第三个里程：创建rsync用户</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# id rsync</span><br><span class="line">id: rsync: No such user</span><br><span class="line">[root@backup ~]# useradd -s /sbin/nologin -M rsync</span><br></pre></td></tr></table></figure><h4 id="第四个里程碑：-创建数据备份储存目录-目录修改属主"><a href="#第四个里程碑：-创建数据备份储存目录-目录修改属主" class="headerlink" title="第四个里程碑： 创建数据备份储存目录,目录修改属主"></a>第四个里程碑： 创建数据备份储存目录,目录修改属主</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# mkdir /backup/</span><br><span class="line">[root@backup ~]# chown -R rsync.rsync /backup/</span><br></pre></td></tr></table></figure><h4 id="第五个里程碑：-创建认证用户密码文件"><a href="#第五个里程碑：-创建认证用户密码文件" class="headerlink" title="第五个里程碑： 创建认证用户密码文件"></a>第五个里程碑： 创建认证用户密码文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;rsync_backup:clsn123&quot; &gt;&gt;/etc/rsync.password</span><br><span class="line">chmod 600 /etc/rsync.password</span><br></pre></td></tr></table></figure><h4 id="第六个里程碑：-启动rsync服"><a href="#第六个里程碑：-启动rsync服" class="headerlink" title="第六个里程碑： 启动rsync服"></a>第六个里程碑： 启动rsync服</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rsync --daemon</span><br></pre></td></tr></table></figure><h4 id="至此服务端配置完成"><a href="#至此服务端配置完成" class="headerlink" title="至此服务端配置完成"></a>至此服务端配置完成</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# ps -ef |grep rsync</span><br><span class="line">root       2076      1  0 17:05 ?        00:00:00 rsync --daemon</span><br><span class="line">root       2163   1817  0 17:38 pts/1    00:00:00 grep --color=auto rsync</span><br><span class="line">[root@backup ~]# netstat -lntup |grep rsync</span><br><span class="line">tcp        0      0 0.0.0.0:873                 0.0.0.0:*                   LISTEN      2076/rsync         </span><br><span class="line">tcp        0      0 :::873                      :::*                        LISTEN      2076/rsync </span><br></pre></td></tr></table></figure><h3 id="2-2-3-配置rsync客户端（其他服务器为客户端）"><a href="#2-2-3-配置rsync客户端（其他服务器为客户端）" class="headerlink" title="2.2.3 配置rsync客户端（其他服务器为客户端）"></a><strong>2.2.3</strong> 配置rsync客户端（其他服务器为客户端）</h3><h4 id="第一个里程碑：-软件是否存在-1"><a href="#第一个里程碑：-软件是否存在-1" class="headerlink" title="第一个里程碑： 软件是否存在"></a>第一个里程碑： 软件是否存在</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 ~]# rpm -qa |grep rsync</span><br><span class="line">rsync-3.0.6-12.el6.x86_64</span><br></pre></td></tr></table></figure><h4 id="第二个里程碑：-创建认证文件"><a href="#第二个里程碑：-创建认证文件" class="headerlink" title="第二个里程碑： 创建认证文件"></a>第二个里程碑： 创建认证文件</h4><p>客户端的认证文件只需要有密码即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;clsn123&quot; &gt;&gt;/etc/rsync.password</span><br><span class="line">chmod 600 /etc/rsync.password</span><br></pre></td></tr></table></figure><h4 id="第三个里程碑：-实现数据传输"><a href="#第三个里程碑：-实现数据传输" class="headerlink" title="第三个里程碑： 实现数据传输"></a>第三个里程碑： 实现数据传输</h4><h5 id="交互式"><a href="#交互式" class="headerlink" title="交互式"></a>交互式</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 ~]# rsync -avzP /etc/hosts rsync_backup@172.16.1.41::backup</span><br><span class="line">Password:</span><br><span class="line">sending incremental file list</span><br><span class="line">hosts</span><br><span class="line">         357 100%    0.00kB/s    0:00:00 (xfer#1, to-check=0/1)</span><br><span class="line"> </span><br><span class="line">sent 63 bytes  received 33 bytes  9.14 bytes/sec</span><br><span class="line">total size is 357  speedup is 3.72</span><br></pre></td></tr></table></figure><h5 id="免交互式"><a href="#免交互式" class="headerlink" title="免交互式"></a>免交互式</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 ~]# rsync -avzP /etc/hosts rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password</span><br><span class="line">sending incremental file list</span><br><span class="line">hosts</span><br><span class="line">         357 100%    0.00kB/s    0:00:00 (xfer#1, to-check=0/1)</span><br><span class="line"> </span><br><span class="line">sent 199 bytes  received 27 bytes  150.67 bytes/sec</span><br><span class="line">total size is 357  speedup is 1.58</span><br></pre></td></tr></table></figure><h2 id="2-3-rsync守护进程传输数据原理"><a href="#2-3-rsync守护进程传输数据原理" class="headerlink" title="2.3 rsync守护进程传输数据原理"></a>2.3 rsync守护进程传输数据原理</h2><p><img src="/post/ea302d03.htm/2.3rsync%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B%E4%BC%A0%E8%BE%93%E6%95%B0%E6%8D%AE%E5%8E%9F%E7%90%86.png" alt="2.3 rsync守护进程传输数据原理"></p><h2 id="2-4-rsync-命令同步参数选项-amp-特殊参数"><a href="#2-4-rsync-命令同步参数选项-amp-特殊参数" class="headerlink" title="2.4 rsync 命令同步参数选项&amp;特殊参数"></a><strong>2.4 rsync</strong> 命令同步参数选项&amp;特殊参数</h2><table><thead><tr><th><strong>目录参数</strong></th><th><strong>参数说明</strong></th></tr></thead><tbody><tr><td>-v ,–verbose</td><td>详细模式输出，传输时的信息</td></tr><tr><td>-z,–compress</td><td>传输时进行压缩以提高传输效率  –compress-level&#x3D;NUM 可按级别压缩  局域网可以不用压缩</td></tr><tr><td>-a,–archive （主要）</td><td>归档模式，表示以递归方式传输文件，并保持文件属性。等于 -rtopgDl</td></tr><tr><td>-r,–recursive <strong>归档于</strong><strong>-a</strong></td><td>对子目录以递归模式，即目录下的所有目录都同样传输。小写r</td></tr><tr><td>-t,–times    <strong>归档于</strong><strong>-a</strong></td><td>保持文件时间信息(修改时间)</td></tr><tr><td>-o,–owner    <strong>归档于</strong><strong>-a</strong></td><td>保持文件属主信息</td></tr><tr><td>-p,–perms    <strong>归档于</strong><strong>-a</strong></td><td>保持文件权限</td></tr><tr><td>-g,–group    <strong>归档于</strong><strong>-a</strong></td><td>保持文件属组信息</td></tr><tr><td>-P，–progress</td><td>显示同步的过程及传输时的进度等信息（大P）</td></tr><tr><td>-D,–devices  <strong>归档于</strong><strong>-a</strong></td><td>保持设备文件信息</td></tr><tr><td>-l,–links    <strong>归档于</strong><strong>-a</strong></td><td>保留软连接（小写字母l）</td></tr><tr><td>-L</td><td>保持链接文件数据信息不变</td></tr><tr><td>-e，–rsh&#x3D;COMMAND</td><td>使用的信道协议（remote  shell），指定替代rsh的shell程序。  例如 ssh</td></tr><tr><td>–exclude&#x3D;<em>PATTERN</em></td><td>指定排除不需要传输的文件信息</td></tr><tr><td>–exclude-from&#x3D;<em>file</em></td><td>文件名所在目录文件，即可以实现排除多个文件</td></tr><tr><td>–bwlimit&#x3D;RATE</td><td>限速功能</td></tr><tr><td>–delete</td><td>让目标目录SRC和源目录数据DST一致，即无差异数据同步</td></tr><tr><td><strong>保持同步目录及文件属性：</strong>  这里的-avzP相当于 -vzetopdDlP，生产环境常用的参数为 -avzP  在脚本中可以报-vP去掉  –progress可以用-P代替</td><td></td></tr><tr><td><strong>daemon****启动扩展参数</strong></td><td></td></tr><tr><td>–daemon</td><td>daemon表示以守护进程的方式启动rsync服务。</td></tr><tr><td>–address</td><td>绑定指定IP地址提供服务。</td></tr><tr><td>–config&#x3D;FILE</td><td>更改配置文件路径，而不是默认的&#x2F;etc&#x2F;rsyncd.conf</td></tr><tr><td>–port&#x3D;PORT</td><td>更改其它端口提供服务，而不是缺省的873端口</td></tr></tbody></table><h3 id="2-4-1-特殊参数实践"><a href="#2-4-1-特殊参数实践" class="headerlink" title="2.4.1 特殊参数实践"></a><strong>2.4.1</strong> 特殊参数实践</h3><h4 id="指定ip"><a href="#指定ip" class="headerlink" title="指定ip"></a>指定ip</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# rsync --daemon --address=172.16.1.41</span><br><span class="line">[root@backup ~]# netstat -lntup |grep 873</span><br><span class="line">tcp     0   0 172.16.1.41:873     0.0.0.0:*        LISTEN      2583/rsync   </span><br></pre></td></tr></table></figure><h4 id="参数测试"><a href="#参数测试" class="headerlink" title="参数测试"></a>参数测试</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 ~]# rsync -avzP /etc/services rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password</span><br><span class="line">sending incremental file list</span><br><span class="line">services</span><br><span class="line">      641020 100%   19.34MB/s    0:00:00 (xfer#1, to-check=0/1)</span><br><span class="line"> </span><br><span class="line">sent 127417 bytes  received 27 bytes  254888.00 bytes/sec</span><br><span class="line">total size is 641020  speedup is 5.03</span><br></pre></td></tr></table></figure><h4 id="指定配置文件路径"><a href="#指定配置文件路径" class="headerlink" title="指定配置文件路径"></a>指定配置文件路径</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# rsync --daemon --config=/etc/rsyncd.conf</span><br><span class="line">[root@nfs01 ~]# rsync -avzP /etc/services rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password</span><br><span class="line">sending incremental file list</span><br><span class="line">sent 29 bytes  received 8 bytes  74.00 bytes/sec</span><br><span class="line">total size is 641020  speedup is 17324.86</span><br></pre></td></tr></table></figure><h4 id="服务端指定服务端口"><a href="#服务端指定服务端口" class="headerlink" title="服务端指定服务端口"></a>服务端指定服务端口</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# rsync --daemon --port=5222</span><br><span class="line">[root@backup ~]# netstat -lntup|grep rsync</span><br><span class="line">tcp        0      0 0.0.0.0:5222      0.0.0.0:*           LISTEN      2598/rsync         </span><br><span class="line">tcp        0      0 :::5222            :::*                 LISTEN      2598/rsync  </span><br></pre></td></tr></table></figure><h3 id="2-4-2-命令小结"><a href="#2-4-2-命令小结" class="headerlink" title="2.4.2 命令小结"></a><strong>2.4.2</strong> 命令小结</h3><p>让文件权限不改变：</p><p>​       让-o和-g参数生效，需要将配置文件uid和gid改为root，然后将fake super参数进行注释</p><h1 id="第3章-rsycn配置文件详解rsyncd-conf"><a href="#第3章-rsycn配置文件详解rsyncd-conf" class="headerlink" title="第3章 rsycn配置文件详解rsyncd.conf"></a>第3章 rsycn配置文件详解rsyncd.conf</h1><h2 id="3-1-部分知识补充"><a href="#3-1-部分知识补充" class="headerlink" title="3.1 部分知识补充"></a><strong>3.1</strong> 部分知识补充</h2><h3 id="3-1-1-配置文件内容参考资料"><a href="#3-1-1-配置文件内容参考资料" class="headerlink" title="3.1.1 配置文件内容参考资料"></a><strong>3.1.1</strong> 配置文件内容参考资料</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">man rsyncd.conf</span><br></pre></td></tr></table></figure><h3 id="3-1-2-配置文件内容总结"><a href="#3-1-2-配置文件内容总结" class="headerlink" title="3.1.2 配置文件内容总结"></a><strong>3.1.2</strong> 配置文件内容总结</h3><p>模块之上内容为全局变量信息</p><p>模块之下内容为局部变量信息</p><blockquote><p><strong>说明：</strong></p><p>无论是全局变量发生变化，还是局部变量发生变化，都建议重启rsync服务使配置生效。</p></blockquote><h2 id="3-2-利用-x2F-etc-x2F-init-d-x2F-启动rsync服务方式"><a href="#3-2-利用-x2F-etc-x2F-init-d-x2F-启动rsync服务方式" class="headerlink" title="3.2 利用&#x2F;etc&#x2F;init.d&#x2F;启动rsync服务方式"></a><strong>3.2</strong> 利用&#x2F;etc&#x2F;init.d&#x2F;启动rsync服务方式</h2><h3 id="3-2-1-可以实现方式："><a href="#3-2-1-可以实现方式：" class="headerlink" title="3.2.1 可以实现方式："></a><strong>3.2.1</strong> 可以实现方式：</h3><ol><li>编写rsync启动脚本（有一定的shell能力 if case）</li><li>利用xinetd服务，管理启动rsync服务</li></ol><h3 id="3-2-2-利用xinetd服务管理rsync"><a href="#3-2-2-利用xinetd服务管理rsync" class="headerlink" title="3.2.2 利用xinetd服务管理rsync"></a><strong>3.2.2</strong> 利用xinetd服务管理rsync</h3><h4 id="第一个里程碑：-安装xinetd软件"><a href="#第一个里程碑：-安装xinetd软件" class="headerlink" title="第一个里程碑： 安装xinetd软件"></a>第一个里程碑： 安装xinetd软件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# yum install -y xinetd</span><br><span class="line">[root@backup ~]# rpm -qa |grep xin</span><br><span class="line">xinetd-2.3.14-40.el6.x86_64</span><br></pre></td></tr></table></figure><h4 id="第二个里程碑：编辑配置文件"><a href="#第二个里程碑：编辑配置文件" class="headerlink" title="第二个里程碑：编辑配置文件"></a>第二个里程碑：编辑配置文件</h4><p>修改disable &#x3D; yes 改为disable &#x3D; no</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# vim /etc/xinetd.d/rsync</span><br><span class="line"># default: off</span><br><span class="line"># description: The rsync server is a good addition to an ftp server, as it \</span><br><span class="line">#   allows crc checksumming etc.</span><br><span class="line">service rsync</span><br><span class="line">&#123;</span><br><span class="line">disable   = no</span><br><span class="line">flags     = IPv6</span><br><span class="line">socket_type     = stream</span><br><span class="line">wait            = no</span><br><span class="line">user            = root</span><br><span class="line">server          = /usr/bin/rsync</span><br><span class="line">server_args     = --daemon</span><br><span class="line">log_on_failure  += USERID</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第三个里程碑：重启xinetd服务"><a href="#第三个里程碑：重启xinetd服务" class="headerlink" title="第三个里程碑：重启xinetd服务"></a>第三个里程碑：重启xinetd服务</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# /etc/init.d/xinetd restart</span><br><span class="line">Stopping xinetd:                                           [  OK  ]</span><br><span class="line">Starting xinetd:                                           [  OK  ]</span><br></pre></td></tr></table></figure><h4 id="传输测试"><a href="#传输测试" class="headerlink" title="传输测试"></a>传输测试</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 ~]# rsync -avzP /etc/services rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password</span><br><span class="line">sending incremental file list</span><br><span class="line">sent 29 bytes  received 8 bytes  74.00 bytes/sec</span><br><span class="line">total size is 641020  speedup is 17324.86</span><br></pre></td></tr></table></figure><h2 id="定义变量信息实现免秘钥交互"><a href="#定义变量信息实现免秘钥交互" class="headerlink" title="定义变量信息实现免秘钥交互"></a>定义变量信息实现免秘钥交互</h2><h3 id="3-3-1-通过man手册获得方法"><a href="#3-3-1-通过man手册获得方法" class="headerlink" title="3.3.1 通过man手册获得方法"></a><strong>3.3.1</strong> 通过man手册获得方法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Some  modules  on the remote daemon may require authentication. If so, you will receive a password prompt when you connect.  You  can avoid  the  password  prompt  by  setting the environment variable RSYNC_PASSWORD to the password  you  want  to  use  or  using  the --password-file option. This may be useful when scripting rsync.</span><br><span class="line">WARNING:  On some systems environment variables are visible to all users. On those systems using --password-file is recommended.</span><br></pre></td></tr></table></figure><p>在远程进程的一些模块可能需要认证。如果是这样的话，你将得到一个密码提示当您连接。你可以通过设置环境变量rsync_password要使用或使用密码文件选项密码避免密码提示。这可能是有用的脚本文件。</p><blockquote><p>警告：</p><p>在一些系统环境变量，对所有用户都是可见的。在这些系统中使用的密码文件的建议。</p></blockquote><h3 id="3-3-2-使用RSYNC-PASSWORD-变量实现免交互"><a href="#3-3-2-使用RSYNC-PASSWORD-变量实现免交互" class="headerlink" title="3.3.2 使用RSYNC_PASSWORD 变量实现免交互"></a><strong>3.3.2</strong> 使用RSYNC_PASSWORD 变量实现免交互</h3><p>未设置变量之前</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 ~]# rsync -avzP /etc/services rsync_backup@172.16.1.41::backup</span><br><span class="line">Password:</span><br></pre></td></tr></table></figure><p>添加上环境变量</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 ~]# export RSYNC_PASSWORD=clsn123</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 ~]# rsync -avzP /etc/services rsync_backup@172.16.1.41::backup</span><br><span class="line">sending incremental file list</span><br><span class="line">sent 29 bytes  received 8 bytes  24.67 bytes/sec</span><br><span class="line">total size is 641020  speedup is 17324.86</span><br></pre></td></tr></table></figure><h3 id="3-3-3-使用-rsync-password文件实现免交互"><a href="#3-3-3-使用-rsync-password文件实现免交互" class="headerlink" title="3.3.3 使用 rsync.password文件实现免交互"></a><strong>3.3.3</strong> <strong>使用</strong> rsync.password文件实现免交互</h3><p>建立密码文档</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 ~]# echo &quot;123456&quot;&gt;/etc/rsync.password</span><br><span class="line">[root@nfs01 ~]# chmod 600 /etc/rsync.password</span><br></pre></td></tr></table></figure><p>命令测试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 ~]# rsync -avz /etc/hosts rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password </span><br></pre></td></tr></table></figure><h2 id="3-4-守护进程多模块功能配置"><a href="#3-4-守护进程多模块功能配置" class="headerlink" title="3.4 守护进程多模块功能配置"></a><strong>3.4</strong> 守护进程多模块功能配置</h2><h3 id="第一个里程碑：-编写配置信息创建多模块"><a href="#第一个里程碑：-编写配置信息创建多模块" class="headerlink" title="第一个里程碑： 编写配置信息创建多模块"></a>第一个里程碑： 编写配置信息创建多模块</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# vim /etc/rsyncd.conf</span><br><span class="line">……</span><br><span class="line">[nfsdata]</span><br><span class="line">comment = &quot;nfsdata dir by clsn&quot;</span><br><span class="line">path = /backup/nfsdata</span><br><span class="line">[nfsbackup]</span><br><span class="line">comment = &quot;nfsbackup dir by clsn&quot;</span><br><span class="line">path = /backup/nfsbackup </span><br></pre></td></tr></table></figure><h3 id="第二个里程碑：-创建多模块指定的目录"><a href="#第二个里程碑：-创建多模块指定的目录" class="headerlink" title="第二个里程碑： 创建多模块指定的目录"></a>第二个里程碑： 创建多模块指定的目录</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 创建目录，并修改目录的权限</span><br><span class="line">[root@backup ~]# mkdir /backup/nfs&#123;data,backup&#125; -p</span><br><span class="line">[root@backup ~]# chown rsync.rsync  /backup/nfs&#123;data,backup&#125;</span><br><span class="line">#查看：</span><br><span class="line">[root@backup ~]# ll /backup/nfs&#123;data,backup&#125; -d</span><br><span class="line">drwxr-xr-x 2 rsync rsync 4096 Oct 12 10:05 /backup/nfsbackup</span><br><span class="line">drwxr-xr-x 2 rsync rsync 4096 Oct 12 10:05 /backup/nfsdata</span><br></pre></td></tr></table></figure><h3 id="第三里程碑：-利用rsync客户端进行测试"><a href="#第三里程碑：-利用rsync客户端进行测试" class="headerlink" title="第三里程碑： 利用rsync客户端进行测试"></a>第三里程碑： 利用rsync客户端进行测试</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 ~]# rsync -avz /data/ rsync_backup@172.16.1.41::nfsdata --password-file=/etc/rsync.passsword</span><br><span class="line">sending incremental file list</span><br><span class="line">./</span><br><span class="line">nfs.data</span><br><span class="line">sent 78 bytes  received 30 bytes  216.00 bytes/sec</span><br><span class="line">total size is 0  speedup is 0.00</span><br></pre></td></tr></table></figure><blockquote><p>说明：</p><p><em>rsyncd.conf配置文件中，添加多模块信息，可以不用重启rsync服务，即时生效~</em></p><p><em>全局变量参数针对所有模块生效；局部变量参数只针对指定模块生效</em></p><p><em>read only参数默认配置为ture，即为只读模式</em></p><p><em>全局变量发生变化，不用重启<strong>rsync</strong>服务；局部变量发生变化，需要重启<strong>rsync</strong>服务</em></p></blockquote><blockquote><p>注意：修改配置文件就重启<strong>↓</strong></p><p>无论是全局变量发生变化，还是局部变量发生变化，都建议重启rsync服务使配置生效</p></blockquote><h2 id="3-5-守护进程的排除功能实践"><a href="#3-5-守护进程的排除功能实践" class="headerlink" title="3.5 守护进程的排除功能实践"></a><strong>3.5</strong> 守护进程的排除功能实践</h2><h3 id="3-5-1-排除的方式"><a href="#3-5-1-排除的方式" class="headerlink" title="3.5.1 排除的方式"></a><strong>3.5.1</strong> 排除的方式</h3><ol><li>–exclude&#x3D;要配置的目录或文件名称</li><li>–exclude-from&#x3D;要排除多个目录或文件汇总文件名称</li><li>在配置文件中进行修改，指定要排除的信息</li></ol><h3 id="3-5-2-排除测试"><a href="#3-5-2-排除测试" class="headerlink" title="3.5.2 排除测试"></a><strong>3.5.2</strong> 排除测试</h3><h4 id="第一个里程碑-创建模拟测试环境"><a href="#第一个里程碑-创建模拟测试环境" class="headerlink" title="第一个里程碑: 创建模拟测试环境"></a>第一个里程碑: 创建模拟测试环境</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 data]# mkdir &#123;a..d&#125;</span><br><span class="line">[root@nfs01 data]# touch &#123;a..d&#125;/&#123;1..3&#125;.txt</span><br><span class="line">[root@nfs01 data]# tree</span><br><span class="line">.</span><br><span class="line">├── a</span><br><span class="line">│   ├── 1.txt</span><br><span class="line">│   ├── 2.txt</span><br><span class="line">│   └── 3.txt</span><br><span class="line">├── b</span><br><span class="line">│   ├── 1.txt</span><br><span class="line">│   ├── 2.txt</span><br><span class="line">│   └── 3.txt</span><br><span class="line">├── c</span><br><span class="line">│   ├── 1.txt</span><br><span class="line">│   ├── 2.txt</span><br><span class="line">│   └── 3.txt</span><br><span class="line">└── d</span><br><span class="line">    ├── 1.txt</span><br><span class="line">    ├── 2.txt</span><br><span class="line">    └── 3.txt</span><br><span class="line">4 directories, 12 files</span><br></pre></td></tr></table></figure><h4 id="第二个里程碑-利用-–exclude参数测试排除功能"><a href="#第二个里程碑-利用-–exclude参数测试排除功能" class="headerlink" title="第二个里程碑 利用 –exclude参数测试排除功能"></a>第二个里程碑 利用 –exclude参数测试排除功能</h4><p># 需求：不要a目录中3.txt 不要b、c目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 data]# rsync -avz /data/ --exclude=a/3.txt --exclude=b --exclude=c rsync_backup@172.16.1.41::nfsdata</span><br><span class="line">sending incremental file list</span><br><span class="line">./</span><br><span class="line">a/</span><br><span class="line">a/1.txt</span><br><span class="line">a/2.txt</span><br><span class="line">d/</span><br><span class="line">d/1.txt</span><br><span class="line">d/2.txt</span><br><span class="line">d/3.txt</span><br><span class="line">sent 300 bytes  received 114 bytes  828.00 bytes/sec</span><br><span class="line">total size is 0  speedup is 0.00</span><br></pre></td></tr></table></figure><p>精简方式排除</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 data]# rsync -avz /data/ --exclude=a/3.txt --exclude=&#123;b,c&#125; rsync_backup@172.16.1.41::nfsdata</span><br><span class="line">sending incremental file list</span><br><span class="line">./</span><br><span class="line">a/</span><br><span class="line">a/1.txt</span><br><span class="line">a/2.txt</span><br><span class="line">d/</span><br><span class="line">d/1.txt</span><br><span class="line">d/2.txt</span><br><span class="line">d/3.txt</span><br><span class="line">sent 300 bytes  received 114 bytes  828.00 bytes/sec</span><br><span class="line">total size is 0  speedup is 0.00</span><br></pre></td></tr></table></figure><h3 id="3-5-3-利用–exclude-from方式进行排除"><a href="#3-5-3-利用–exclude-from方式进行排除" class="headerlink" title="3.5.3 利用–exclude-from方式进行排除"></a><strong>3.5.3</strong> 利用–exclude-from方式进行排除</h3><h4 id="第一个里程碑-创建模拟测试环境-1"><a href="#第一个里程碑-创建模拟测试环境-1" class="headerlink" title="第一个里程碑: 创建模拟测试环境"></a>第一个里程碑: 创建模拟测试环境</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 data]# mkdir &#123;a..d&#125;</span><br><span class="line">[root@nfs01 data]# touch &#123;a..d&#125;/&#123;1..3&#125;.txt</span><br></pre></td></tr></table></figure><h4 id="第二个里程碑：利用–exlude-from参数，测试排除功能"><a href="#第二个里程碑：利用–exlude-from参数，测试排除功能" class="headerlink" title="第二个里程碑：利用–exlude-from参数，测试排除功能"></a>第二个里程碑：利用–exlude-from参数，测试排除功能</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 data]# vim /tmp/paichu.txt</span><br><span class="line">a/3.txt</span><br><span class="line">b</span><br><span class="line">c</span><br></pre></td></tr></table></figure><h4 id="第三个里程碑：进行排除"><a href="#第三个里程碑：进行排除" class="headerlink" title="第三个里程碑：进行排除"></a>第三个里程碑：进行排除</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 data]# rsync -avz /data/ --exclude-from=/tmp/paichu.txt rsync_backup@172.16.1.41::nfsdata</span><br><span class="line">sending incremental file list</span><br><span class="line">./</span><br><span class="line">a/</span><br><span class="line">a/1.txt</span><br><span class="line">a/2.txt</span><br><span class="line">d/</span><br><span class="line">d/1.txt</span><br><span class="line">d/2.txt</span><br><span class="line">d/3.txt</span><br><span class="line">sent 300 bytes  received 114 bytes  828.00 bytes/sec</span><br><span class="line">total size is 0  speedup is 0.00</span><br></pre></td></tr></table></figure><blockquote><p>说明：</p><p><em>01. 排除文件中，需要利用相对路径指定排除信息（不能利用绝对路径）</em></p><p><em>02.</em> <em>相对路径指的是相对同步的目录信息而言，是对**rsync -avz &#x2F;data&#x2F;</em> <em>后面的<strong>data</strong>目录进行相对</em></p></blockquote><h3 id="3-5-4-在配置文件中修改要排除的文件"><a href="#3-5-4-在配置文件中修改要排除的文件" class="headerlink" title="3.5.4 在配置文件中修改要排除的文件"></a><strong>3.5.4</strong> <strong>在配置文件中修改要排除的文件</strong></h3><h4 id="第一个里程碑：-编写修改服务端配置文件"><a href="#第一个里程碑：-编写修改服务端配置文件" class="headerlink" title="第一个里程碑： 编写修改服务端配置文件"></a>第一个里程碑： 编写修改服务端配置文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/rsyncd.conf</span><br><span class="line">[nfsdata]</span><br><span class="line">comment = &quot;nfsdata dir by clsn&quot;</span><br><span class="line">path = /backup/nfsdata</span><br><span class="line">exclude=a/3.txt b c</span><br></pre></td></tr></table></figure><h4 id="第二个里程碑：重启rsync服务"><a href="#第二个里程碑：重启rsync服务" class="headerlink" title="第二个里程碑：重启rsync服务"></a>第二个里程碑：重启rsync服务</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">killall rsync &amp;&amp; sleep 1 &amp;&amp; rsync --daemon</span><br></pre></td></tr></table></figure><h4 id="第三里程碑：-进行测试"><a href="#第三里程碑：-进行测试" class="headerlink" title="第三里程碑： 进行测试"></a>第三里程碑： 进行测试</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 data]# rsync -avz /data/  rsync_backup@172.16.1.41::nfsdata</span><br><span class="line">sending incremental file list</span><br><span class="line">./</span><br><span class="line">a/</span><br><span class="line">a/1.txt</span><br><span class="line">a/2.txt</span><br><span class="line">skipping daemon-excluded file &quot;a/3.txt&quot;</span><br><span class="line">skipping daemon-excluded directory &quot;b&quot;</span><br><span class="line">*** Skipping any contents from this failed directory ***</span><br><span class="line">skipping daemon-excluded directory &quot;c&quot;</span><br><span class="line">*** Skipping any contents from this failed directory ***</span><br><span class="line">d/</span><br><span class="line">d/1.txt</span><br><span class="line">d/2.txt</span><br><span class="line">d/3.txt</span><br><span class="line">sent 407 bytes  received 116 bytes  1046.00 bytes/sec</span><br><span class="line">total size is 0  speedup is 0.00</span><br><span class="line">rsync error: some files/attrs were not transferred (see previous errors) (code 23) at main.c(1039) [sender=3.0.6]</span><br></pre></td></tr></table></figure><h2 id="3-6-守护进程来创建备份目录"><a href="#3-6-守护进程来创建备份目录" class="headerlink" title="3.6 守护进程来创建备份目录"></a><strong>3.6</strong> <strong>守护进程来创建备份目录</strong></h2><p>通过客户端命令创建服务端备份目录中子目录</p><ol><li><p>推送&#x2F;etc&#x2F;services文件到 服务器&#x2F;backup&#x2F;sda&#x2F;目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 ~]# rsync -avzP /etc/services rsync_backup@172.16.1.41::backup/dba/</span><br><span class="line">sending incremental file list</span><br><span class="line">created directory dba</span><br><span class="line">services</span><br><span class="line">      641020 100%   19.34MB/s    0:00:00 (xfer#1, to-check=0/1)</span><br></pre></td></tr></table></figure></li><li><p>推送&#x2F;etc&#x2F;services文件到 服务器&#x2F;backup&#x2F;sa&#x2F;目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sent 127417 bytes  received 27 bytes  254888.00 bytes/sec</span><br><span class="line">total size is 641020  speedup is 5.03</span><br><span class="line">[root@nfs01 ~]# rsync -avzP /etc/services rsync_backup@172.16.1.41::backup/sa/</span><br><span class="line">sending incremental file list</span><br><span class="line">created directory sa</span><br><span class="line">services</span><br><span class="line">      641020 100%   19.34MB/s    0:00:00 (xfer#1, to-check=0/1)</span><br></pre></td></tr></table></figure></li><li><p>推送&#x2F;etc&#x2F;services文件到 服务器&#x2F;backup&#x2F;dev&#x2F;目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sent 127417 bytes  received 27 bytes  254888.00 bytes/sec</span><br><span class="line">total size is 641020  speedup is 5.03</span><br><span class="line">[root@nfs01 ~]# rsync -avzP /etc/services rsync_backup@172.16.1.41::backup/dev/</span><br><span class="line">sending incremental file list</span><br><span class="line">created directory dev</span><br><span class="line">services</span><br><span class="line">      641020 100%   18.71MB/s    0:00:00 (xfer#1, to-check=0/1)</span><br><span class="line"> </span><br><span class="line">sent 127417 bytes  received 27 bytes  254888.00 bytes/sec</span><br><span class="line">total size is 641020  speedup is 5.03</span><br></pre></td></tr></table></figure></li><li><p><strong>检查结果：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup backup]# tree</span><br><span class="line">.</span><br><span class="line">├── dba</span><br><span class="line">│   └── services</span><br><span class="line">├── dev</span><br><span class="line">│   └── services</span><br><span class="line">└── sa</span><br><span class="line">    └── services</span><br></pre></td></tr></table></figure><blockquote><p>说明：</p><p><em>a 目标目录名称后要加上 “&#x2F;“, 表示创建目录，否则变为修改传输文件名称了</em></p><p><em>b</em> <em>利用客户端创建服务备份子目录时，只能创建一级子目录<strong>，不能创建多级子目录</strong>。</em></p></blockquote></li></ol><h2 id="3-7-守护进程的访问控制配置"><a href="#3-7-守护进程的访问控制配置" class="headerlink" title="3.7 守护进程的访问控制配置"></a><strong>3.7</strong> <strong>守护进程的访问控制配置</strong></h2><h3 id="第一个里程碑：在服务端配置文件，编写白名单策略或黑名单策略（只能取其一）"><a href="#第一个里程碑：在服务端配置文件，编写白名单策略或黑名单策略（只能取其一）" class="headerlink" title="第一个里程碑：在服务端配置文件，编写白名单策略或黑名单策略（只能取其一）"></a>第一个里程碑：在服务端配置文件，编写白名单策略或黑名单策略（只能取其一）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/rsyncd.conf</span><br><span class="line">    hosts allow = 172.16.1.0/24</span><br><span class="line">    #hosts deny = 0.0.0.0/32</span><br></pre></td></tr></table></figure><p>关于访问控制的说明：</p><ol><li><p>白名单和黑名单同时存在时，默认控制策略为不匹配的传输数据信息全部放行</p></li><li><p>白名单单一存在时，默认控制策略为不匹配的传输数据信息全部禁止</p></li><li><p>黑名单单一存在时，默认控制策略为不匹配的传输数据信息全部放行</p></li><li><p>白名单优先于黑名单</p></li></ol><blockquote><p>全局变量修改控制策略信息，rsync服务必须重启</p></blockquote><h3 id="第二个里程碑：客户端进行测试"><a href="#第二个里程碑：客户端进行测试" class="headerlink" title="第二个里程碑：客户端进行测试"></a>第二个里程碑：客户端进行测试</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 backup]# rsync -avz /etc/services rsync_backup@10.0.0.41::data</span><br><span class="line">@ERROR: Unknown module &#x27;data&#x27;</span><br><span class="line">rsync error: error starting client-server protocol (code 5) at main.c(1503) [sender=3.0.6]</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">[root@nfs01 backup]# rsync -avz /etc/services sync_backup@172.16.1.41::data</span><br><span class="line">sending incremental file list</span><br><span class="line">sent 29 bytes  received 8 bytes  74.00 bytes/sec</span><br><span class="line">total size is 641020  speedup is 17324.86</span><br></pre></td></tr></table></figure><h2 id="3-8-守护进程无差异同步配置"><a href="#3-8-守护进程无差异同步配置" class="headerlink" title="3.8 守护进程无差异同步配置"></a><strong>3.8</strong> <strong>守护进程无差异同步配置</strong></h2><h3 id="3-8-1-什么是无差异："><a href="#3-8-1-什么是无差异：" class="headerlink" title="3.8.1 什么是无差异："></a><strong>3.8.1</strong> <strong>什么是无差异：</strong></h3><ul><li><p>推模式：我有什么，你就有什么；我没有，你也不能有</p></li><li><p>拉模式：你有什么，我就有什么；你没有，我也不能有</p></li></ul><blockquote><p>总结：<strong>服务端客户端数据完全一致（一模一样）</strong></p></blockquote><h3 id="3-8-2-实现无差异同步方法"><a href="#3-8-2-实现无差异同步方法" class="headerlink" title="3.8.2 实现无差异同步方法"></a><strong>3.8.2</strong> <strong>实现无差异同步方法</strong></h3><h4 id="第一个里程碑：-创建实验环境"><a href="#第一个里程碑：-创建实验环境" class="headerlink" title="第一个里程碑： 创建实验环境"></a>第一个里程碑： 创建实验环境</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 ~]# ll /data/</span><br><span class="line">total 16</span><br><span class="line">drwxr-xr-x 2 root root 4096 Oct 12 10:29 a</span><br><span class="line">drwxr-xr-x 2 root root 4096 Oct 12 10:40 b</span><br><span class="line">drwxr-xr-x 2 root root 4096 Oct 12 10:29 c</span><br><span class="line">drwxr-xr-x 2 root root 4096 Oct 12 10:29 d</span><br></pre></td></tr></table></figure><h4 id="第二个里程：进行第一次数据同步"><a href="#第二个里程：进行第一次数据同步" class="headerlink" title="第二个里程：进行第一次数据同步"></a>第二个里程：进行第一次数据同步</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 ~]# rsync -avz --delete  /data/ rsync_backup@172.16.1.41::backup/</span><br><span class="line">sending incremental file list</span><br><span class="line">./</span><br><span class="line">a/</span><br><span class="line">a/1.txt</span><br><span class="line">a/2.txt</span><br><span class="line">a/3.txt</span><br><span class="line">b/</span><br><span class="line">b/1.txt</span><br><span class="line">b/2.txt</span><br><span class="line">b/3.txt</span><br><span class="line">c/</span><br><span class="line">c/1.txt</span><br><span class="line">c/2.txt</span><br><span class="line">c/3.txt</span><br><span class="line">d/</span><br><span class="line">d/1.txt</span><br><span class="line">d/2.txt</span><br><span class="line">d/3.txt</span><br><span class="line">sent 669 bytes  received 255 bytes  1848.00 bytes/sec</span><br><span class="line">total size is 0  speedup is 0.00</span><br></pre></td></tr></table></figure><h4 id="第三个里程：删除指定目录，并添加指定文件，测试无差异功能"><a href="#第三个里程：删除指定目录，并添加指定文件，测试无差异功能" class="headerlink" title="第三个里程：删除指定目录，并添加指定文件，测试无差异功能"></a>第三个里程：删除指定目录，并添加指定文件，测试无差异功能</h4><p>删除客户端中的 a&#x2F; 目录，再进行无差异传输</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 data]# rm a/ -rf</span><br><span class="line">[root@nfs01 data]# rsync -avz --delete  /data/ rsync_backup@172.16.1.41::backup/</span><br><span class="line">sending incremental file list</span><br><span class="line">./</span><br><span class="line">deleting a/3.txt</span><br><span class="line">deleting a/2.txt</span><br><span class="line">deleting a/1.txt</span><br><span class="line">deleting a/</span><br><span class="line">sent 181 bytes  received 14 bytes  390.00 bytes/sec</span><br><span class="line">total size is 0  speedup is 0.00</span><br></pre></td></tr></table></figure><h3 id="【注意】无差异同步方法的应用"><a href="#【注意】无差异同步方法的应用" class="headerlink" title="【注意】无差异同步方法的应用"></a>【注意】无差异同步方法的应用</h3><ol><li><p>实现储存数据与备份数据完全一致（<strong>慎用</strong>）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rsync -avz --delete  /data/ rsync_backup@172.16.1.41::backup /</span><br></pre></td></tr></table></figure></li><li><p>快速删除大文件数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /null      --创建出一个空目录。</span><br><span class="line">rsync -avz --delete /null/ /bigdata/</span><br><span class="line"># 删除效率高于 rm -rf /bigdata</span><br></pre></td></tr></table></figure></li></ol><h2 id="3-9-守护进程的列表功能配置"><a href="#3-9-守护进程的列表功能配置" class="headerlink" title="3.9 守护进程的列表功能配置"></a><strong>3.9</strong> <strong>守护进程的列表功能配置</strong></h2><h3 id="第一个里程碑：-在服务端配置文件中开启list列表功能"><a href="#第一个里程碑：-在服务端配置文件中开启list列表功能" class="headerlink" title="第一个里程碑： 在服务端配置文件中开启list列表功能"></a>第一个里程碑： 在服务端配置文件中开启list列表功能</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# vim /etc/rsyncd.conf</span><br><span class="line">list = true</span><br></pre></td></tr></table></figure><h3 id="第二个里程碑：重启rsync服务-1"><a href="#第二个里程碑：重启rsync服务-1" class="headerlink" title="第二个里程碑：重启rsync服务"></a>第二个里程碑：重启rsync服务</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# killall rsync &amp;&amp; sleep 1 &amp;&amp; rsync --daemon</span><br></pre></td></tr></table></figure><h3 id="第三个里程碑：-客户端查看服务端模块信息"><a href="#第三个里程碑：-客户端查看服务端模块信息" class="headerlink" title="第三个里程碑： 客户端查看服务端模块信息"></a>第三个里程碑： 客户端查看服务端模块信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 data]# rsync rsync_backup@172.16.1.41::</span><br><span class="line">backup         &quot;backup dir by clsn&quot;</span><br><span class="line">nfsdata        &quot;nfsdata dir by clsn&quot;</span><br><span class="line">nfsbackup      &quot;nfsbackup dir by clsn&quot;</span><br></pre></td></tr></table></figure><blockquote><p>说明：</p><p>为了提升备份服务器安全性，建议关闭list列表功能</p></blockquote><h2 id="4-0-备份文件完整性检查"><a href="#4-0-备份文件完整性检查" class="headerlink" title="4.0 备份文件完整性检查"></a><strong>4.0</strong> <strong>备份文件完整性检查</strong></h2><h3 id="4-0-1客户端生成"><a href="#4-0-1客户端生成" class="headerlink" title="4.0.1客户端生成"></a>4.0.1客户端生成</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">md5sum ljq.txt                   //生成这个文件的md5效验值</span><br></pre></td></tr></table></figure><h3 id="4-0-2服务端对比效验"><a href="#4-0-2服务端对比效验" class="headerlink" title="4.0.2服务端对比效验"></a>4.0.2服务端对比效验</h3><p>md5sum -c 指纹文件命令执行原理</p><ol><li>打开一个指纹文件，将信息记录到缓存中</li><li>根据指纹文件的路径，生成md5的数值</li><li>将新生成md5数值和原有指纹文件数值进行比较</li><li>如过相同显示结果为ok，如果不同显示failed</li></ol><h2 id="4-1-守护进程服务企业应用"><a href="#4-1-守护进程服务企业应用" class="headerlink" title="4.1 守护进程服务企业应用"></a><strong>4.1</strong> <strong>守护进程服务企业应用</strong></h2><p>守护进程多模块功能配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[backup]                                                                   </span><br><span class="line">comment = &quot;backup dir by clsn&quot;                                   </span><br><span class="line">path = /backup </span><br><span class="line">[dba]                                                                   </span><br><span class="line">comment = &quot;backup dir by clsn&quot;                                   </span><br><span class="line">path = /dba</span><br><span class="line">[dev]                                                                   </span><br><span class="line">comment = &quot;backup dir by clsn&quot;                                   </span><br><span class="line">path = /dev</span><br></pre></td></tr></table></figure><blockquote><p>ps：可以划分多个部门，不同部门的主机分布存放不同的文件夹下</p></blockquote><p>守护进程的排除功能实践</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ljq@LN /]$mkdir -p rsync_exclude</span><br><span class="line">[ljq@LN /]$mkdir -p rsync_exclude/&#123;a..c&#125;</span><br><span class="line">[ljq@LN /]$touch rsync_exclude/&#123;a..c&#125;/&#123;1..3&#125;.txt</span><br><span class="line">[ljq@LN /]$tree rsync_exclude/</span><br><span class="line">rsync_exclude/</span><br><span class="line">├── a</span><br><span class="line">│   ├── 1.txt</span><br><span class="line">│   ├── 2.txt</span><br><span class="line">│   └── 3.txt</span><br><span class="line">├── b</span><br><span class="line">│   ├── 1.txt</span><br><span class="line">│   ├── 2.txt</span><br><span class="line">│   └── 3.txt</span><br><span class="line">└── c</span><br><span class="line">├── 1.txt</span><br><span class="line">├── 2.txt</span><br><span class="line">└── 3.txt</span><br><span class="line"></span><br><span class="line">3 directories, 9 files</span><br></pre></td></tr></table></figure><h3 id="4-1-1-需求1"><a href="#4-1-1-需求1" class="headerlink" title="4.1.1 需求1"></a>4.1.1 需求1</h3><p>将&#x2F;rsync_exlude目录下 a目录数据全部备份 b目录不要备份1.txt文件 c整个目录不要做备份</p><ol><li><p>绝对路径</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rsync -avz /rsync_excluude --exclude=/rsync_exclude/b/1.txt --exclude=/rsync_exclude/c/ rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password</span><br></pre></td></tr></table></figure></li><li><p>相对路径</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rsync -avz /rsync_excluude --exclude=b/1.txt --exclude=c/ rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password</span><br></pre></td></tr></table></figure></li></ol><h2 id="4-2企业中应用实例，及发送邮箱配置"><a href="#4-2企业中应用实例，及发送邮箱配置" class="headerlink" title="4.2企业中应用实例，及发送邮箱配置"></a><strong>4.2</strong>企业中应用实例，及发送邮箱配置</h2><h3 id="4-2-1-实现发送邮件"><a href="#4-2-1-实现发送邮件" class="headerlink" title="4.2.1 实现发送邮件"></a>4.2.1 实现发送邮件</h3><ol><li><p>配置163企业邮箱</p></li><li><p>编写Linux服务邮件相关配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/mail.rc</span><br><span class="line">set from=13164646190@163.com smtp=smtp.163.com</span><br><span class="line">set smtp-auth-user=13164646190@163.com smtp-auth-password=授权密码 smtp-auth=login</span><br></pre></td></tr></table></figure></li><li><p>重启自带的邮件服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart postfix.service</span><br></pre></td></tr></table></figure></li><li><p>发送邮件测试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;邮件发送测试&quot; | mail -s “邮件测试”目标邮箱</span><br><span class="line">mail -s “邮件测试”目标邮箱 &lt; /etc/hosts   //以hosts文件为文件内容发送</span><br></pre></td></tr></table></figure></li></ol><h3 id="4-2-2编写全网备份脚本"><a href="#4-2-2编写全网备份脚本" class="headerlink" title="4.2.2编写全网备份脚本"></a>4.2.2编写全网备份脚本</h3><p>客户端脚本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /server/scripts -p     //建立一个专门放脚本的文件</span><br><span class="line">vim backup.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">Backup_dir=&quot;/backup&quot;      //定义变量，方便更换</span><br><span class="line">IP_info=$(hostname -i)</span><br><span class="line"></span><br><span class="line">#create backup dir</span><br><span class="line">mkdir -p $Backup_dir/$IP_info/</span><br><span class="line"></span><br><span class="line">#tar backup data</span><br><span class="line">cd /</span><br><span class="line">tar zcvf $Backup_dir/$IP_info/date_$(date +%F_week%w -d -1day).tar.gz /etc/hosts</span><br><span class="line"></span><br><span class="line">#del 7 day ago date</span><br><span class="line">find $Backup_dir -type f -mtime +7 | xargs rm 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">#create finger file</span><br><span class="line">find $Backup_dir/ -type f -mtime -1 ! -name &quot;finger*&quot; | xargs md5sum &gt; $Backup_dir/$IP_info/finger.txt</span><br><span class="line"></span><br><span class="line">#backup push data info</span><br><span class="line">rsync -avz $Backup_dir/ rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password</span><br></pre></td></tr></table></figure><p>服务端脚本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /server/scripts -p  </span><br><span class="line">mkdir -p /backup/10.0.0.31/</span><br><span class="line">vim backup-server.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">#del 180 day ago data</span><br><span class="line">ind /backup/ -type f -mtime +180 ! -name &quot;*week1.tar.gz&quot; | xargs rm 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">#check backup data</span><br><span class="line">find /backup/ -type f -name &quot;finger.txt&quot; | xargs md5sum -c &gt;/tmp/check.txt</span><br><span class="line"></span><br><span class="line">#send check mail</span><br><span class="line">mail -s &quot;check backup info for $(date +%F)&quot; 2044307912@qq.com&lt;/tmp/check.txt</span><br></pre></td></tr></table></figure><h3 id="4-2-3-实现自动完成全网数据备份（定时任务）"><a href="#4-2-3-实现自动完成全网数据备份（定时任务）" class="headerlink" title="4.2.3 实现自动完成全网数据备份（定时任务）"></a>4.2.3 实现自动完成全网数据备份（定时任务）</h3><p>客户端定时任务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br><span class="line"># backup data</span><br><span class="line">0 0 * * * /bin/sh  /server/scripts/backup.sh &amp;&gt;/dev/null</span><br></pre></td></tr></table></figure><p>服务端定时任务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br><span class="line"># backup data</span><br><span class="line">0 5 * * * /bin/sh  /server/scripts/backup-server.sh &amp;&gt;/dev/null</span><br></pre></td></tr></table></figure><h1 id="第4章-小结"><a href="#第4章-小结" class="headerlink" title="第4章 小结"></a><strong>第</strong>4章 <strong>小结</strong></h1><p>在使用rsync备份目录时</p><ol><li>备份目录后面有 &#x2F; – &#x2F;ljqfile&#x2F; ： 只会将目录下面的内容进行备份传输</li><li>备份目录后面没有 &#x2F; – &#x2F;ljqfile ： 会将目录本身及下面的内容进行备份传输</li></ol><p>rsync服务部署安装过程</p><ol><li>下载安装软件 yum</li><li>编写配置文件</li><li>搭建服务环境 备份的目录&#x2F;目录权限</li><li>启动服务程序  开机自动启动</li><li>测试服务功能</li></ol><h1 id="第5章-常见问题"><a href="#第5章-常见问题" class="headerlink" title="第5章 常见问题"></a><strong>第</strong>5章 <strong>常见问题</strong></h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@nfs01 tmp]# rsync -avz /etc/hosts  rsync_backup@172.16.1.41::backup</span><br><span class="line">Password:</span><br><span class="line">sending incremental file list</span><br><span class="line">hosts</span><br><span class="line">rsync: mkstemp &quot;.hosts.U5OCyR&quot; (in backup) failed: Permission denied (13)</span><br><span class="line">sent 200 bytes  received 27 bytes  13.76 bytes/sec</span><br><span class="line">total size is 371  speedup is 1.63</span><br><span class="line">rsync error: some files/attrs were not transferred (see previous errors) (code 23) at main.c(1039) [sender=3.0.6]</span><br></pre></td></tr></table></figure><blockquote><p>说明：备份目录权限设置不正确</p></blockquote><p>解决办法：</p><p>将服务端的备份存放目录（path值），属主和属组修改为rsync。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@backup ~]# chown -R rsync.rsync /backup/ </span><br></pre></td></tr></table></figure><p><img src="/post/ea302d03.htm/%E9%97%AE%E9%A2%981.png" alt="问题1"></p><p><img src="/post/ea302d03.htm/%E9%97%AE%E9%A2%982.png" alt="问题2"></p><p><img src="/post/ea302d03.htm/%E9%97%AE%E9%A2%983.png" alt="问题3"></p><p><img src="/post/ea302d03.htm/%E9%97%AE%E9%A2%984.png" alt="问题4"></p><p><img src="/post/ea302d03.htm/%E9%97%AE%E9%A2%985.png" alt="问题5"></p><p><img src="/post/ea302d03.htm/%E9%97%AE%E9%A2%986.png" alt="问题6"></p><p><img src="/post/ea302d03.htm/%E9%97%AE%E9%A2%987.png" alt="问题7"></p><p><img src="/post/ea302d03.htm/%E9%97%AE%E9%A2%988.png" alt="问题8"></p><p><img src="/post/ea302d03.htm/%E9%97%AE%E9%A2%989.png" alt="问题9"></p>]]></content>
    
    
    <summary type="html">学习rsync，并实现部署rsync备份服务项目，以及常见问题</summary>
    
    
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/categories/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="Linux" scheme="http://blog.cndis.cn/tags/Linux/"/>
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/tags/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    <category term="rsync" scheme="http://blog.cndis.cn/tags/rsync/"/>
    
    <category term="备份服务项目" scheme="http://blog.cndis.cn/tags/%E5%A4%87%E4%BB%BD%E6%9C%8D%E5%8A%A1%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>综合架构详解&amp;模板机配置</title>
    <link href="http://blog.cndis.cn/post/49c674ff.html"/>
    <id>http://blog.cndis.cn/post/49c674ff.html</id>
    <published>2022-08-04T09:22:20.000Z</published>
    <updated>2022-12-07T07:26:25.141Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-整体目录"><a href="#第一章-整体目录" class="headerlink" title="第一章 整体目录"></a>第一章 整体目录</h1><ol><li>备份服务</li><li>储存服务</li><li>实时同步服务</li><li>批量管理服务</li><li>网站服务（web服务）</li><li>LNMP网站架构</li><li>负载均衡反向代理服务</li><li>高可用服务</li><li>监控服务</li><li>跳板机服务</li><li>防火墙服务</li></ol><h1 id="第二章-中小规模网站架构组成"><a href="#第二章-中小规模网站架构组成" class="headerlink" title="第二章 中小规模网站架构组成"></a>第二章 中小规模网站架构组成</h1><ol><li><p>顾客–用户</p><p>访问网站的人员</p></li><li><p>保安–防火墙（firewalld）</p><p>进行访问策略控制</p></li><li><p>迎宾–负载均衡服务器（nginx）</p><p>对用户的访问请求进行调度处理</p></li><li><p>服务员–web服务器（nginx）</p><p>处理用户的请求</p></li><li><p>厨师–数据库服务器（mysql）</p><p>存储字符数据（耳机 500 索尼 黑色 北京地址 订单时间2022-08-04 17:22:20）</p></li><li><p>厨师–存储服务器（nfs）</p><p>存储图片 音频 视频 附件等数据信息</p></li><li><p>厨师–备份服务器（rsync+crond-定时服务 rsync+sersync-实时备份）</p><p>存储网站所有服务器的重要数据</p></li><li><p>厨师–缓存服务器（memcache redis mongodb）</p><ul><li>将数据信息存储到内存中</li><li>减缓服务器的压力</li></ul></li><li><p>经理–批量管理服务器（ansible）</p><p>批量管理多台服务器主机</p></li></ol><h1 id="第三章-部署网站架构"><a href="#第三章-部署网站架构" class="headerlink" title="第三章 部署网站架构"></a>第三章 部署网站架构</h1><h2 id="3-1-需要解决网站架构单点问题"><a href="#3-1-需要解决网站架构单点问题" class="headerlink" title="3.1 需要解决网站架构单点问题"></a>3.1 需要解决网站架构单点问题</h2><ol><li><p>迎宾</p><p>高可用服务——keepalived</p></li><li><p>数据库</p><p>高可用服务——mha</p></li><li><p>储存服务</p><p>高可用服务——keepalived实现</p><p>高可用服务——分布式储存</p></li><li><p>备份服务</p><p>公司数据如何备份：</p><ol><li>利用开源软件实现数据备份           rsync（免费）</li><li>利用企业网盘进行数据备份           七牛云储存</li><li>利用自建备份存储架构          两地三中心</li></ol></li><li><p>缓存服务</p><p>高可用服务 —– 缓存服务器集群 &#x2F; 哨兵模式</p></li></ol><h2 id="3-2-内部员工如何远程访问架构"><a href="#3-2-内部员工如何远程访问架构" class="headerlink" title="3.2 内部员工如何远程访问架构"></a>3.2 内部员工如何远程访问架构</h2><p>部署搭建VPN服务器 PPTP VPN</p><h2 id="3-3-内部员工操作管理架构服务器要进行审计"><a href="#3-3-内部员工操作管理架构服务器要进行审计" class="headerlink" title="3.3 内部员工操作管理架构服务器要进行审计"></a>3.3 内部员工操作管理架构服务器要进行审计</h2><p>跳板机服务器 jumpserver</p><h2 id="3-4-架构中服务器出现问题需要进行提前报警告知"><a href="#3-4-架构中服务器出现问题需要进行提前报警告知" class="headerlink" title="3.4 架构中服务器出现问题需要进行提前报警告知"></a>3.4 架构中服务器出现问题需要进行提前报警告知</h2><p>部署监控服务器  zabbix</p><h1 id="第四章-综合架构规划"><a href="#第四章-综合架构规划" class="headerlink" title="第四章 综合架构规划"></a>第四章 综合架构规划</h1><p>主机名称和IP地址规划</p><table><thead><tr><th>功能</th><th>名称</th><th>外网地址</th><th>内网地址</th><th>软件</th></tr></thead><tbody><tr><td>防火墙服务</td><td>firewalld</td><td>10.0.0.81</td><td>172.16.1.81</td><td>firewalld</td></tr><tr><td>防火墙服务</td><td>lb01</td><td>10.0.0.5</td><td>172.16.1.5</td><td>nginx keepalived</td></tr><tr><td>防火墙服务</td><td>lb02</td><td>10.0.0.6</td><td>172.16.1.6</td><td>nginx  keepalived</td></tr><tr><td>web服务器</td><td>web01</td><td>10.0.0.7</td><td>172.16.1.7</td><td>nginx</td></tr><tr><td>web服务器</td><td>web02</td><td>10.0.0.8</td><td>172.16.1.8</td><td>nginx</td></tr><tr><td>web服务器</td><td>web03</td><td>10.0.0.9</td><td>172.16.1.9</td><td>nginx</td></tr><tr><td>数据库服务器</td><td>db01</td><td>10.0.0.51</td><td>172.16.1.51</td><td>mysql(慢)  mariaDB</td></tr><tr><td>储存服务器</td><td>nfs01</td><td>10.0.0.31</td><td>172.16.1.31</td><td>nfs</td></tr><tr><td>备份服务器</td><td>backup</td><td>10.0.0.41</td><td>172.16.1.41</td><td>rsync</td></tr><tr><td>批量管理服务器</td><td>m01</td><td>10.0.0.61</td><td>172.16.1.61</td><td>ansible</td></tr><tr><td>跳板机服务器</td><td>jumpserver</td><td>10.0.0.71(61)</td><td>172.16.1.71</td><td>jumpserver</td></tr><tr><td>监控服务器</td><td>zabbix</td><td>10.0.0.72(61)</td><td>172.16.1.72</td><td>zabbix</td></tr></tbody></table><h1 id="第五章-优化配置模板机"><a href="#第五章-优化配置模板机" class="headerlink" title="第五章 优化配置模板机"></a>第五章 优化配置模板机</h1><ol><li><p>模板机优化配置—hosts文件配置</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">\cp /etc/hosts&#123;,.bak&#125;</span><br><span class="line">cat &gt; /etc/hosts&lt;&lt;EOF</span><br><span class="line">::1    localhost localhost.localdomain   localhost6 localhost6.localdomain6</span><br><span class="line">127.0.0.1      localhost  localhost.localdomain   localhost4    localhost4.localdomain4</span><br><span class="line">172.16.1.5           lb01</span><br><span class="line">172.16.1.6           lb02</span><br><span class="line">172.16.1.7           web01</span><br><span class="line">172.16.1.8           web02</span><br><span class="line">172.16.1.9           web03</span><br><span class="line">172.16.1.51         db01</span><br><span class="line">172.16.1.31         nfs01</span><br><span class="line">172.16.1.41         backup</span><br><span class="line">172.16.1.61         m01</span><br><span class="line">172.16.1.71         jumpserver</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>模板机优化配置—更改yum源</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup </span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">mv /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel.repo.backup</span><br><span class="line">mv /etc/yum.repos.d/epel-testing.repo /etc/yum.repos.d/epel-testing.repo.backup</span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br></pre></td></tr></table></figure><blockquote><p>ps</p><p>yum repolist 列出yum源信息；</p></blockquote></li><li><p>模板机优化配置—关闭selinux</p><p>请看Linux运维——&gt;<a href="https://blog.cndis.cn/2021/09/16/Linux%E8%BF%90%E7%BB%B4/%E5%BC%80%E5%85%B3%E9%98%B2%E7%81%AB%E5%A2%99&%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF/">开关防火墙&amp;软件包开机自启</a></p></li><li><p>模板机优化配置—关闭iptables（friewalld）</p><p>请看Linux运维——&gt;<a href="https://blog.cndis.cn/2021/09/16/Linux%E8%BF%90%E7%BB%B4/%E5%BC%80%E5%85%B3%E9%98%B2%E7%81%AB%E5%A2%99&%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF/">开关防火墙&amp;软件包开机自启</a></p></li><li><p>安装的软件</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y wget vim net-tools policycoreutils-pyt</span><br></pre></td></tr></table></figure></li><li><p>模板机优化配置—提权ljq用户可以sudo（可选配置）</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">useradd ljq</span><br><span class="line">echo 123456 | passwd --stdin ljq</span><br><span class="line">\cp /etc/sudoers /etc/sudoers.ori</span><br><span class="line">echo &quot;ljq ALL=(ALL) NOPASSWD:ALL&quot; &gt;&gt;/etc/sudoers</span><br><span class="line">tail -1 /etc/sudoers</span><br><span class="line">visudo -c</span><br></pre></td></tr></table></figure></li><li><p>模板机优化配置—英文字符集</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">localectl set-locale LANG=&quot;en_US.UTF-8&quot;</span><br></pre></td></tr></table></figure></li><li><p>模板机优化配置—时间同步</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">timedatectl set-timezone Asia/Shanghai  #设置时区为上海</span><br><span class="line">ntpdate ntp1.aliyun.com</span><br><span class="line">yum install -y ntpdate</span><br><span class="line">echo &#x27;#time sync by lidao at 2017-03-08&#x27; &gt;&gt;/var/spool/cron/root</span><br><span class="line">echo &#x27;*/5 * * * * /usr/sbin/ntpdate pool.ntp.org &gt; /dev/null 2&gt;&amp;1&#x27; &gt;&gt;/var/spool/cron/root</span><br><span class="line">crontab -l</span><br></pre></td></tr></table></figure></li><li><p>模板机优化配置—加大文件描述</p><p>加大文件描述（加大进程的加载，比如nofile默认是打开1024个文件，当程序运行足够多时，到达1024后再打开程序将无法运行）</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &#x27;*                  -                       nofile                              65535&#x27; &gt;&gt;/etc/security/limits.conf</span><br><span class="line">tail -l /etc/security/limits.conf</span><br></pre></td></tr></table></figure><blockquote><p>说明</p><p>一个服务程序运行起来，会打开相应的文件</p><p>crond定时任务服务 — systemctl start crond — 打开相应的文件</p><p>&#x2F;var&#x2F;spool&#x2F;cron&#x2F;root          —加载打开配置文件</p><p>&#x2F;var&#x2F;log&#x2F;cron                —加载打开日志文件</p></blockquote></li><li><p>模板机优化配置—安装其它小软件</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y lrzsz nmap tree dos2nuix nc telnet slof ntpdate bash-completion bash-completion-extra</span><br></pre></td></tr></table></figure></li><li><p>模板机优化配置—ssh连接优化</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># vim /etc/ssh/sshd_config</span><br><span class="line">79   GSSAPICleanupCredentials no</span><br><span class="line">112 UseDNS no</span><br><span class="line"># vi /etc/hosts</span><br><span class="line">xxx.xxx.xxx.xxx  [主机名]</span><br><span class="line"># systemctl restart sshd</span><br></pre></td></tr></table></figure></li></ol><h1 id="第六章-克隆后的主机配置"><a href="#第六章-克隆后的主机配置" class="headerlink" title="第六章 克隆后的主机配置"></a>第六章 克隆后的主机配置</h1><ol><li><p>修改主机名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname backup</span><br></pre></td></tr></table></figure></li><li><p>修改主机地址</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep 200  /etc/sysconfig/network-scripts/ifcfg-eth[01]        查看原文件eth0和eth1中是否有其他重复的数字              </span><br><span class="line">sed -i &#x27;s#200#41#g&#x27;  /etc/sysconfig/network-scripts/ifcfg-eth[01]   进行ip的替换</span><br><span class="line">grep 41  /etc/sysconfig/network-scripts/ifcfg-eth[01]         查看替换结果</span><br><span class="line">sed -i &#x27;/UUID/d&#x27; /etc/sysconfig/network-scripts/ifcfg-eth[01]               删除UUID</span><br><span class="line">grep UUID  /etc/sysconfig/network-scripts/ifcfg-eth[01]        查看是否删除UUID</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>ps</p><p>一台一台顺序启动，进行修改，不要同时启动</p></blockquote></li></ol><h1 id="第七章-综合架构基本小结"><a href="#第七章-综合架构基本小结" class="headerlink" title="第七章 综合架构基本小结"></a>第七章 综合架构基本小结</h1><ol><li><p>网站架构组成</p></li><li><p>网站架构规划（主机名称 主机地址 系统优化(脚本)）</p></li><li><p>虚拟主机克隆操作</p></li><li><ol><li>关闭主机克隆</li><li>克隆好的主机一台一台启动按顺序启动，修改配置（主机名称 主机地址）</li></ol></li><li><p>rsync备份服务</p></li><li><ol><li>rsync命令语法 1v4</li><li>rsync语法格式 本地备份 远程备份</li></ol></li></ol><h2 id="7-1-综合架构的组成部分"><a href="#7-1-综合架构的组成部分" class="headerlink" title="7.1 综合架构的组成部分"></a>7.1 综合架构的组成部分</h2><p>前端：防火墙、负载均衡、web服务器</p><p>后端：数据库、储存服务、缓存服务、备份服务</p><p>扩展：批量管理、跳板机、监控服务、VPN服务</p><h1 id="第八章-备份服务部分"><a href="#第八章-备份服务部分" class="headerlink" title="第八章 备份服务部分"></a>第八章 备份服务部分</h1><p>请进入Linux服务&gt;rsync服务</p><h1 id="第九章-实现发送邮件"><a href="#第九章-实现发送邮件" class="headerlink" title="第九章 实现发送邮件"></a>第九章 实现发送邮件</h1><ol><li><p>配置163企业邮箱</p></li><li><p>编写Linux服务邮件相关配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/mail.rc</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set from=13164646190@163.com smtp=smtp.163.com</span><br><span class="line">set smtp-auth-user=13164646190@163.com smtp-auth-password=授权密码 smtp-auth=login</span><br></pre></td></tr></table></figure></li><li><p>重启自带的邮件服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart postfix.service</span><br></pre></td></tr></table></figure></li><li><p>发送邮件测试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;邮件发送测试&quot; | mail -s “邮件测试”目标邮箱</span><br><span class="line"> mail -s “邮件测试”目标邮箱 &lt; /etc/hosts   //以hosts文件为文件内容发送</span><br></pre></td></tr></table></figure></li></ol><h1 id="第十章-编写全网备份脚本"><a href="#第十章-编写全网备份脚本" class="headerlink" title="第十章 编写全网备份脚本"></a>第十章 编写全网备份脚本</h1><h2 id="10-1-客户端脚本"><a href="#10-1-客户端脚本" class="headerlink" title="10.1 客户端脚本"></a>10.1 客户端脚本</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /server/scripts -p     //建立一个专门放脚本的文件</span><br><span class="line">vim backup.sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">Backup_dir=&quot;/backup&quot;                //定义变量，方便更换</span><br><span class="line">IP_info=$(hostname -i)</span><br><span class="line"></span><br><span class="line">#create backup dir</span><br><span class="line">mkdir -p $Backup_dir/$IP_info/</span><br><span class="line"></span><br><span class="line">#tar backup data</span><br><span class="line">cd /</span><br><span class="line">tar zcvf $Backup_dir/$IP_info/date_$(date +%F_week%w -d -1day).tar.gz /etc/hosts</span><br><span class="line"></span><br><span class="line">#del 7 day ago date</span><br><span class="line">find $Backup_dir -type f -mtime +7 | xargs rm 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">#create finger file</span><br><span class="line">find $Backup_dir/ -type f -mtime -1 ! -name &quot;finger*&quot; | xargs md5sum &gt; $Backup_dir/$IP_info/finger.txt</span><br><span class="line"></span><br><span class="line">#backup push data info</span><br><span class="line">rsync -avz $Backup_dir/ rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password</span><br></pre></td></tr></table></figure><h2 id="10-2-服务端脚本"><a href="#10-2-服务端脚本" class="headerlink" title="10.2 服务端脚本"></a>10.2 服务端脚本</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /server/scripts -p  </span><br><span class="line">mkdir -p /backup/10.0.0.31/</span><br><span class="line">vim backup-server.sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">#del 180 day ago data</span><br><span class="line">find /backup/ -type f -mtime +180 ! -name &quot;*week1.tar.gz&quot; | xargs rm 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">#check backup data</span><br><span class="line">find /backup/ -type f -name &quot;finger.txt&quot; | xargs md5sum -c &gt;/tmp/check.txt</span><br><span class="line"></span><br><span class="line">#send check mail</span><br><span class="line">mail -s &quot;check backup info for $(date +%F)&quot; 2044307912@qq.com&lt;/tmp/check.txt</span><br></pre></td></tr></table></figure><h1 id="第十一章-实现自动完成全网数据备份（定时任务）"><a href="#第十一章-实现自动完成全网数据备份（定时任务）" class="headerlink" title="第十一章 实现自动完成全网数据备份（定时任务）"></a>第十一章 实现自动完成全网数据备份（定时任务）</h1><h2 id="11-1-客户端定时任务"><a href="#11-1-客户端定时任务" class="headerlink" title="11.1 客户端定时任务"></a>11.1 客户端定时任务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br><span class="line"># backup data</span><br><span class="line">0 0 * * * /bin/sh  /server/scripts/backup.sh &amp;&gt;/dev/null</span><br></pre></td></tr></table></figure><h2 id="11-2-服务端定时任务"><a href="#11-2-服务端定时任务" class="headerlink" title="11.2 服务端定时任务"></a>11.2 服务端定时任务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br><span class="line"># backup data</span><br><span class="line">0 5 * * * /bin/sh  /server/scripts/backup-server.sh &amp;&gt;/dev/null</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">对于综合架构详解和模板机基本配置</summary>
    
    
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/categories/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="Linux" scheme="http://blog.cndis.cn/tags/Linux/"/>
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/tags/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    <category term="部署网站架构" scheme="http://blog.cndis.cn/tags/%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99%E6%9E%B6%E6%9E%84/"/>
    
    <category term="综合架构规划" scheme="http://blog.cndis.cn/tags/%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84%E8%A7%84%E5%88%92/"/>
    
    <category term="优化配置模板机" scheme="http://blog.cndis.cn/tags/%E4%BC%98%E5%8C%96%E9%85%8D%E7%BD%AE%E6%A8%A1%E6%9D%BF%E6%9C%BA/"/>
    
    <category term="综合架构" scheme="http://blog.cndis.cn/tags/%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    <category term="全网备份脚本" scheme="http://blog.cndis.cn/tags/%E5%85%A8%E7%BD%91%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC/"/>
    
    <category term="模板机" scheme="http://blog.cndis.cn/tags/%E6%A8%A1%E6%9D%BF%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>系统磁盘管理</title>
    <link href="http://blog.cndis.cn/post/6e0e19f0.html"/>
    <id>http://blog.cndis.cn/post/6e0e19f0.html</id>
    <published>2022-08-01T01:45:46.000Z</published>
    <updated>2022-12-07T07:26:25.140Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-简介"><a href="#第一章-简介" class="headerlink" title="第一章 简介"></a>第一章 简介</h1><ol><li>磁盘分区方法（备份服务器 - 存储服务器 - 数据库服务器）</li><li>实现挂载使用（实现开机自动挂载 &#x2F;etc&#x2F;fstab   &#x2F;etc.rc.local）</li><li>swap分区如何调整大小（案例：Java程序比较耗费内存 临时增加swap空间）</li><li>企业常见问题：磁盘空间满了如何处理</li></ol><h1 id="第二章-Linux系统磁盘概念"><a href="#第二章-Linux系统磁盘概念" class="headerlink" title="第二章 Linux系统磁盘概念"></a>第二章 Linux系统磁盘概念</h1><p>磁盘的结构体系</p><ol><li><p>磁盘的物理结构（外部结构 - 内部结构）工作原理</p></li><li><p>磁盘阵列说明（raid0 raid1 raid5 raid10 raid01）</p><p>磁盘阵列如何配置</p><p>配置LVM （L逻辑 - V卷组 - M管理）逻辑卷管理—-&gt;实现可以随意调整磁盘分区大小</p></li><li><p>磁盘分区概念</p><p>给容量较小的磁盘进行分区：小于2T—-fdisk</p><p>给容量较大的磁盘进行分区：大于2T—-parted</p></li><li><p>磁盘格式化操作（创建文件系统）</p></li><li><p>磁盘维护管理知识（如何使用磁盘—-挂载使用）</p></li></ol><h1 id="第三章-磁盘层次结构详细说明–物理结构"><a href="#第三章-磁盘层次结构详细说明–物理结构" class="headerlink" title="第三章 磁盘层次结构详细说明–物理结构"></a>第三章 磁盘层次结构详细说明–物理结构</h1><h2 id="3-1-磁盘的外部结构"><a href="#3-1-磁盘的外部结构" class="headerlink" title="3.1 磁盘的外部结构"></a>3.1 磁盘的外部结构</h2><p>看得见摸得着的结构</p><h2 id="3-2-组成部分"><a href="#3-2-组成部分" class="headerlink" title="3.2 组成部分"></a>3.2 组成部分</h2><ol><li><p>磁盘主轴</p><p>决定磁盘转速 （rpm-round per minute）</p><ul><li>家用磁盘转速 7200 rpm  5400 rpm</li><li>企业磁盘转速 15k rpm   10k rpm</li></ul></li><li><p>磁盘盘片</p><p>用于储存数据</p></li><li><p>磁盘磁头</p><p>用于读取数据</p></li><li><p>磁盘接口</p><ul><li>用于连接主板  </li><li>用于连接阵列卡</li></ul></li></ol><h2 id="3-3-磁盘内部结构"><a href="#3-3-磁盘内部结构" class="headerlink" title="3.3 磁盘内部结构"></a>3.3 磁盘内部结构</h2><p>看不见的结构信息</p><h2 id="3-4-组成部分"><a href="#3-4-组成部分" class="headerlink" title="3.4 组成部分"></a>3.4 组成部分</h2><ol><li><p>磁盘（Disk）</p></li><li><p>磁头（Head）</p><p>作用说明：用来写入和读取数据</p><p>特点说明：盘面数量等于磁头数量</p><p>工作原理：采用径向运动读写数据</p></li><li><p>磁道（Track）</p><p>作用说明：用来储存用户数据</p><p>特点说明：由多个同心圆组成</p><ul><li>储存计数：最外面同心圆为0磁道</li></ul><p>工作原理：磁盘默认按照磁道寻找数据</p><ul><li><p>重点原理：磁头径向运动为机械运动（寻道）</p></li><li><p>原理特点：磁头机械运动慢</p></li></ul></li><li><p>扇区（Sector）</p><p>作用特点：用来储存用户数据</p><p>特点说明：磁盘储存最小单位</p><p>储存计数：默认磁盘扇区从1扇区开始，扇区大小为512字节系统最小储存单位是block</p></li><li><p>柱面（Cylinder）</p><p>作用特点：用来储存用户数据</p><p>特点说明：不同盘面上相同的磁道组成（圆柱体）</p><p>工作原理：磁盘默认按照柱面进行读写</p><ul><li>重点原理：磁头之间切换为电子切换</li><li>原理特点：磁头电子切换较快</li></ul></li><li><p>单元块（Units）</p><p>作用说明：用来储存用户数据</p><p>特点说明：表示单个柱面大小</p></li></ol><h1 id="第四章-磁盘层次结构详细说明–磁盘阵列raid"><a href="#第四章-磁盘层次结构详细说明–磁盘阵列raid" class="headerlink" title="第四章 磁盘层次结构详细说明–磁盘阵列raid"></a>第四章 磁盘层次结构详细说明–磁盘阵列raid</h1><h2 id="磁盘阵列有什么用？"><a href="#磁盘阵列有什么用？" class="headerlink" title="磁盘阵列有什么用？"></a>磁盘阵列有什么用？</h2><ul><li><p>提高磁盘储存效率</p></li><li><p>提高磁盘储存安全</p></li><li><p>提高磁盘储存容量</p></li></ul><h2 id="4-1-RAID0"><a href="#4-1-RAID0" class="headerlink" title="4.1 RAID0"></a>4.1 RAID0</h2><p><img src="/post/6e0e19f0.htm/raid0.png" alt="raid0"></p><p>RAID 0亦称为带区<a href="https://zh.wikipedia.org/wiki/%E5%8D%B7_(%E8%A8%88%E7%AE%97)">卷</a>。它将两个以上的磁盘并联起来，成为一个大容量的磁盘。在存放数据时，分段后分散存储在这些磁盘中，因为读写时都可以并行处理，所以在所有的级别中，RAID 0的速度是最快的。但是RAID 0既没有冗余功能，也不具备容错能力，如果一个磁盘（物理）损坏，所有数据都会丢失，危险程度与<a href="https://zh.wikipedia.org/zh-cn/RAID#JBOD">JBOD</a>相当。</p><h2 id="4-2-RAID1"><a href="#4-2-RAID1" class="headerlink" title="4.2 RAID1"></a>4.2 RAID1</h2><p><img src="/post/6e0e19f0.htm/raid1.png" alt="raid1"></p><p>两组以上的N个磁盘相互作<a href="https://zh.wikipedia.org/wiki/%E7%A3%81%E7%A2%9F%E9%8F%A1%E5%83%8F">镜像</a>，在一些多线程操作系统中能有很好的读取速度，理论上读取速度等于硬盘数量的倍数，与RAID 0相同。另外写入速度有微小的降低。只要一个磁盘正常即可维持运作，可靠性最高。其原理为在主硬盘上存放数据的同时也在镜像硬盘上写一样的数据。当主硬盘（物理）损坏时，镜像硬盘则代替主硬盘的工作。因为有镜像硬盘做数据备份，所以RAID 1的数据安全性在所有的RAID级别上来说是最好的。但无论用多少磁盘做RAID 1，仅算一个磁盘的容量，是所有RAID中磁盘利用率最低的一个级别。</p><p>如果用两个不同大小的磁盘建RAID 1，可用空间为较小的那个磁盘，较大的磁盘多出来的空间也可以分割成一个区来使用，不会造成浪费。</p><p>RAID 1没有校验机制。如果用两个磁盘组成RAID 1阵列，如果两个硬盘上的数据不知怎么的变得不一致，RAID 1不知道应该相信哪一个硬盘，这就是<a href="https://zh.wikipedia.org/w/index.php?title=%E5%A4%A7%E8%84%91%E5%88%86%E8%A3%82&action=edit&redlink=1">大脑分裂</a>的情况。事实上，RAID 1的磁盘数量越多，越有可能其中某个磁盘的数据变得不一致（但仍然工作），RAID 1只会从第一个工作的硬盘里提供数据，没有办法检测到底哪个硬盘的数据不对.</p><h2 id="4-3-RAID5"><a href="#4-3-RAID5" class="headerlink" title="4.3 RAID5"></a>4.3 RAID5</h2><p><img src="/post/6e0e19f0.htm/raid5.png" alt="raid5"></p><p>RAID 5是一种储存性能、数据安全和存储成本兼顾的存储解决方案。它使用的是Disk Striping（硬盘分割）技术。</p><p>RAID 5使用“<a href="https://zh.wikipedia.org/wiki/%E5%A5%87%E5%81%B6%E6%A0%A1%E9%AA%8C%E4%BD%8D">奇偶校验位</a>”。与 RAID-4 一样，有效大小是 N-1 个磁盘的大小。 然而，由于奇偶校验信息也在 N 个驱动器之间均匀分布，因此避免了每次写入都必须更新奇偶校验磁盘的瓶颈。防止单个磁盘故障，而且访问速度快[<a href="https://zh.wikipedia.org/zh-cn/RAID#cite_note-RAID-5-2">2]</a>。</p><p>RAID 5不是对存储的数据进行备份，而是把数据和相对应的<a href="https://zh.wikipedia.org/wiki/%E5%A5%87%E5%81%B6%E6%A0%A1%E9%AA%8C">奇偶校验</a>信息存储到组成RAID 5的各个磁盘上，并且奇偶校验信息和相对应的数据分别存储于不同的磁盘上。当RAID 5的一个磁盘数据发生损坏后，可以利用剩下的数据和相应的奇偶校验信息去恢复被损坏的数据。RAID 5可以理解为是RAID 0和RAID 1的折衷方案。RAID 5可以为系统提供数据安全保障，但保障程度要比<a href="https://zh.wikipedia.org/wiki/%E9%8F%A1%E5%83%8F">镜像</a>低而磁盘空间利用率要比镜像高。RAID 5具有和RAID 0相近似的数据读取速度，只是因为多了一个奇偶校验信息，</p><table><thead><tr><th><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/System-search.svg/45px-System-search.svg.png" alt="System-search.svg"></th><th>此条目<strong>内容<a href="https://zh.wikipedia.org/wiki/Wikipedia:%E5%87%86%E7%A1%AE%E6%80%A7%E4%BA%89%E8%AE%AE">疑欠准确</a>，有待查证。</strong> 请在<a href="https://zh.wikipedia.org/wiki/Talk:RAID">讨论页</a>讨论问题所在及加以改善，若此条目仍有争议及<a href="https://zh.wikipedia.org/wiki/Wikipedia:%E5%87%86%E7%A1%AE%E6%80%A7%E4%BA%89%E8%AE%AE">准确度</a>欠佳，会被提出<a href="https://zh.wikipedia.org/wiki/Wikipedia:%E9%A0%81%E9%9D%A2%E5%AD%98%E5%BB%A2%E8%A8%8E%E8%AB%96">存废讨论</a>。</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>写入数据的速度相对单独写入一块硬盘的速度略慢，若使用“回写缓存”可以让性能改善不少。同时由于多个数据对应一个奇偶校验信息，RAID 5的磁盘空间利用率要比RAID 1高，存储成本相对较便宜。</p><p>冗余磁盘阵列在最可能发生的单个磁盘故障情况下提供保护，在这种情况下，单个磁盘只是停止工作。这消除了构建大型 EIDE（增强型IDE） 磁盘阵列的主要障碍。</p><p>RAID-5 并不能完全防止其他类型的磁盘故障。 RAID-5 将在单个磁盘停止工作但导致整个 EIDE 总线发生故障（或整个 EIDE 控制器卡发生故障）但只是暂时停止运行的情况下提供有限的保护。这将暂时禁用整个 RAID-5 阵列。如果更换坏盘解决了问题，即故障没有永久损坏其他磁盘上的数据，那么 RAID-5 阵列将正常恢复。 相似的如果只是控制器卡损坏，则更换它将使 RAID-5 阵列正常恢复。 但是，如果不止一个磁盘损坏，尤其是文件或目录结构信息损坏，整个 RAID-5 阵列就会损坏。 剩余的故障模式是磁盘正在传送损坏的数据。 RAID-5 没有对此固有的保护；但是，可以在事件标头中内置对数据的纵向奇偶校验，例如校验和记录计数 (CRC)，以标记问题。</p><p>$<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/705aa00c68d43e2ab7f94380f60dfab577f0920e" alt="{\begin{aligned}Size&amp;=(N-1)\times \min \left(S_{1},S_{2},\dots ,S_{N}\right)\end{aligned}}">$</p><h2 id="4-4-RAID10-x2F-01"><a href="#4-4-RAID10-x2F-01" class="headerlink" title="4.4 RAID10&#x2F;01"></a>4.4 RAID10&#x2F;01</h2><p><img src="/post/6e0e19f0.htm/raid10.png" alt="raid10/01"></p><p>RAID 10是先分割资料再镜像，再将所有硬盘分为两组，视为以RAID 1作为最低组合，然后将每组RAID 1视为一个“硬盘”组合为RAID 0运作。</p><p>RAID 01则是跟RAID 10的程序相反，是先镜像再将资料到分割两组硬盘。它将所有的硬盘分为两组，每组各自构成为RAID 0作为最低组合，而将两组硬盘组合为RAID 1运作。</p><p>当RAID 10有一个硬盘受损，其余硬盘会继续运作。RAID 01只要有一个硬盘受损，同组RAID 0的所有硬盘都会停止运作，只剩下其他组的硬盘运作，可靠性较低。如果以六个硬盘建RAID 01，镜像再用三个建RAID 0，那么坏一个硬盘便会有三个硬盘离线。因此，RAID 10远较RAID 01常用，零售<a href="https://zh.wikipedia.org/wiki/%E4%B8%BB%E6%A9%9F%E6%9D%BF">主板</a>绝大部分支持RAID 0&#x2F;1&#x2F;5&#x2F;10，但不支持RAID 01。</p><h2 id="4-5-磁盘阵列的配置方法"><a href="#4-5-磁盘阵列的配置方法" class="headerlink" title="4.5 磁盘阵列的配置方法"></a>4.5 磁盘阵列的配置方法</h2><table><thead><tr><th>raid 0</th><th>储存数据效率高</th><th>储存安全性低</th></tr></thead><tbody><tr><td><strong>RAID 1</strong></td><td>储存数据效率低</td><td>储存安全性高</td></tr><tr><td><strong>RAID 5</strong></td><td>储存数据效率较高</td><td>储存安全性较高</td></tr><tr><td><strong>LVM</strong></td><td>实现分区可以弹性缩容 和 扩容</td><td></td></tr></tbody></table><blockquote><p>说明(RAID 5)：</p><p>至少有3块磁盘，raid阵列中最多只能坏一块磁盘  损耗一块磁盘的容量</p><p>300G 300G 300G —&gt; raid5 —&gt; 600G</p></blockquote><h1 id="第五章-磁盘层次结构详细说明–磁盘分区方法"><a href="#第五章-磁盘层次结构详细说明–磁盘分区方法" class="headerlink" title="第五章 磁盘层次结构详细说明–磁盘分区方法"></a>第五章 磁盘层次结构详细说明–磁盘分区方法</h1><h2 id="5-1-预备知识"><a href="#5-1-预备知识" class="headerlink" title="5.1 预备知识"></a>5.1 预备知识</h2><h3 id="5-1-1-系统启动引导记录"><a href="#5-1-1-系统启动引导记录" class="headerlink" title="5.1.1 系统启动引导记录"></a>5.1.1 系统启动引导记录</h3><table><thead><tr><th>MBR引导记录</th><th>用于引导磁盘空间小于2T</th></tr></thead><tbody><tr><td><strong>GPT引导记录</strong></td><td>用于引导磁盘空间大于2T</td></tr></tbody></table><h3 id="5-1-2-分区方式"><a href="#5-1-2-分区方式" class="headerlink" title="5.1.2 分区方式"></a>5.1.2 分区方式</h3><ol><li><p>情况一</p><p>可以划分4个主分区    &#x2F;dev&#x2F;sda  &#x2F;dev&#x2F;sda1 . . sda4      mount &#x2F;dev&#x2F;sda1 &#x2F;mnt</p></li><li><p>情况二</p><p>可以划分3个主分区    &#x2F;dev&#x2F;sda  &#x2F;dev&#x2F;sda1 . . sda3</p><p>可以划分一个扩展分区  扩展分区无法直接使用</p><p>需要在扩展分区基础上划分逻辑分区： &#x2F;dev&#x2F;sda5 &#x2F;dev&#x2F;sda6 . . .</p></li></ol><h2 id="5-2-操作"><a href="#5-2-操作" class="headerlink" title="5.2 操作"></a>5.2 操作</h2><h3 id="5-2-1-情况一"><a href="#5-2-1-情况一" class="headerlink" title="5.2.1 情况一"></a>5.2.1 情况一</h3><p>磁盘分区实践–磁盘小于2T</p><ol><li><p>准备磁盘环境</p><p>准备磁盘，把磁盘插上</p></li><li><p>在系统中检查是否识别到了新的硬盘</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ll /dev/sdb</span><br></pre></td></tr></table></figure></li><li><p>对磁盘进行分区处理（fdisk– 进行分区处理 查看分区信息）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fdisk  /dev/sdb</span><br></pre></td></tr></table></figure><p>有了扩展分区才能有逻辑分区</p><p><img src="/post/6e0e19f0.htm/fdisk.png"></p><p>保存退出，让系统识别加载分区</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">partprobe /dev/sdb    执行这条让系统识别，在物理环境系统可能会识别不了sdb文件</span><br><span class="line">mkfs.xfs /dev/sdb1    格式化磁盘</span><br></pre></td></tr></table></figure></li></ol><h3 id="5-2-2-情况二"><a href="#5-2-2-情况二" class="headerlink" title="5.2.2 情况二"></a>5.2.2 情况二</h3><p>磁盘分区实践–磁盘大于2T</p><ol><li><p>准备磁盘环境</p><p>准备磁盘，把磁盘插上</p></li><li><p>使用parted命令进行分区</p></li></ol><h1 id="第六章-磁盘层次结构详细说明–格式化操作（创建文件系统）"><a href="#第六章-磁盘层次结构详细说明–格式化操作（创建文件系统）" class="headerlink" title="第六章 磁盘层次结构详细说明–格式化操作（创建文件系统）"></a>第六章 磁盘层次结构详细说明–格式化操作（创建文件系统）</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkfs.xfs   /dev/sdb1</span><br><span class="line">mkfs -t xfs /dev/sdb2</span><br></pre></td></tr></table></figure><p>创建文件系统：磁盘分区储存数据的方式</p><table><thead><tr><th>ext3&#x2F;4</th><th>centos6</th><th></th></tr></thead><tbody><tr><td><strong>xfs</strong></td><td><strong>CENTOS7</strong></td><td>格式化效率高 数据储存效率提升（数据库服务器）</td></tr></tbody></table><h1 id="第七章-磁盘层次结构详细说明–磁盘挂载应用"><a href="#第七章-磁盘层次结构详细说明–磁盘挂载应用" class="headerlink" title="第七章 磁盘层次结构详细说明–磁盘挂载应用"></a>第七章 磁盘层次结构详细说明–磁盘挂载应用</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mount /dev/sdb1 /mount01       挂载</span><br><span class="line">mount /dev/sdb2 /mount02</span><br><span class="line">umount /dev/sdb2               卸载</span><br></pre></td></tr></table></figure><h2 id="7-1-检查"><a href="#7-1-检查" class="headerlink" title="7.1 检查"></a>7.1 检查</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure><h2 id="7-2-实现开机自动挂载"><a href="#7-2-实现开机自动挂载" class="headerlink" title="7.2 实现开机自动挂载"></a>7.2 实现开机自动挂载</h2><ul><li><p>方法一：将挂载命令放入&#x2F;etc&#x2F;rc.local</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/rc.local</span><br><span class="line">mount /dev/sdb1 /mount01   </span><br><span class="line">mount /dev/sdb2 /mount02</span><br></pre></td></tr></table></figure><p>如果出错看一下rc.local源文件的权限，要有执行权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod +x /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure></li><li><p>方法二：在&#x2F;etc&#x2F;fstab文件中设置</p><table><thead><tr><th>要挂载的文件</th><th>挂载点</th><th>指定的文件系统类型</th><th>挂载属性参数</th><th>是否备份磁盘</th><th>是否检查</th></tr></thead><tbody><tr><td>&#x2F;dev&#x2F;vda1</td><td>&#x2F;</td><td>ext4</td><td>defaults</td><td>1</td><td>1</td></tr></tbody></table></li></ul><blockquote><p>黑洞</p><p>黑洞入口：&#x2F;dev&#x2F;null</p><p>黑洞出口：&#x2F;dev&#x2F;zero</p><p>#dd if&#x3D;&#x2F;dev&#x2F;zero of&#x3D;&#x2F;etc&#x2F;10G bs&#x3D;1G count&#x3D;10         &#x2F;&#x2F;从黑洞产出一个10G的文件</p></blockquote><h1 id="第八章-调整swap分区大小"><a href="#第八章-调整swap分区大小" class="headerlink" title="第八章 调整swap分区大小"></a>第八章 调整swap分区大小</h1><p>将磁盘分出一部分空间给swap分区使用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dd if=/dev/zero of=/tmp/1G bs=100M count=10</span><br></pre></td></tr></table></figure><p>将指定磁盘空间作为swap空间使用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkswap /tmp/1G</span><br><span class="line">swapon /tmp/1G （安装上）</span><br><span class="line">swapoff /tmp/1G  （卸载）</span><br></pre></td></tr></table></figure><h1 id="第九章-企业磁盘异常案例"><a href="#第九章-企业磁盘异常案例" class="headerlink" title="第九章 企业磁盘异常案例"></a>第九章 企业磁盘异常案例</h1><p>磁盘满的原因</p><ul><li>真正数据太大储存过多     block满了</li><li>储存了大量的小文件       inode满了</li></ul><h1 id="第十章-MBR-DPT-VG"><a href="#第十章-MBR-DPT-VG" class="headerlink" title="第十章 MBR-DPT-VG"></a>第十章 MBR-DPT-VG</h1><p><img src="/post/6e0e19f0.htm/MBR+DPT.png"></p><p>操作系统的引导过程的一个环节，系统启动时顺序 BIOS - MBR - DPT - PBR - 寻找根目录下 NTLDR(XP)&#x2F;bootmgr(WIN7&#x2F;Vista)&#x2F;grldr(Grub)&#x2F;btldr.mbr(BootLink) 等可用于引导的程序。 分区的PBR (Partition Boot Record)可以加载该分区的io.sys (dos &#x2F; win9x) 或 ntldr(win2000 xp 2003) 或 bootmgr (vista &#x2F; win2008 &#x2F; win7) 。</p><p>PBR是各个分区自己的引导记录,又称分区引导记录,它是由FORMAT<a href="https://baike.baidu.com/item/%E9%AB%98%E7%BA%A7%E6%A0%BC%E5%BC%8F%E5%8C%96/7596476">高级格式化</a>命令写在各个分区开始处第一个扇区的一段数据(比如说:主分区C:从1磁头0柱面1扇区&#x3D;逻辑1扇区&#x3D;绝对63扇区开始,那么C:区逻辑1扇区就是PBR所存放的位置).这段数据主要由以下几个部分组成:1.占3个字节的跳转指令；2.占8个字节的操作系统厂商标识及版本号;3. 占19个字节的分区参数表(又称BPB),里面存放着对该分区进行读写操作时所必备的参数(如该分区内每扇区所包含的字节数、每簇扇区数、每个磁道的扇区数、该分区FAT份数等)；4.占480个字节的DOS引导代码,它负责把DOS引导文件IO.SYS、MSDOS.SYS装入内存；5.占2个字节的结束标志字; 以上5个部分也正好占1个扇区 512字节，位于每个非扩展主分区及每个逻辑分区的第一个扇区；可存放小段程序。 和MBR有所不同的是：PBR扇区后面一般就紧接着存放该分区的FAT。硬盘的第一(lba 0)扇区后面空白若干扇区不用(xp默认留62扇区，vista和win7默认留1M)，然后才是各个分区。</p><p>我们知道硬盘<a href="https://baike.baidu.com/item/MBR/10473976">MBR</a>负责总管硬盘分区，只有分区工具才能对它进行读写；而PBR则负责管理某个具体的分区，它是用操作系统的<a href="https://baike.baidu.com/item/%E9%AB%98%E7%BA%A7%E6%A0%BC%E5%BC%8F%E5%8C%96/7596476">高级格式化</a>命令来写入硬盘的。在系统启动时，最先读取的硬盘信息是MBR，然后由MBR内的主引导程序读出PBR，最后才由PBR内的DOS引导代码读取操作系统的引导程序，其中任何一个环节出了问题，操作系统都无法正常启动成功，如果是MBR部分出了问题,即使只是”55AA”标志字丢失或被改为其他值，通常都会出现”无效分区表”、逻辑盘丢失、启动死机等现象；而如果是PBR部分出了问题，通常会出现”未格式化的分区”的错误提示。</p><p><img src="/post/6e0e19f0.htm/VG.png"></p>]]></content>
    
    
    <summary type="html">对于Linux磁盘的简单理解</summary>
    
    
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/categories/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="Linux" scheme="http://blog.cndis.cn/tags/Linux/"/>
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/tags/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    <category term="VG" scheme="http://blog.cndis.cn/tags/VG/"/>
    
    <category term="Linux磁盘" scheme="http://blog.cndis.cn/tags/Linux%E7%A3%81%E7%9B%98/"/>
    
    <category term="MBR" scheme="http://blog.cndis.cn/tags/MBR/"/>
    
    <category term="DPT" scheme="http://blog.cndis.cn/tags/DPT/"/>
    
    <category term="RAID0" scheme="http://blog.cndis.cn/tags/RAID0/"/>
    
    <category term="RAID1" scheme="http://blog.cndis.cn/tags/RAID1/"/>
    
    <category term="RAID5" scheme="http://blog.cndis.cn/tags/RAID5/"/>
    
    <category term="RAID10/01" scheme="http://blog.cndis.cn/tags/RAID10-01/"/>
    
  </entry>
  
  <entry>
    <title>Linux定时任务</title>
    <link href="http://blog.cndis.cn/post/a1a0ca6d.html"/>
    <id>http://blog.cndis.cn/post/a1a0ca6d.html</id>
    <published>2022-07-31T09:01:55.000Z</published>
    <updated>2022-12-07T07:26:25.127Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-软件分类-相关软件"><a href="#第一章-软件分类-相关软件" class="headerlink" title="第一章 软件分类(相关软件)"></a>第一章 软件分类(相关软件)</h1><ul><li>cronie      实现定时任务功能</li><li>atd            实现定时任务功能 只能设置一次的定时功能，即用完后要重设</li><li>anacron   实现定时任务功能 应用在家用电脑 7*24服务器</li></ul><h1 id="第二章-简介"><a href="#第二章-简介" class="headerlink" title="第二章 简介"></a>第二章 简介</h1><h2 id="2-1-系统特殊目录"><a href="#2-1-系统特殊目录" class="headerlink" title="2.1 系统特殊目录"></a>2.1 系统特殊目录</h2><ul><li>系统定时任务周期：每小时 控制定时任务目录：&#x2F;etc&#x2F;cron.hourly</li><li>系统定时任务周期：每一天 控制定时任务目录：&#x2F;etc&#x2F;cron.daily     00：00-23：59</li><li>系统定时任务周期：每一周 控制定时任务目录：&#x2F;etc&#x2F;cron.weekly   7天</li><li>系统定时任务周期：每个月 控制定时任务目录：&#x2F;etc&#x2F;cron.monthly  30 28 31</li></ul><h2 id="2-2-用户定时任务（yum-install-y-cronie）"><a href="#2-2-用户定时任务（yum-install-y-cronie）" class="headerlink" title="2.2 用户定时任务（yum install -y cronie）"></a>2.2 用户定时任务（yum install -y cronie）</h2><p>每天的02：30进行备份数据</p><ol><li><p>用户定时任务查看  crontab -l （list）</p><p>说明：列表查看定时任务信息（cron table）</p></li><li><p>用户定时任务编辑  crontab -e（edit）</p><p>说明：编辑配置定时任务信息</p><p><img src="/post/a1a0ca6d.htm/%E4%B8%8D%E5%90%8C%E7%94%A8%E6%88%B7%E7%BC%96%E5%86%99%E6%96%87%E4%BB%B6.png"></p></li></ol><h1 id="第三章-定时任务实际编写方法"><a href="#第三章-定时任务实际编写方法" class="headerlink" title="第三章 定时任务实际编写方法"></a>第三章 定时任务实际编写方法</h1><ol><li><p>定时任务服务环境准备</p><p>定时任务是否启动&#x2F;是否开机自启动</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps -ef | grep crond</span><br><span class="line">systemctl status crond</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ljq-ct /home/ljq]$systemctl status crond</span><br><span class="line">● crond.service - Command Scheduler</span><br><span class="line">Loaded:loaded(/usr/lib/systemd/system/crond.service;enabled; vendor preset: enabled)</span><br><span class="line">Active: active (running) since Mon 2020-06-29 21:55:47 EDT; 6h ago</span><br></pre></td></tr></table></figure></li><li><p>实际编写定时任务</p><p>配置方法：crontab -e</p><p>编写语法规范</p><p><img src="/post/a1a0ca6d.htm/catcrontab.png"></p><p>* * * * * 具体做什么事情</p><h2 id="写法"><a href="#写法" class="headerlink" title="写法"></a>写法</h2><ol><li><p>用数值表示时间信息</p><p>00 02 * * * 备份文件      凌晨两点备份文件</p></li><li><p>利用特殊符号表示时间信息</p><p><img src="/post/a1a0ca6d.htm/*%E8%A7%A3%E9%87%8A.png"></p><p><img src="/post/a1a0ca6d.htm/%E4%B9%A6%E5%86%99%E6%96%B9%E5%BC%8F.png"></p><blockquote><p>补充：</p><p>20&#x2F;10 &#x3D;&#x3D; 10：20 10分20秒</p></blockquote></li><li><p>实际编写定时任务</p><p>每天凌晨两点备份 &#x2F;date目录到 &#x2F;backup</p><ul><li><p>写上时间信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">00 02 * * *</span><br></pre></td></tr></table></figure></li><li><p>写上完成任务的具体命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp -a /date /backup</span><br></pre></td></tr></table></figure></li><li><p>编写定时任务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br><span class="line">00  02  *  *  *  cp -a /date /backup</span><br></pre></td></tr></table></figure></li></ul><p>定时任务日志文件：#cat &#x2F;var&#x2F;log&#x2F;cron</p></li></ol></li></ol><h1 id="第四章-定时任务编写注意事项-规范"><a href="#第四章-定时任务编写注意事项-规范" class="headerlink" title="第四章 定时任务编写注意事项:(规范)"></a>第四章 定时任务编写注意事项:(规范)</h1><ol><li><p>编写定时任务要有注释说明</p></li><li><p>编写定时任务路径信息尽量使用绝对路径</p></li><li><p>编写定时任务命令需要采用绝对路径执行 &#x2F;usr&#x2F;sbin&#x2F;useradd</p><p>命令执行成功条件：</p><p>useradd —-&gt; $PATH —-&gt; &#x2F;sbin&#x2F;useradd —-&gt; 命令执行成功</p><p>定时任务执行时，识别的PATH信息只有：&#x2F;usr&#x2F;bin:&#x2F;bin</p><p>useradd命令 —-&gt; &#x2F;usr&#x2F;sbin&#x2F;useradd</p></li><li><p>编写定时任务时，可以将输出到屏幕上的信息保存到黑洞中，避免占用磁盘空间</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">* * * * * sh test.sh &amp;&gt; /dev/null</span><br></pre></td></tr></table></figure><blockquote><p>说明</p><p>定时任务中执行命令，如果产生输出到屏幕的信息，都会以邮件方式告知用户</p></blockquote><blockquote><p>&#x2F;var&#x2F;spool&#x2F;mail&#x2F;root–不断变大占用磁盘空间 –占用的block空间</p><p>解决方法：</p><p>将邮件服务器关闭</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl stop postfix</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>&#x2F;var&#x2F;spool&#x2F;postfix&#x2F;maildrop&#x2F;–不断产生小文件占用磁盘空间–占用的inode空间</p><p>解决办法：</p><p>删除小文件</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm -f /var/spool/postfix/maildrop/*</span><br><span class="line">systemctl start postfix</span><br></pre></td></tr></table></figure></blockquote></li><li><p>编写定时任务，尽量不要产生屏幕输出信息</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp -a /data /backup</span><br><span class="line">tar zcvf /backup/data.tar.gz /data  #有信息输出</span><br><span class="line">cd /</span><br><span class="line">tar zcf /backup/data.tar.gz ./data  #没有信息输出</span><br></pre></td></tr></table></figure></li><li><p>当需要多个命令完成一个定时任务时，可以利用脚本编写定时任务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim backup.sh</span><br><span class="line">cp -a /data /backup</span><br><span class="line">tar zcvf /backup/data.tar.gz /data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">crontab -e</span><br><span class="line">#jankinlui-XXXXXXX</span><br><span class="line">* * * * */bin/sh /home/ljq/backup.sh &amp;&gt; /dev/null</span><br></pre></td></tr></table></figure></li></ol><h1 id="第五章-定时任务相关文件"><a href="#第五章-定时任务相关文件" class="headerlink" title="第五章 定时任务相关文件"></a>第五章 定时任务相关文件</h1><ul><li>定时任务服务配置文件所在目录        &#x2F;var&#x2F;spool&#x2F;cron</li><li>定时任务服务运行记录日志文件        &#x2F;var&#x2F;log&#x2F;cron</li><li>定时任务服务禁止用户运行黑名单      &#x2F;etc&#x2F;cron.deny</li></ul>]]></content>
    
    
    <summary type="html">学习定时任务，让Linux准点进行自动话操作</summary>
    
    
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/categories/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="Linux" scheme="http://blog.cndis.cn/tags/Linux/"/>
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/tags/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    <category term="定时任务" scheme="http://blog.cndis.cn/tags/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    
    <category term="Cronie" scheme="http://blog.cndis.cn/tags/Cronie/"/>
    
    <category term="计划任务" scheme="http://blog.cndis.cn/tags/%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>Linux网络</title>
    <link href="http://blog.cndis.cn/post/817e4197.html"/>
    <id>http://blog.cndis.cn/post/817e4197.html</id>
    <published>2022-07-31T08:28:40.000Z</published>
    <updated>2022-12-07T07:26:25.131Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-安装时调整网卡名称"><a href="#第一章-安装时调整网卡名称" class="headerlink" title="第一章 安装时调整网卡名称"></a>第一章 安装时调整网卡名称</h1><p>选择centos安装——-按tab键——-net.ifnames&#x3D;0 biosdevname&#x3D;0</p><h1 id="第二章-网卡名称信息修改"><a href="#第二章-网卡名称信息修改" class="headerlink" title="第二章 网卡名称信息修改"></a>第二章 网卡名称信息修改</h1><ol><li><p>编辑网卡配置文件中网卡名称信息</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifxfg-ens33</span><br></pre></td></tr></table></figure></li><li><p>重命名网卡配置文件名称</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv ifcfg-ens33 ifcfg-eth0</span><br></pre></td></tr></table></figure></li><li><p>修改网卡名称规则内核文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/default/grup-&gt;net.ifnames=0 biosdevname=0 “到GRUB_CMDLINE_LINUX变量后</span><br></pre></td></tr></table></figure></li><li><p>使系统重新加载grub配置文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br></pre></td></tr></table></figure></li><li><p>重启系统</p></li></ol><h1 id="第三章-关于网络服务"><a href="#第三章-关于网络服务" class="headerlink" title="第三章 关于网络服务"></a>第三章 关于网络服务</h1><p>网络服务只有两个</p><table><thead><tr><th>NNetworkManager</th><th>网络管理服务</th><th>nmtui</th></tr></thead><tbody><tr><td>NETWORK</td><td>网络服务</td><td>ifcfg-eth0</td></tr></tbody></table><blockquote><p>ps：</p><p>网络不通也可能是两者服务有差异导致冲突</p></blockquote><h1 id="第四章-远程连接排除"><a href="#第四章-远程连接排除" class="headerlink" title="第四章 远程连接排除"></a>第四章 远程连接排除</h1><ol><li><p>去的道路是通畅–链路是通畅的</p><p>不畅通的原因：</p><ol><li>物理线路有问题&#x2F;物理主机被人关闭</li><li>网络安全设备阻止了ping功能</li><li>虚拟主机网卡地址是否设置正确</li><li>虚拟网卡（虚拟机&amp;物理主机）有没有开启并且配置正确</li><li>虚拟主机网络服务是否关闭</li></ol></li><li><p>你老婆不让你去–有网络安全策略进行阻止访问</p><ol><li>防火墙没有关闭</li><li>SSH服务配置中也可以阻止用户远程连接</li></ol></li><li><p>服务器今天没营业–远程服务没有开启</p><ol><li>检查远程服务是否开启：telnet ssh</li><li>网络中会将每个网络服务设置一个数字编号，成为网络服务端口</li></ol></li></ol><h1 id="第五章-重要文件–网卡配置文件"><a href="#第五章-重要文件–网卡配置文件" class="headerlink" title="第五章 重要文件–网卡配置文件"></a>第五章 重要文件–网卡配置文件</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TYPE=Ethernet       --指定网络类型 以太网Eehernet 电话10M 军用（帧中继） 金融公司（FastEthernet）</span><br><span class="line">BOOTPROTO=none      --网络启动协议 如何让主机得到IP地址</span><br><span class="line">a. 自己手动配置 none static （静态）</span><br><span class="line">b. 自动获取地址 dhcp （动态）</span><br><span class="line">NAME=eth0         --主机网卡的名称 逻辑名称</span><br><span class="line">UUID=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx     --虚拟主机的硬件标识</span><br><span class="line">DEVICE=eth0        --主机网卡的名称 设备名称物理名称</span><br><span class="line">ONBOOT=yes          --设置网卡是否处于开启状态（激活状态）</span><br><span class="line">IPADDR=xxx.xxx.xxx.xxx          --静态ip地址</span><br><span class="line">PREFIX=24                       --子网掩码</span><br><span class="line">GATEWAY=XXX.XXX.XXX.XXX           --网关</span><br><span class="line">DNS1=XXX.XXX.XXX.XXX</span><br></pre></td></tr></table></figure><h2 id="5-1-DNS的修改"><a href="#5-1-DNS的修改" class="headerlink" title="5.1 DNS的修改"></a>5.1 DNS的修改</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/resolv.conf</span><br></pre></td></tr></table></figure><h1 id="第六章-一次更改多台主机的脚本"><a href="#第六章-一次更改多台主机的脚本" class="headerlink" title="第六章 一次更改多台主机的脚本"></a>第六章 一次更改多台主机的脚本</h1><p><img src="/post/817e4197.htm/%E4%B8%80%E6%AC%A1%E6%9B%B4%E6%94%B9%E5%A4%9A%E5%8F%B0%E4%B8%BB%E6%9C%BA%E7%9A%84%E8%84%9A%E6%9C%AC.png" alt="一次更改多台主机的脚本"></p><h1 id="第七章-VMware虚拟软件网络配置"><a href="#第七章-VMware虚拟软件网络配置" class="headerlink" title="第七章 VMware虚拟软件网络配置"></a>第七章 VMware虚拟软件网络配置</h1><ol><li><p>NAT网络模式</p></li><li><ol><li>特点：虚拟主机和其他宿主机网络信息可以不一致</li><li>优点：不容易出现局域网中IP地址冲突</li><li>缺点：其他宿主机不能直接访问虚拟主机</li></ol></li><li><p>桥接网络模式</p></li><li><ol><li>特点：虚拟主机和宿主机网络信息是一致的</li><li>优点；其他宿主机可以直接访问虚拟主机</li><li>缺点：容易出现局域网中IP地址冲突</li></ol></li><li><p>仅主机网络模式</p></li><li><ol><li>特点：虚拟主机网络只能和宿主机或其他虚拟主机建立通讯</li><li>优点：更加安全</li><li>缺点：不能连接外网</li></ol></li></ol>]]></content>
    
    
    <summary type="html">有关于Linux网卡配置文件，和关于VMware软件网络模式的优缺点</summary>
    
    
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/categories/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="Linux" scheme="http://blog.cndis.cn/tags/Linux/"/>
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/tags/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    <category term="Linux网络配置" scheme="http://blog.cndis.cn/tags/Linux%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
    
    <category term="VMware虚拟软件网络模cover式的区别" scheme="http://blog.cndis.cn/tags/VMware%E8%99%9A%E6%8B%9F%E8%BD%AF%E4%BB%B6%E7%BD%91%E7%BB%9C%E6%A8%A1cover%E5%BC%8F%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>基础网络知识</title>
    <link href="http://blog.cndis.cn/post/cf4d6f51.html"/>
    <id>http://blog.cndis.cn/post/cf4d6f51.html</id>
    <published>2022-07-31T06:57:18.000Z</published>
    <updated>2022-12-07T07:26:25.135Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/post/cf4d6f51.htm/%E7%9F%A5%E8%AF%86.png"></p><h1 id="第一章-知识介绍"><a href="#第一章-知识介绍" class="headerlink" title="第一章 知识介绍"></a>第一章 知识介绍</h1><ol><li>学习网络的课程体系</li><li>两台主机通讯原理</li><li>一个局域网中多台主机如何通讯 — 交换</li><li>不同局域网中多台主机如何通讯 — 路由</li><li>网络的配置操作（命令行配置）</li><li>网络的架构</li><li>OSI 7层模型 &#x2F;     TCP&#x2F;IP模型</li><li>TCP三次握手过程&#x2F;TCP四次挥手过程</li><li>TCP是十一种状态集转换</li><li>网络重要协议<ol><li>DNS（域名访问网站-nginx）</li><li>ARP（访问IP地址–MAC地址）</li></ol></li><li>办公环境上网原理（家庭网络环境）<ol><li>虚拟主机访问外网原理</li></ol></li><li>IP地址概念<ol><li>IP地址概念</li><li>IP地址种类划分</li><li>IP地址子网划分</li><li>交换网络VLAN概念</li></ol></li><li>系统中路由配置<ol><li>系统中路由配置</li><li>系统中网卡别名设置</li></ol></li><li>网络中抓包软件使用（wireshark      tcpdump）</li><li>企业中网络排错思路<ol><li>系统主机无法访问网站</li><li>系统主机访问网站慢</li></ol></li></ol><h1 id="第二章-两台主机通讯原理"><a href="#第二章-两台主机通讯原理" class="headerlink" title="第二章 两台主机通讯原理"></a>第二章 两台主机通讯原理</h1><h2 id="2-1-主机之间需要传输介质"><a href="#2-1-主机之间需要传输介质" class="headerlink" title="2.1 主机之间需要传输介质"></a>2.1 主机之间需要传输介质</h2><p>网线、光纤、wifi、蓝牙……..等等</p><h2 id="2-2-主机上必须有网卡设备"><a href="#2-2-主机上必须有网卡设备" class="headerlink" title="2.2 主机上必须有网卡设备"></a>2.2 主机上必须有网卡设备</h2><p>可以将二进制信息转化为高低电压  信号的调制过程</p><p>可以将高低电压转化为二进制信息  信号的解调过程</p><h2 id="2-3-多台主机需要协商网络速率"><a href="#2-3-多台主机需要协商网络速率" class="headerlink" title="2.3 多台主机需要协商网络速率"></a>2.3 多台主机需要协商网络速率</h2><p>100Mbps ~ 100Mbit per second ~ 每秒钟传输100M bit的信息 0 1</p><p>1M ~ 1000K   1000000b</p><p>1k ~ 1000b</p><blockquote><p>常见的问题:</p><p>购买一个100M网络线路，但是用迅雷下东西往往到达不了100M?</p><p>100Mb  网络的数据单位 bit     1bit&#x3D;1&#x2F;8byte   100&#x2F;8&#x3D;12.5    10M 12M</p><p>100MB  磁盘的数据单位 Byte    1byte&#x3D;8bit    100*8&#x3D;800M</p></blockquote><h1 id="第三章-主机如何通讯"><a href="#第三章-主机如何通讯" class="headerlink" title="第三章 主机如何通讯"></a>第三章 主机如何通讯</h1><h2 id="3-1-一个局域网中多台主机如何通讯-—-交换"><a href="#3-1-一个局域网中多台主机如何通讯-—-交换" class="headerlink" title="3.1 一个局域网中多台主机如何通讯 — 交换"></a>3.1 一个局域网中多台主机如何通讯 — 交换</h2><p>实现通讯:</p><p>主机上要有相应的mac地址（物理地址） 有12位16进制数组成 0 - 9 A B C D E F</p><p>利用交换机进行通讯，有时需要借助广播方式进行通讯</p><p>广播的产生有时会影响主机的性能</p><blockquote><p>补充：</p><p>通讯的过程一定是有去有回的过程</p></blockquote><h2 id="3-2-不同局域网中多台主机如何通讯-—-路由"><a href="#3-2-不同局域网中多台主机如何通讯-—-路由" class="headerlink" title="3.2 不同局域网中多台主机如何通讯 — 路由"></a>3.2 不同局域网中多台主机如何通讯 — 路由</h2><p>实现通讯：</p><p>主机上要有相应的IP地址（逻辑地址） 有十进制数组成 192.168.1.1</p><p>IP地址的组成：网络信息（局域网标识）+ 主机地址信息</p><p>需要借助路由器中的路由表实现通讯</p><table><thead><tr><th align="center">网络信息（局域网标识信息）</th><th align="center">接口信息</th></tr></thead><tbody><tr><td align="center">01</td><td align="center">Eth0</td></tr><tr><td align="center">02</td><td align="center">Eth1</td></tr></tbody></table><h1 id="第四章-网络架构设计方法（网络拓扑）"><a href="#第四章-网络架构设计方法（网络拓扑）" class="headerlink" title="第四章 网络架构设计方法（网络拓扑）"></a>第四章 网络架构设计方法（网络拓扑）</h1><h2 id="4-1-三个层次规划网络拓扑"><a href="#4-1-三个层次规划网络拓扑" class="headerlink" title="4.1 三个层次规划网络拓扑"></a>4.1 三个层次规划网络拓扑</h2><p>核心层：路由器（网关接口） 实现和外网通讯 冗余能力（主备）</p><p>汇聚层：交换机（三层交换机） 冗余能力     策略控制能力</p><p>接入层：交换机（二层交换机） 终端设备接入网络</p><h1 id="第五章-系统路由设置"><a href="#第五章-系统路由设置" class="headerlink" title="第五章 系统路由设置"></a>第五章 系统路由设置</h1><h2 id="5-1-centos6"><a href="#5-1-centos6" class="headerlink" title="5.1 centos6"></a>5.1 centos6</h2><p>route          和网络相关的命令  使用net-tools</p><h3 id="5-1-1-静态默认路由"><a href="#5-1-1-静态默认路由" class="headerlink" title="5.1.1 静态默认路由"></a>5.1.1 静态默认路由</h3><p>编写网卡配置文件</p><p>利用命令临时配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">route add default gw 10.0.0.254</span><br><span class="line">route del default gw 10.0.0.254</span><br></pre></td></tr></table></figure><blockquote><p>作用：实现主机访问外网，用于测试新的网关</p></blockquote><h3 id="5-1-2-静态网段路由"><a href="#5-1-2-静态网段路由" class="headerlink" title="5.1.2 静态网段路由"></a>5.1.2 静态网段路由</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">route add -net 10.0.3.0 netmask 255.255.255.0 gw 10.0.1.2</span><br><span class="line">route del -net 10.0.3.0 netmask 255.255.255.0 gw 10.0.1.2</span><br></pre></td></tr></table></figure><h3 id="5-1-3-静态主机路由"><a href="#5-1-3-静态主机路由" class="headerlink" title="5.1.3 静态主机路由"></a>5.1.3 静态主机路由</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">route add -host 10.0.3.201 dev eth1</span><br><span class="line">route del -host 10.0.3.201 dev eth1</span><br></pre></td></tr></table></figure><h2 id="5-2-centos7"><a href="#5-2-centos7" class="headerlink" title="5.2 centos7"></a>5.2 centos7</h2><p>ip route        和网络相关的命令  使用iproute</p><h3 id="5-2-1-静态默认路由"><a href="#5-2-1-静态默认路由" class="headerlink" title="5.2.1 静态默认路由"></a>5.2.1 静态默认路由</h3><p>编写网卡配置文件</p><p>利用命令临时配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip route add default Via 10.0.0.254</span><br><span class="line">ip route del default Via 10.0.0.254</span><br></pre></td></tr></table></figure><h3 id="5-2-2-静态网段路由"><a href="#5-2-2-静态网段路由" class="headerlink" title="5.2.2 静态网段路由"></a>5.2.2 静态网段路由</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip route add -net 10.0.3.0 netmask 255.255.255.0 gw 10.0.1.2</span><br><span class="line">ip route del -net 10.0.3.0 netmask 255.255.255.0 gw 10.0.1.2</span><br></pre></td></tr></table></figure><h3 id="5-2-3-静态主机路由"><a href="#5-2-3-静态主机路由" class="headerlink" title="5.2.3 静态主机路由"></a>5.2.3 静态主机路由</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip route add -host 10.0.3.201 dev eth1</span><br><span class="line">ip route del -host 10.0.3.201 dev eth1</span><br></pre></td></tr></table></figure><h1 id="第六章-主机路由转发"><a href="#第六章-主机路由转发" class="headerlink" title="第六章 主机路由转发"></a>第六章 主机路由转发</h1><p>1、打开包转发功能:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;1&quot; &gt; /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure><p>2、修改&#x2F;etc&#x2F;sysctl.conf文件，让包转发功能在系统启动时自动生效:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Controls IP packet forwarding</span><br><span class="line">net.ipv4.ip_forward = 1</span><br></pre></td></tr></table></figure><p>3、打开iptables的NAT功能:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/sbin/iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</span><br></pre></td></tr></table></figure><blockquote><p> 说明：</p><p>上面的语句中eth0是连接外网或者连接Internet的网卡. 执行下面的命令，保存iptables的规则: service iptables save</p></blockquote><p>4、查看路由表:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -rn 或  route -n</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学习Linux网络方面知识</summary>
    
    
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/categories/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="Linux" scheme="http://blog.cndis.cn/tags/Linux/"/>
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/tags/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    <category term="基本网络知识" scheme="http://blog.cndis.cn/tags/%E5%9F%BA%E6%9C%AC%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86/"/>
    
    <category term="主机通讯原理" scheme="http://blog.cndis.cn/tags/%E4%B8%BB%E6%9C%BA%E9%80%9A%E8%AE%AF%E5%8E%9F%E7%90%86/"/>
    
    <category term="静态默认路由" scheme="http://blog.cndis.cn/tags/%E9%9D%99%E6%80%81%E9%BB%98%E8%AE%A4%E8%B7%AF%E7%94%B1/"/>
    
    <category term="静态网段路由" scheme="http://blog.cndis.cn/tags/%E9%9D%99%E6%80%81%E7%BD%91%E6%AE%B5%E8%B7%AF%E7%94%B1/"/>
    
    <category term="静态主机路由" scheme="http://blog.cndis.cn/tags/%E9%9D%99%E6%80%81%E4%B8%BB%E6%9C%BA%E8%B7%AF%E7%94%B1/"/>
    
    <category term="主机路由转发" scheme="http://blog.cndis.cn/tags/%E4%B8%BB%E6%9C%BA%E8%B7%AF%E7%94%B1%E8%BD%AC%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>安装centos7与基本操作</title>
    <link href="http://blog.cndis.cn/post/69b2ac3d.html"/>
    <id>http://blog.cndis.cn/post/69b2ac3d.html</id>
    <published>2022-07-31T03:01:26.000Z</published>
    <updated>2022-12-07T07:26:25.138Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-安装时引导说明"><a href="#第一章-安装时引导说明" class="headerlink" title="第一章 安装时引导说明"></a>第一章 安装时引导说明</h1><p>1、安装centos7系统（*）</p><p>2、测试光盘镜像并安装系统</p><p>3、排错模式（修复系统 重置系统密码）</p><h1 id="第二章-调整网卡名称"><a href="#第二章-调整网卡名称" class="headerlink" title="第二章 调整网卡名称"></a>第二章 调整网卡名称</h1><p>选择centos安装——-按tab键——-net.ifnames&#x3D;0 biosdevname&#x3D;0</p><h1 id="第三章-系统分区的配置"><a href="#第三章-系统分区的配置" class="headerlink" title="第三章 系统分区的配置"></a>第三章 系统分区的配置</h1><p>分区方法：标准分区方法</p><p><img src="/post/69b2ac3d.htm/%E6%A0%87%E5%87%86%E5%88%86%E5%8C%BA%E6%96%B9%E6%B3%95.png" alt="标准分区方法"></p><ol><li><p>通用分区方案</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c盘==/boot 引导分区 200M</span><br><span class="line">     ==/swap 交换分区 当内存不够用的时候，将硬盘中的空间充当内存使用</span><br><span class="line">      内存&lt;8G</span><br><span class="line">              建议交换分区大小=内存大小的1.5倍 内存1G--swap1.5G</span><br><span class="line">      内存&gt;=8G</span><br><span class="line">    建议交换分区大小=8G</span><br><span class="line">    ==/           根分区 剩余全部空间</span><br><span class="line">   </span><br></pre></td></tr></table></figure></li><li><p>数据信息比较重要的分区方案</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/boot 200M</span><br><span class="line">/swap &lt;8G 1.5内存大小</span><br><span class="line">               &gt;=8G 8G</span><br><span class="line">/            20G~200G</span><br><span class="line">/data 剩余空间大小</span><br></pre></td></tr></table></figure></li><li><p>灵活的分区方案</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/boot 200M</span><br><span class="line">/swap &lt;8G 1.5内存大小</span><br><span class="line">           &gt;=8G 8G</span><br><span class="line">/            20G~200G</span><br><span class="line">剩余空间不分</span><br></pre></td></tr></table></figure></li></ol><h1 id="第四章-系统安全配置"><a href="#第四章-系统安全配置" class="headerlink" title="第四章 系统安全配置"></a>第四章 系统安全配置</h1><p>system-kdump          将宕机前系统中的内存异常信息进行保存</p><p>system-security policy    系统的安全策略配置</p><h1 id="第五章-运维流程"><a href="#第五章-运维流程" class="headerlink" title="第五章 运维流程"></a>第五章 运维流程</h1><ol><li>准备&#x2F;检查好环境</li><li>进行操作前的备份（退路）</li><li>进行配置之后注意保存</li><li>配置完成需要检查</li><li>编写项目文档</li></ol><h1 id="第六章-更改主机名"><a href="#第六章-更改主机名" class="headerlink" title="第六章 更改主机名"></a>第六章 更改主机名</h1><h2 id="6-1-centos7"><a href="#6-1-centos7" class="headerlink" title="6.1 centos7"></a>6.1 centos7</h2><p>临时修改：hostname ljq</p><p>永久修改：vi &#x2F;etc&#x2F;hostname</p><p>通过命令即可以临时修改又可以永久修改</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname ljq</span><br></pre></td></tr></table></figure><h2 id="6-2-centos6"><a href="#6-2-centos6" class="headerlink" title="6.2 centos6"></a>6.2 centos6</h2><p>临时修改：hostname ljq</p><p>永久修改：vi &#x2F;etc&#x2F;sysconfig&#x2F;network</p><h1 id="第七章-查看系统版本"><a href="#第七章-查看系统版本" class="headerlink" title="第七章 查看系统版本"></a>第七章 查看系统版本</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /etc/redhat-release</span><br><span class="line">uname</span><br><span class="line">uname -a</span><br></pre></td></tr></table></figure><h1 id="第八章-解析映射文件"><a href="#第八章-解析映射文件" class="headerlink" title="第八章 解析映射文件"></a>第八章 解析映射文件</h1><p>hosts文件：在本地建立IP地址和主机名称的对应关系</p><p>windows本地解析文件位置：C:\Windows\System32\drivers\etc\hosts</p><p>Linux本地解析文件位置：vi &#x2F;etc&#x2F;hosts</p><h1 id="第九章-自动挂载光盘"><a href="#第九章-自动挂载光盘" class="headerlink" title="第九章 自动挂载光盘"></a>第九章 自动挂载光盘</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># vi /etc/fstab </span><br><span class="line">/opt/CentOS-6.5.iso /media iso9660 defaults,loop,ro 0 0</span><br><span class="line"># mount -a</span><br></pre></td></tr></table></figure><h1 id="第十章-开机自启动"><a href="#第十章-开机自启动" class="headerlink" title="第十章 开机自启动"></a>第十章 开机自启动</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/rc.loacl </span><br><span class="line">systemctl start sshd</span><br></pre></td></tr></table></figure><p>注意：看一下rc.loacl文件有没有x权限，如果没有先执行chmod +x rc.loacl</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl enable sshd</span><br></pre></td></tr></table></figure><h1 id="第十一章-脚本与变量"><a href="#第十一章-脚本与变量" class="headerlink" title="第十一章 脚本与变量"></a>第十一章 脚本与变量</h1><p>&#x2F;etc&#x2F;profile</p><p>作用：让变量信息永久生效</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#source /etc/profile    #重新加载文件</span><br></pre></td></tr></table></figure><h2 id="11-1-修改PATH环境变量方法："><a href="#11-1-修改PATH环境变量方法：" class="headerlink" title="11.1 修改PATH环境变量方法："></a>11.1 修改PATH环境变量方法：</h2><h3 id="11-1-1-临时修改"><a href="#11-1-1-临时修改" class="headerlink" title="11.1.1 临时修改"></a>11.1.1 临时修改</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PATH=/usr/local/sbin：/usr/local/bin：/usr/sbin：/usr/bin：/root/bin：/ljq</span><br></pre></td></tr></table></figure><h3 id="11-1-2-永久修改"><a href="#11-1-2-永久修改" class="headerlink" title="11.1.2 永久修改"></a>11.1.2 永久修改</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#vi /etc/profile</span><br><span class="line">export PATH=/usr/local/sbin：/usr/local/bin：/usr/sbin：/usr/bin：/root/bin：/ljq</span><br></pre></td></tr></table></figure><h1 id="第十二章-系统别名"><a href="#第十二章-系统别名" class="headerlink" title="第十二章 系统别名"></a>第十二章 系统别名</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim .bashrc</span><br></pre></td></tr></table></figure><p>查看系统别名默认设置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@LN ~]# alias</span><br><span class="line">alias cp=&#x27;cp -i&#x27;</span><br><span class="line">alias egrep=&#x27;egrep --color=auto&#x27;</span><br><span class="line">alias fgrep=&#x27;fgrep --color=auto&#x27;</span><br><span class="line">alias grep=&#x27;grep --color=auto&#x27;</span><br><span class="line">alias l.=&#x27;ls -d .* --color=auto&#x27;</span><br><span class="line">alias ll=&#x27;ls -l --color=auto&#x27;</span><br><span class="line">alias ls=&#x27;ls --color=auto&#x27;</span><br><span class="line">alias mv=&#x27;mv -i&#x27;</span><br><span class="line">alias rm=&#x27;rm -i&#x27;</span><br><span class="line">alias which=&#x27;alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde&#x27;</span><br></pre></td></tr></table></figure><p>设置别名语法</p><p>alias 别名名称&#x3D;‘命令信息’</p><h1 id="第十三章-修改用户家目录中-bashrc"><a href="#第十三章-修改用户家目录中-bashrc" class="headerlink" title="第十三章 修改用户家目录中 .bashrc"></a>第十三章 修改用户家目录中 .bashrc</h1><p>查看隐藏数据方法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@LN ~]# ls -a</span><br><span class="line">.              .bashrc  .elinks        .mozilla          .ssh               .Xauthority</span><br></pre></td></tr></table></figure><p>说明：Linux系统中隐藏文件都是以点开头</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># vi /root/.bashrc</span><br><span class="line">alias rm=&#x27; rm -i &#x27;</span><br></pre></td></tr></table></figure><p>总结：和环境变量配置以及别名配置相关的文件有哪些</p><ol><li>&#x2F;etc&#x2F;profile &#x3D;&#x3D; &#x2F;etc&#x2F;bashrc                     法规（全局生效，任何用户都能看到）</li><li>~&#x2F;.bashrc  &#x3D;&#x3D; ~&#x2F;.bash_profile                             家规（单个用户生效）</li></ol><h1 id="第十四章-登录之后提示文件"><a href="#第十四章-登录之后提示文件" class="headerlink" title="第十四章 登录之后提示文件"></a>第十四章 登录之后提示文件</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@LN ~]# cat /etc/motd</span><br><span class="line">Welcome to Alibaba Cloud Elastic Compute Service !</span><br></pre></td></tr></table></figure><blockquote><p>作用：</p><p>可以对操作系统注意事项进行说明 </p></blockquote><p>登录之前提示文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@LN ~]# cat /etc/issue</span><br><span class="line">\S</span><br><span class="line">Kernel \r on an \m</span><br><span class="line">[root@LN ~]# cat /etc/issue.net</span><br><span class="line">\S</span><br><span class="line">Kernel \r on an \m</span><br></pre></td></tr></table></figure><h1 id="第十五章-和程序软件安装相关的目录"><a href="#第十五章-和程序软件安装相关的目录" class="headerlink" title="第十五章 和程序软件安装相关的目录"></a>第十五章 和程序软件安装相关的目录</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/loacl</span><br><span class="line">yum install -y vim tree wget net-tools nmap bash-completion（补全centos7的部分命令）</span><br></pre></td></tr></table></figure><h1 id="第十六章-日志文件保存目录"><a href="#第十六章-日志文件保存目录" class="headerlink" title="第十六章 日志文件保存目录"></a>第十六章 日志文件保存目录</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ll /var/log/</span><br></pre></td></tr></table></figure><p>两个重要的系统日志文件</p><p>messages          –记录系统或服务程序运行的状态信息 和 错误信息</p><p>secure（安全）      –用户登录信息</p><p>head -5 &#x2F;etc&#x2F;profile   –查看前面几行信息（默认10行）</p><p>tail  -6 &#x2F;etc&#x2F;profile    –查看后面几行信息（默认10行）</p><p>tail  -f &#x2F;etc&#x2F;profile    –查看日志文件方法 一直追踪查看文件内容的变化</p><h1 id="第十七章-系统信息查看方法"><a href="#第十七章-系统信息查看方法" class="headerlink" title="第十七章 系统信息查看方法"></a>第十七章 系统信息查看方法</h1><h2 id="17-1-CPU"><a href="#17-1-CPU" class="headerlink" title="17.1 CPU"></a>17.1 CPU</h2><p>利用文件进行查看</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /proc/cpuinfo</span><br><span class="line">model name      : Intel(R) Xeon(R) Platinum 8269CY CPU @ 2.50GHz      --CPU品牌型号</span><br><span class="line">physical id          : 0                                              --CPU颗数</span><br><span class="line">processor           : 0                                        --CPU核数</span><br></pre></td></tr></table></figure><p>利用命令进程查看</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># lscpu --&gt; 调取cpuinfo文件内容</span><br></pre></td></tr></table></figure><h2 id="17-2-负载（CPU处理任务过多）"><a href="#17-2-负载（CPU处理任务过多）" class="headerlink" title="17.2 负载（CPU处理任务过多）"></a>17.2 负载（CPU处理任务过多）</h2><p>利用文件进行查看</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># cat /proc/loadavg</span><br><span class="line">0.01      0.02         0.05       1/774          27050        负载值CPU核数有关</span><br><span class="line">1分钟平均  5分钟平均    15分钟平均</span><br></pre></td></tr></table></figure><blockquote><p>eg：</p><p>服务器4核的服务器 – 负载值3左右就要关注</p><p>服务器128核服务器 – 负债值100（数据库服务器）</p></blockquote><p>利用命令进程查看</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#w</span><br></pre></td></tr></table></figure><h2 id="17-3-内存：内存使用情况"><a href="#17-3-内存：内存使用情况" class="headerlink" title="17.3 内存：内存使用情况"></a>17.3 内存：内存使用情况</h2><p>利用文件进行查看</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># cat /proc/meminfo</span><br><span class="line">MemTotal:           3880172 kB       --内存总的容量</span><br><span class="line">MemFree:            409848 kB        --内存的空闲容量</span><br><span class="line">MemAvailable:       2186392 kB       --内存的可用容量</span><br><span class="line">Buffers:            138044 kB        --buffers空间</span><br><span class="line">Cached:             1827952 kB       --cached空间</span><br><span class="line">SwapCached:         0 kB             交换分区使用情况</span><br></pre></td></tr></table></figure><p>利用命令进程查看</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># free -h           --以人类可读方式显示内存信息</span><br></pre></td></tr></table></figure><h2 id="17-4-磁盘信息-x2F-挂载信息"><a href="#17-4-磁盘信息-x2F-挂载信息" class="headerlink" title="17.4 磁盘信息&#x2F;挂载信息"></a>17.4 磁盘信息&#x2F;挂载信息</h2><p>利用文件进行查看：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /proc/mounts</span><br></pre></td></tr></table></figure><p>利用命令进程查看：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure><h1 id="第十八章-用户"><a href="#第十八章-用户" class="headerlink" title="第十八章 用户"></a>第十八章 用户</h1><h2 id="18-1-普通用户的创建"><a href="#18-1-普通用户的创建" class="headerlink" title="18.1 普通用户的创建"></a>18.1 普通用户的创建</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">useradd ljq</span><br><span class="line">passwd ljq</span><br><span class="line"></span><br><span class="line">useradd ljq01; echo &quot;123456&quot; | passwd --stdin ljq01      #创建用户的同时设置密码信息</span><br></pre></td></tr></table></figure><h2 id="18-2-普通用户的切换"><a href="#18-2-普通用户的切换" class="headerlink" title="18.2 普通用户的切换"></a>18.2 普通用户的切换</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">su root</span><br><span class="line">su -</span><br></pre></td></tr></table></figure><h2 id="18-3-查看普通用户"><a href="#18-3-查看普通用户" class="headerlink" title="18.3 查看普通用户"></a>18.3 查看普通用户</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id ljq</span><br><span class="line">whoami</span><br></pre></td></tr></table></figure><h2 id="18-4-批量创建用户"><a href="#18-4-批量创建用户" class="headerlink" title="18.4 批量创建用户"></a>18.4 批量创建用户</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for num in &#123;01..20&#125;;do useradd ljq$num;done</span><br><span class="line">for num in &#123;01..20&#125;;do id ljq$num;done</span><br></pre></td></tr></table></figure><h2 id="18-5-免交互设置密码"><a href="#18-5-免交互设置密码" class="headerlink" title="18.5 免交互设置密码"></a>18.5 免交互设置密码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;123456&quot; | passwd --stdin ljq</span><br></pre></td></tr></table></figure><h1 id="第十九章-命令提示符优化"><a href="#第十九章-命令提示符优化" class="headerlink" title="第十九章 命令提示符优化"></a>第十九章 命令提示符优化</h1><p>优化方法：修改PS1环境变量</p><h2 id="19-1-默认配置"><a href="#19-1-默认配置" class="headerlink" title="19.1 默认配置"></a>19.1 默认配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@LN ~]# echo $PS1</span><br><span class="line">[\u@\h \W]\$    \u   ---显示当前登录用户名称       \h  ---显示系统主机名称    \W  ---显示当前所在目录信息（目录结构的追后结尾信息）</span><br></pre></td></tr></table></figure><h2 id="19-2-修改优化方法"><a href="#19-2-修改优化方法" class="headerlink" title="19.2 修改优化方法"></a>19.2 修改优化方法</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># vi /etc/profile</span><br><span class="line">PS1=&quot;\[\e[32;40m\][\u@\h \W]$\e[m&quot;</span><br><span class="line"># source /etc/profile</span><br></pre></td></tr></table></figure><p><img src="/post/69b2ac3d.htm/%E5%90%AB%E4%B9%89.png"></p><h1 id="第二十章-字符编码优化"><a href="#第二十章-字符编码优化" class="headerlink" title="第二十章 字符编码优化"></a>第二十章 字符编码优化</h1><p>支持中文比较好的编码：</p><table><thead><tr><th align="center">UTF-8</th><th align="center">比较通用</th></tr></thead><tbody><tr><td align="center">GBK</td><td align="center">国际通用</td></tr></tbody></table><p>一条命令改</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">localectl set-locale LANG=XXX</span><br></pre></td></tr></table></figure><h2 id="20-1-centos6"><a href="#20-1-centos6" class="headerlink" title="20.1 centos6"></a>20.1 centos6</h2><p>查看默认编码：# echo $LANG</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">临时修改：# echo $LANG=XXX</span><br><span class="line">永久修改：</span><br><span class="line">方法一：</span><br><span class="line"># vi /etc/profile</span><br><span class="line">export $LANG=&#x27;XXX&#x27;</span><br><span class="line">方法二：</span><br><span class="line"># vi /etc/sysconfig/i18n</span><br><span class="line">LANG=&#x27;XXX&#x27;</span><br><span class="line"># source /etc/sysconfig/i18n</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="20-2-centos7"><a href="#20-2-centos7" class="headerlink" title="20.2 centos7"></a>20.2 centos7</h2><p>查看默认编码：# echo $LANG</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">临时修改：# echo $LANG=XXX</span><br><span class="line">永久修改：</span><br><span class="line">方法一：</span><br><span class="line"># vi /etc/profile</span><br><span class="line">export $LANG=&#x27;XXX&#x27;</span><br><span class="line">方法二：</span><br><span class="line"># vi /etc/locale.config</span><br><span class="line">LANG=&#x27;XXX&#x27;</span><br></pre></td></tr></table></figure><h1 id="第二十一章-优化ssh连接"><a href="#第二十一章-优化ssh连接" class="headerlink" title="第二十一章 优化ssh连接"></a>第二十一章 优化ssh连接</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># vim /etc/ssh/sshd_config</span><br><span class="line">79   GSSAPICleanupCredentials no</span><br><span class="line">112 UseDNS no</span><br><span class="line"># vi /etc/hosts</span><br><span class="line">xxx.xxx.xxx.xxx  [主机名]</span><br><span class="line"># systemctl restart sshd</span><br></pre></td></tr></table></figure><h1 id="第二十二章-调整时间信息显示格式"><a href="#第二十二章-调整时间信息显示格式" class="headerlink" title="第二十二章 调整时间信息显示格式"></a>第二十二章 调整时间信息显示格式</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># date “+%F %T”               2020-06-14 14：00</span><br><span class="line"># date “+%y-%m-%d %H:%M:%S”</span><br></pre></td></tr></table></figure><h2 id="22-1-更改时间"><a href="#22-1-更改时间" class="headerlink" title="22.1 更改时间"></a>22.1 更改时间</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#date -s “2020-06-15”</span><br></pre></td></tr></table></figure><h2 id="22-2-显示历史时间"><a href="#22-2-显示历史时间" class="headerlink" title="22.2 显示历史时间"></a>22.2 显示历史时间</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#date +%F -d “-2day”</span><br><span class="line">#date +%F -d “ 2 day ag</span><br></pre></td></tr></table></figure><h2 id="22-3-显示未来时间"><a href="#22-3-显示未来时间" class="headerlink" title="22.3 显示未来时间"></a>22.3 显示未来时间</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#date -d “+2day”</span><br><span class="line">#date -d “2day”</span><br></pre></td></tr></table></figure><h2 id="22-4-系统自动备份数据-00：00"><a href="#22-4-系统自动备份数据-00：00" class="headerlink" title="22.4 系统自动备份数据 00：00"></a>22.4 系统自动备份数据 00：00</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp /oldboy/oldboy.log /oldboy/oldboy.log.$(date +%F -d “-1day”)     </span><br><span class="line">//因为00：00显示的是后一天，而数据是前一天，所以要减1天</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学习Linux安装和基本调试知识1</summary>
    
    
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/categories/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="Linux" scheme="http://blog.cndis.cn/tags/Linux/"/>
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/tags/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    <category term="Centos7" scheme="http://blog.cndis.cn/tags/Centos7/"/>
    
    <category term="Centos6" scheme="http://blog.cndis.cn/tags/Centos6/"/>
    
    <category term="Linux基本" scheme="http://blog.cndis.cn/tags/Linux%E5%9F%BA%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>正则表达</title>
    <link href="http://blog.cndis.cn/post/e035cd58.html"/>
    <id>http://blog.cndis.cn/post/e035cd58.html</id>
    <published>2022-07-31T02:10:25.000Z</published>
    <updated>2022-12-07T07:26:25.140Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/post/e035cd58.htm/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE.png" alt="正则表达"></p><h1 id="第一章-正则符号"><a href="#第一章-正则符号" class="headerlink" title="第一章 正则符号"></a>第一章 正则符号</h1><ol><li>利用正则符号匹配文件内容信息</li><li>正则符号经常出现在各种开发语言中，python Java     php</li><li>正则符号经常被三剑客命令使用</li></ol><p>基础正则符号：basic      regular expression RBE</p><h2 id="1-1-尖号符号："><a href="#1-1-尖号符号：" class="headerlink" title="1.1 尖号符号：^"></a>1.1 尖号符号：^</h2><p>以什么开头的信息 ll &#x2F;oldboy | grep “^d”</p><h2 id="1-2-美元符号："><a href="#1-2-美元符号：" class="headerlink" title="1.2 美元符号：$"></a>1.2 美元符号：$</h2><p>以什么结尾的信息 ll -F &#x2F;etc&#x2F; | grep &#x2F;$</p><h2 id="1-3-尖号美元："><a href="#1-3-尖号美元：" class="headerlink" title="1.3 尖号美元：^$"></a>1.3 尖号美元：^$</h2><p>空行</p><h2 id="1-4-点："><a href="#1-4-点：" class="headerlink" title="1.4 点：."></a>1.4 点：.</h2><p>匹配任意一个且仅有一个字符</p><h2 id="1-5-星符号："><a href="#1-5-星符号：" class="headerlink" title="1.5 星符号：*"></a>1.5 星符号：*</h2><p>匹配前一个字符连续出现0次或者多次</p><h2 id="1-6-点星符号："><a href="#1-6-点星符号：" class="headerlink" title="1.6 点星符号：.*"></a>1.6 点星符号：.*</h2><p>匹配任意信息 类似于通配符*</p><h2 id="1-7-反斜杠："><a href="#1-7-反斜杠：" class="headerlink" title="1.7 反斜杠：\"></a>1.7 反斜杠：\</h2><p>将有意义的字符信息，转义成普通字符进行识别 </p><p>–&gt; 找出文件以点结尾的信息</p><p>将特殊的扩展正则符号，转化成基础正则符号</p><p>将没有意义的字符信息转化成有意义的字符</p><h2 id="1-8-中括号："><a href="#1-8-中括号：" class="headerlink" title="1.8 中括号：[ ]"></a>1.8 中括号：[ ]</h2><p>匹配多个字符信息，多个字符匹配时，是或者的关系</p><p>[OK] 在文件中找有O的字符信息 找文件中有K的字符信息</p><p>ps： 将一个字符串信息，进行拆分成一个一个的字符进行匹配</p><h2 id="1-9-尖号中括号："><a href="#1-9-尖号中括号：" class="headerlink" title="1.9 尖号中括号：[^]"></a>1.9 尖号中括号：[^]</h2><p>[^ok] 在文件中找有o的字符信息 找文件中有k的字符信息，进行排除不要显示，显示其他信息</p><p>扩展正则符号：</p><h2 id="1-10-加号符号："><a href="#1-10-加号符号：" class="headerlink" title="1.10 加号符号：+"></a>1.10 加号符号：+</h2><p>匹配一个或多个先前字符</p><p><img src="/post/e035cd58.htm/%E5%8A%A0%E5%8F%B7.png"></p><p>将输出的信息echo 123456 &#x3D;&#x3D;&gt; 转换为&lt;123456&gt;进行显示</p><h2 id="1-11-竖线符号："><a href="#1-11-竖线符号：" class="headerlink" title="1.11 竖线符号：|"></a>1.11 竖线符号：|</h2><p>并且符号，用于匹配多个信息</p><p><img src="/post/e035cd58.htm/%E7%AB%96.png"></p><p>14点的failed信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep &quot;14:00|failed&quot; ljq.log</span><br></pre></td></tr></table></figure><h2 id="1-12-小括号：（）"><a href="#1-12-小括号：（）" class="headerlink" title="1.12 小括号：（）"></a>1.12 小括号：（）</h2><p>将多个字符信息汇总成整体，进行过滤</p><p>进行后向引用前项</p><h2 id="1-13-括号符号："><a href="#1-13-括号符号：" class="headerlink" title="1.13 括号符号：{}"></a>1.13 括号符号：{}</h2><p>可以指定字符连续匹配的次数        x{n，m} x{n} x{n，} x{，m}</p><p>表示前一个字符至少连续出现n次，最多出现m次</p><h2 id="1-14-问好符号：？"><a href="#1-14-问好符号：？" class="headerlink" title="1.14 问好符号：？"></a>1.14 问好符号：？</h2><p>定义匹配前一个字符出现0次或1次</p><blockquote><p>总结：</p><p> *   匹配前一个字符出现0次或者多次</p><p> +   匹配前一个字符出现1次或者多次</p><p> {}   匹配前一个字符指定出现多少次，至少次</p></blockquote><h1 id="第二章-案例"><a href="#第二章-案例" class="headerlink" title="第二章 案例"></a>第二章 案例</h1><p><img src="/post/e035cd58.htm/%E8%BF%87%E6%BB%A4IP.png"> </p>]]></content>
    
    
    <summary type="html">Linux正则表达使用</summary>
    
    
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/categories/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="Linux" scheme="http://blog.cndis.cn/tags/Linux/"/>
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/tags/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    <category term="正则表达" scheme="http://blog.cndis.cn/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE/"/>
    
  </entry>
  
  <entry>
    <title>扩展swap分区</title>
    <link href="http://blog.cndis.cn/post/938c2e39.html"/>
    <id>http://blog.cndis.cn/post/938c2e39.html</id>
    <published>2022-07-31T01:28:07.000Z</published>
    <updated>2022-12-07T07:26:25.138Z</updated>
    
    <content type="html"><![CDATA[<p>swap分区在系统的物理内存不够用时，把硬盘的一部分空间释放出来，以供当前运行的程序使用。</p><blockquote><p>临时使用，</p><p>如果swap分区都不够了还是直接加内存吧</p></blockquote><h1 id="第一章-步骤"><a href="#第一章-步骤" class="headerlink" title="第一章 步骤"></a>第一章 步骤</h1><p>mkswap &#x2F;devices（可以是分区地址，也可以是文件）　　格式化成swap分区</p><p>swapon &#x2F;devices（可以是分区地址，也可以是文件）　　激活&#x2F;swap，加入到swap分区中</p><p>vim &#x2F;etc&#x2F;fstab（添加开机自动添加到swap分区），追加&#x2F;devices swap swap defaults 0 0</p><h1 id="第二章-实际操作"><a href="#第二章-实际操作" class="headerlink" title="第二章 实际操作"></a>第二章 实际操作</h1><h2 id="2-1-通过分区扩展swap分区"><a href="#2-1-通过分区扩展swap分区" class="headerlink" title="2.1 通过分区扩展swap分区"></a>2.1 通过分区扩展swap分区</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@xuexi ~]# fdisk /dev/sdb//新建一个分区</span><br><span class="line">WARNING: fdisk GPT support is currently new, and therefore in an experimental phase. Use at your own discretion.</span><br><span class="line">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class="line"> </span><br><span class="line">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class="line">使用写入命令前请三思。</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">分区号 (1-128，默认 1)：</span><br><span class="line">第一个扇区 (34-4194270，默认 2048)：</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (2048-4194270，默认 4194270)：+1G</span><br><span class="line">已创建分区 1</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">命令(输入 m 获取帮助)：w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"> </span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">正在同步磁盘。</span><br><span class="line">[root@xuexi ~]# mkswap /dev/sdb1//格式化成swap分区</span><br><span class="line">mkswap: /dev/sdb1: warning: wiping old xfs signature.</span><br><span class="line">正在设置交换空间版本 1，大小 = 1048572 KiB</span><br><span class="line">无标签，UUID=b99f3b95-35ba-4161-9c6c-a616665be0da</span><br><span class="line">[root@xuexi ~]# free -m//查看</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1980         692         589          13         697        1062</span><br><span class="line">Swap:          2047           0        2047</span><br><span class="line">[root@xuexi ~]# swapon /dev/sdb1//激活并加入到swap分区</span><br><span class="line">[root@xuexi ~]# free -m</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1980         691         591          13         697        1063</span><br><span class="line">Swap:          3071           0        3071</span><br><span class="line">[root@xuexi ~]# swapoff /dev/sdb1//关闭</span><br><span class="line">[root@xuexi ~]# free -m</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1980         691         592          13         697        1064</span><br><span class="line">Swap:          2047           0        2047</span><br><span class="line">[root@xuexi ~]# swapon -s//查看swap分区里存在哪些分区或文件</span><br><span class="line">文件名             类型      大小  已用  权限</span><br><span class="line">/dev/sda2                               partition   2097148 0   -2</span><br><span class="line">[root@xuexi ~]#</span><br></pre></td></tr></table></figure><h2 id="2-2-通过文件扩展swap分区"><a href="#2-2-通过文件扩展swap分区" class="headerlink" title="2.2 通过文件扩展swap分区"></a>2.2 通过文件扩展swap分区</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@xuexi ~]# dd if=/dev/zero of=swap_file bs=1M count=500//创建一个500M的空文件</span><br><span class="line">记录了500+0 的读入</span><br><span class="line">记录了500+0 的写出</span><br><span class="line">524288000字节(524 MB)已复制，3.68587 秒，142 MB/秒</span><br><span class="line">[root@xuexi ~]# mkswap swap_file//格式化成swap</span><br><span class="line">正在设置交换空间版本 1，大小 = 511996 KiB</span><br><span class="line">无标签，UUID=ebb5b2ef-04b0-4632-9a5f-91ee1fb8a47f</span><br><span class="line">[root@xuexi ~]# free -m//查看</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1980         696         139          13        1144        1051</span><br><span class="line">Swap:          2047           0        2047</span><br><span class="line">[root@xuexi ~]# swapon swap_file//激活并加入到swap分区</span><br><span class="line">swapon: /root/swap_file：不安全的权限 0644，建议使用 0600。</span><br><span class="line">[root@xuexi ~]# free -m//可以看到实际上已经添加了，报错只是权限问题</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1980         697         137          13        1145        1050</span><br><span class="line">Swap:          2547           0        2547</span><br><span class="line">[root@xuexi ~]# chmod 0600 swap_file//按照提示修改下权限</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学习扩展swap分区</summary>
    
    
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/categories/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="Linux" scheme="http://blog.cndis.cn/tags/Linux/"/>
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/tags/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    <category term="扩展swap分区" scheme="http://blog.cndis.cn/tags/%E6%89%A9%E5%B1%95swap%E5%88%86%E5%8C%BA/"/>
    
  </entry>
  
  <entry>
    <title>文件属性&amp;用户权限</title>
    <link href="http://blog.cndis.cn/post/5d946f6c.html"/>
    <id>http://blog.cndis.cn/post/5d946f6c.html</id>
    <published>2022-07-30T10:00:59.000Z</published>
    <updated>2022-12-07T07:26:25.139Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/post/5d946f6c.htm/ls-audit.png"></p><p><img src="/post/5d946f6c.htm/%E5%90%AB%E4%B9%89%E8%A7%A3%E9%87%8A.png"></p><p><img src="/post/5d946f6c.htm/%E6%9D%83%E9%99%90%E5%9B%BE%E4%BE%8B.png"></p><h1 id="第一章-Linux系统区分文件类型的方法"><a href="#第一章-Linux系统区分文件类型的方法" class="headerlink" title="第一章 Linux系统区分文件类型的方法"></a>第一章 Linux系统区分文件类型的方法</h1><p><img src="/post/5d946f6c.htm/ls.png"></p><ol><li>颜色区分</li><li>利用属性信息区分</li></ol><p>看开头</p><p>d &#x3D;&#x3D;文件夹</p><p> - &#x3D;&#x3D;文件</p><ol start="3"><li>利用特殊命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@LN FreeRDP]$file README.md</span><br><span class="line"></span><br><span class="line">README.md: ASCII text</span><br><span class="line"></span><br><span class="line">[root@LN FreeRDP]$file rdtk</span><br><span class="line"></span><br><span class="line">rdtk: directory</span><br></pre></td></tr></table></figure><h1 id="第二章-Linux常见文件类型"><a href="#第二章-Linux常见文件类型" class="headerlink" title="第二章 Linux常见文件类型"></a>第二章 Linux常见文件类型</h1><ol><li><p>d        –目录文件类型</p></li><li><p>-         –普通文件类型</p></li><li><ol><li>纯文本文件 text &#x2F;etc&#x2F;hosts               –可以直接编辑查看的普通文件</li><li>二进制文件 binary      &#x2F;bin&#x2F;ls                     –命令文件（不可以编辑）</li><li>数据型文件 data      &#x2F;tmp&#x2F;etc.tar.gz                –数据文件（压缩的文件）</li></ol></li><li><p>l    –链接文件（快捷方式）</p></li><li><ol><li>创建方法：ln -s 源文件 快捷方式 （软连接）</li></ol></li><li><p>c&#x2F;b  –块文件&#x2F;字符文件（设备文件）</p></li></ol><p>块文件  ： 存储的设备 光驱设备文件 磁盘</p><p>字符文件 ： 根本停不下来的输出字符信息</p><ol><li><p>磁盘设备文件       &#x2F;dev&#x2F;sda                磁盘文件</p></li><li><p>随机设备文件   &#x2F;dev&#x2F;urandom       </p></li><li><p>输出设备文件   &#x2F;dev&#x2F;zero           黑洞出口文件？？    磁盘分区</p></li><li><p>输入设备文件   &#x2F;dev&#x2F;null           黑洞入口文件？？    定时任务</p></li><li><p>s    –socket文件（网络编程）</p></li></ol><h1 id="第三章-文件权限"><a href="#第三章-文件权限" class="headerlink" title="第三章 文件权限"></a>第三章 文件权限</h1><ol><li>文件数据权限有什么：</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">r read         -- 读权限      4</span><br><span class="line">w write        -- 写权限      2</span><br><span class="line">x execute      -- 执行权限     1</span><br><span class="line">-              --没有权限     0\</span><br></pre></td></tr></table></figure><ol start="2"><li>权限赋予到指定人</li></ol><p>属主信息       文件所有者（监护人）</p><p>属组信息       文件所有者（亲人）</p><p>其他用户       隔壁老王</p><ol start="3"><li><p>例子</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">644           - rw- r-- r--</span><br><span class="line">777           - rwx rwx rwx</span><br></pre></td></tr></table></figure></li></ol><h1 id="第四章-文件属性信息详细说明—inode"><a href="#第四章-文件属性信息详细说明—inode" class="headerlink" title="第四章 文件属性信息详细说明—inode"></a>第四章 文件属性信息详细说明—inode</h1><h2 id="4-1-inode：索引节点"><a href="#4-1-inode：索引节点" class="headerlink" title="4.1 inode：索引节点"></a>4.1 inode：索引节点</h2><p>文件或数据在磁盘中保存的位置 （相当于书的目录用于存储文件属性）</p><p>诞生过程：磁盘格式化&#x3D;创建文件系统</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">磁盘操作处理过程：地皮</span><br><span class="line">磁盘                    地皮</span><br><span class="line">raid                    将多块地皮连接起来</span><br><span class="line">分区                    将地皮进行规划</span><br><span class="line">格式化                将地皮进行打扫整理</span><br><span class="line">创建文件系统      建房风格                              inode和block</span><br><span class="line">挂载                    安装门</span><br></pre></td></tr></table></figure><blockquote><h2 id="特点说明："><a href="#特点说明：" class="headerlink" title="特点说明："></a>特点说明：</h2><p>inode用于存放文件属性</p><p>inode用于存放指针位置</p><p>创建一个文件至少占用一个inode和一个block</p><p>在同一分区中，两个文件的inode号码相同，两个文件互为硬链接</p></blockquote><h2 id="4-2-block：索引节点指向的位置"><a href="#4-2-block：索引节点指向的位置" class="headerlink" title="4.2 block：索引节点指向的位置"></a>4.2 block：索引节点指向的位置</h2><p>文件或数据的具体内容（目录指向的位置）</p><blockquote><h2 id="特点说明：-1"><a href="#特点说明：-1" class="headerlink" title="特点说明："></a>特点说明：</h2><p>block用于存放的数据信息</p><p>block默认大小为4k，可以进行调整</p><p>比较大的文件会占用多个block</p><p>比较小的文件，剩余空间无法使用，浪费磁盘空间</p><p>创建一个文件至少占用一个inode和一个block（非空文件）</p><p>磁盘读取数据按block为单位读取的</p><p>读取一个block会消耗一次磁盘I&#x2F;O（input&#x2F;output 磁盘读写）</p></blockquote><blockquote><p>问题</p><p>block默认是大一点好还是小一点好</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">设置大一点 10K 视频公司 图片公司</span><br><span class="line">--- 节省IO消耗</span><br><span class="line">设置小一点 2K 互联网公司</span><br><span class="line">---- 提高磁盘利用率</span><br></pre></td></tr></table></figure></blockquote><p>诞生过程：磁盘格式化&#x3D;创建文件系统</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查看os系统块的大小</span><br><span class="line">[root]# /sbin/tune2fs -l /dev/sda1</span><br><span class="line">查看os系统页的大小</span><br><span class="line">[oracle@skate-test ~]$ getconf PAGESIZE</span><br><span class="line">4096</span><br><span class="line">修改block：</span><br><span class="line"># mke2fs -b 4096 -m 1 /dev/hda6</span><br></pre></td></tr></table></figure><h2 id="4-3-读取原理"><a href="#4-3-读取原理" class="headerlink" title="4.3 读取原理"></a>4.3 读取原理</h2><p><img src="/post/5d946f6c.htm/inode-block%E5%8E%9F%E7%90%86.png"></p><ol><li>找到指定数据</li><li>读取数据内容，先获取文件数据inode信息</li><li>根据inode信息在磁盘上找到对应block</li><li>根据block信息获取文件真正内容</li></ol><h1 id="第五章-文件属性信息详细说明—时间信息"><a href="#第五章-文件属性信息详细说明—时间信息" class="headerlink" title="第五章 文件属性信息详细说明—时间信息"></a>第五章 文件属性信息详细说明—时间信息</h1><p>文件数据时间类型：</p><ol><li>访问时间           Access time&#x3D;&#x3D;atime</li><li>修改时间       Modify time&#x3D;&#x3D;mtime</li><li>改变时间       Change time&#x3D;&#x3D;ctime     —数据属性信息发生改变</li></ol><h1 id="第六章-文件属性信息—链接数"><a href="#第六章-文件属性信息—链接数" class="headerlink" title="第六章 文件属性信息—链接数"></a>第六章 文件属性信息—链接数</h1><ol><li>硬链接</li></ol><p>概念说明：读取文件多个入口（超市的多个门）  在一个分区中inode相同的文件属于硬链接</p><p>诞生过程： ln 链接的源文件 硬链接的文件信息</p><p>系统中的目录不能创建硬链接</p><p><img src="/post/5d946f6c.htm/%E9%93%BE%E6%8E%A5%E6%95%B0.png"></p><p>一个目录之所以有几个硬链接，是因为他里面有文档返回上一级的..包括本身 也是硬链接  </p><ol start="2"><li>软链接</li></ol><p>概念说明：文件的快捷方式</p><p>诞生过程：ln -s 链接的源文件 软链接的文件信息</p><ol start="3"><li><p>软硬链接的区别：</p></li><li><ol><li>链接后的文件大小不一样</li><li>链接后的文件类型和权限不一致（颜色不一致）</li><li>链接后的文件与源文件 inode不一样（硬链接inode一样，软连接inode不一样）</li><li>源文件被删除后，硬链接依然有效，软链接失效</li></ol></li><li></li><li><p>如何确保数据真正删除</p><ol><li>确保文件硬链接数为0           i_link</li><li>确保文件没有被进程占用    i_count</li></ol></li></ol><h1 id="第七章-文件权限配置结论"><a href="#第七章-文件权限配置结论" class="headerlink" title="第七章 文件权限配置结论"></a>第七章 文件权限配置结论</h1><ol><li>root用户对所有文件有绝对的权限，只要有了执行权限，root用户可以是无敌存在</li><li>对于文件来说，写的权限和执行的权限，都需要有读权限来配置</li><li>如何想对文件进行操作，必须对文件赋予读的权限</li></ol><p>目录权限配置的结论：</p><ol><li>root用户对目录信息有绝对权限</li><li>对于目录来说，写的权限和读的权限，都需要有执行权限配合</li><li>如何想对目录进行操作，必须对目录赋予who</li></ol><p>一个普通文件默认权限：644 保证属主用户对文件可以编辑  保证其他用户可以读取文件内容</p><p>一个目录文件默认权限：755 保证属主用户对目录进行编辑  保证其他用户可以读取目录信息，进入目录</p><h2 id="7-1-问题一"><a href="#7-1-问题一" class="headerlink" title="7.1 问题一"></a>7.1 问题一</h2><p><img src="/post/5d946f6c.htm/%E9%97%AE%E9%A2%981.png"></p><h2 id="7-2-问题二"><a href="#7-2-问题二" class="headerlink" title="7.2 问题二"></a>7.2 问题二</h2><p><img src="/post/5d946f6c.htm/%E9%97%AE%E9%A2%982.png"></p><h2 id="7-3-文件的默认权限是如何设置的"><a href="#7-3-文件的默认权限是如何设置的" class="headerlink" title="7.3 文件的默认权限是如何设置的"></a>7.3 文件的默认权限是如何设置的</h2><p><img src="/post/5d946f6c.htm/%E6%96%87%E4%BB%B6%E7%9A%84%E9%BB%98%E8%AE%A4%E6%9D%83%E9%99%90%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE.png"></p><h2 id="7-4-当目录赋予读的权限"><a href="#7-4-当目录赋予读的权限" class="headerlink" title="7.4 当目录赋予读的权限"></a>7.4 当目录赋予读的权限</h2><p><img src="/post/5d946f6c.htm/%E5%BD%93%E7%9B%AE%E5%BD%95%E8%B5%8B%E4%BA%88%E8%AF%BB%E7%9A%84%E6%9D%83%E9%99%90.png"></p><h1 id="第八章-文件目录数据设置权限的方法"><a href="#第八章-文件目录数据设置权限的方法" class="headerlink" title="第八章 文件目录数据设置权限的方法"></a>第八章 文件目录数据设置权限的方法</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 根据用户信息进行设定（属主 属组 其他用户）</span><br><span class="line">属主--------user                   u</span><br><span class="line">属组--------group                g</span><br><span class="line">其他用户---other                  o</span><br><span class="line">chmod u+r/w/x    u-r/w/x  u=rw</span><br><span class="line">chmod u+g/w/x    u-r/w/x  u=rw</span><br><span class="line">chmod u+o/w/x    u-r/w/x  u=rw</span><br></pre></td></tr></table></figure><h1 id="第九章-创建用户"><a href="#第九章-创建用户" class="headerlink" title="第九章 创建用户"></a>第九章 创建用户</h1><h2 id="9-1-普通用户的创建："><a href="#9-1-普通用户的创建：" class="headerlink" title="9.1 普通用户的创建："></a>9.1 普通用户的创建：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># useradd ljq</span><br><span class="line"># passwd ljq</span><br><span class="line">useradd ljq01 ;echo “123456”｜passwd --stdin ljq01  # 创建用户同时，设置用户密码信息</span><br></pre></td></tr></table></figure><h2 id="9-2-普通用户的切换："><a href="#9-2-普通用户的切换：" class="headerlink" title="9.2 普通用户的切换："></a>9.2 普通用户的切换：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># su root        部分环境变量也全部换成root</span><br><span class="line">#su - root      全部环境变量也全部换成root</span><br></pre></td></tr></table></figure><h2 id="9-3-查看普通用户"><a href="#9-3-查看普通用户" class="headerlink" title="9.3 查看普通用户"></a>9.3 查看普通用户</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># id ljq</span><br><span class="line"># whoami</span><br></pre></td></tr></table></figure><h2 id="9-4-批量创建用户"><a href="#9-4-批量创建用户" class="headerlink" title="9.4 批量创建用户"></a>9.4 批量创建用户</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># for num in &#123;01..20&#125;;do useradd ljq$num;done</span><br><span class="line"># for num in &#123;01..20&#125;;do id ljq$num;done</span><br></pre></td></tr></table></figure><h2 id="9-5-免交互设置密码"><a href="#9-5-免交互设置密码" class="headerlink" title="9.5 免交互设置密码"></a>9.5 免交互设置密码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;123456&quot; | passwd --stdin ljq02</span><br></pre></td></tr></table></figure><h2 id="9-6-编写创建用户脚本"><a href="#9-6-编写创建用户脚本" class="headerlink" title="9.6 编写创建用户脚本"></a>9.6 编写创建用户脚本</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim create_user.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">User_info=$1</span><br><span class="line">User_Pass=$2</span><br><span class="line">useradd $User_info</span><br><span class="line">echo $User_pass|passwd --stdin $User_info</span><br><span class="line">sh create_user.sh He01 123456         //创建用户用户名：He01 密码：123456</span><br></pre></td></tr></table></figure><h2 id="9-7-虚拟用户创建"><a href="#9-7-虚拟用户创建" class="headerlink" title="9.7 虚拟用户创建"></a>9.7 虚拟用户创建</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">useradd ljq01 -M -s /sbin/nologin</span><br><span class="line">-M         不创建家目录</span><br><span class="line">-s           指定使用的shell方式</span><br><span class="line">-u           指定用户uid数值信息</span><br><span class="line">-g          指定用户所属组信息</span><br><span class="line">-G          指定用户所属的附属组信息</span><br><span class="line">-c           添加指定用户注释说明信息</span><br><span class="line">[root@LN ljq]# useradd ljq01 -s /sbin/nologin -M -c &quot;manager database&quot;</span><br><span class="line">[root@LN ljq]# grep ljq01 /etc/passwd</span><br><span class="line">ljq01:x:1002:1002:manager database:/home/ljq01:/sbin/nologin</span><br></pre></td></tr></table></figure><h2 id="9-8-修改用户信息"><a href="#9-8-修改用户信息" class="headerlink" title="9.8 修改用户信息"></a>9.8 修改用户信息</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">usermod</span><br><span class="line">-s          修改用户的登录方式</span><br><span class="line">-g          修改用户的主要的组信息</span><br><span class="line">-G          修改用户的附属组信息</span><br><span class="line">-c          修改用户的注释信息</span><br><span class="line"></span><br><span class="line">示例</span><br><span class="line">root@blog usr]# gpasswd -d Ljq root</span><br><span class="line">正在将用户“Ljq”从“root”组中删除</span><br><span class="line">[root@blog usr]# groups Ljq</span><br><span class="line">Ljq : Ljq</span><br><span class="line">[root@blog usr]# groups root</span><br><span class="line">root : root</span><br><span class="line">[root@blog usr]# usermod -aG root Ljq</span><br><span class="line">[root@blog usr]# groups Ljq</span><br><span class="line">Ljq : Ljq root</span><br></pre></td></tr></table></figure><h2 id="9-9-删除用户信息"><a href="#9-9-删除用户信息" class="headerlink" title="9.9 删除用户信息"></a>9.9 删除用户信息</h2><p>userdel</p><p>-r      彻底删除用户，不加的话只会删除用户而用户家目录还在</p><h1 id="第十章-企业中设置密码和管理密码的方式"><a href="#第十章-企业中设置密码和管理密码的方式" class="headerlink" title="第十章 企业中设置密码和管理密码的方式"></a>第十章 企业中设置密码和管理密码的方式</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 密码要复杂12位以上字母数字及特殊符号</span><br><span class="line">2. 保存好密码信息</span><br><span class="line">keepass</span><br><span class="line">密码保险柜，本地储存密码</span><br><span class="line">lastpass</span><br><span class="line">密码保险柜，在线储存密码</span><br><span class="line">大企业用户和密码统一管理（相当于活动目录AD）</span><br><span class="line">openldap域</span><br><span class="line">动态密码：动态口令，第三方提供自己开发也很简单</span><br></pre></td></tr></table></figure><h1 id="第十一章-用户组相关"><a href="#第十一章-用户组相关" class="headerlink" title="第十一章 用户组相关"></a>第十一章 用户组相关</h1><p>groupadd   创建用户组</p><p>groupmod   修改用户组信息</p><p>groupdel    删除用户组信息</p><p>chown -R    递归修改目录属主和属组信息</p><h1 id="第十二章-查看用户信息"><a href="#第十二章-查看用户信息" class="headerlink" title="第十二章 查看用户信息"></a>第十二章 查看用户信息</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a. id          显示用户信息命令（uid gid）</span><br><span class="line">b. w           显示正在登录系统的用户信息</span><br><span class="line">[ljq@LN ~]$w</span><br><span class="line"> 08:39:42 up 42 days, 21:32,  2 users,  load average: 0.02, 0.04, 0.05</span><br><span class="line">USER     TTY       FROM                       LOGIN@               IDLE        JCPU     PCPU   WHAT</span><br><span class="line">root      tty1                                     166月20              12days     0.06s    0.06s   -bash</span><br><span class="line">ljq         pts/0    119.103.129.126     08:39                   6.00s      0.02s     0.00s   w</span><br><span class="line"></span><br><span class="line">1. 什么用户登录到了系统</span><br><span class="line">2. 登录的方式</span><br><span class="line">pts/x      远程登录系统</span><br><span class="line">tty1        本地登录</span><br><span class="line">#echo “请不要修改hosts文件”&gt;/dev/pts/0</span><br><span class="line">3. 从哪儿连接的服务器</span><br><span class="line">4. 登录时间</span><br><span class="line">5. IDLE空闲时间</span><br><span class="line">6. 用户操作系统 消耗的cpu资源时间</span><br><span class="line">7. 用户在干什么</span><br><span class="line">c. last        查看已经登录的，跟之前登录的账户</span><br><span class="line">d. lastlog   查看登录历史记录</span><br></pre></td></tr></table></figure><h1 id="第十三章-文件属性详细说明—用户信息（属主-属组）"><a href="#第十三章-文件属性详细说明—用户信息（属主-属组）" class="headerlink" title="第十三章 文件属性详细说明—用户信息（属主 属组）"></a>第十三章 文件属性详细说明—用户信息（属主 属组）</h1><ol><li><p>系统中用户信息有说明用</p></li><li><ol><li>利用用户登录系统</li><li>利用用户管理数据</li><li>利用用户管理进程</li></ol></li><li><p>系统如何识别不同用户</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">利用用户的数值编号进行识别：uid</span><br><span class="line">[root@LN ~]$id root</span><br><span class="line">uid=0(root) gid=0(root) 组=0(root)</span><br><span class="line">[root@LN ~]$id NHRadmin</span><br><span class="line">uid=1000(NHRadmin) gid=1000(NHRadmin) 组=1000(NHRadmin)</span><br></pre></td></tr></table></figure></li><li><p>用户组的概念</p><p>一个公司里有各个部门，各个部门下又有各个成员；部门&#x3D;&#x3D;组</p><p>系统根据用户组的数值编号进行识别：gid</p><p># usermod oldboy -g oldgirl             &#x2F;&#x2F;让oldboy属于oldgirl组</p><p>用户和组的关系：</p><p>用户        – 用户组           1v1      一个用户对应一个组</p><p>多个用户     – 用户组           多v1     多个用户在一个组</p><p>用户        –多个组           1v多     一个用户在多个组里</p></li><li><p>用户进行分类</p><ol><li>超级管理员用户        皇帝          root</li></ol><p>uid信息进行区分：0</p><p>从权限上区分： 至高无上</p><ol><li>虚拟用户              傀儡          xxx</li></ol><p>uid信息进行区分：1-999   （centos7）</p><p>从权限上区分： 管进程       不能登录系统&#x2F;没有家目录</p><ol><li>普通用户              平民          ljq</li></ol><p>uid信息进行区分：1000+   （centos7）</p><p>从权限上区分： 管理指定数据 可以管理指定进程 可以登录系统&#x2F;有家目录</p></li></ol><h1 id="第十四章-用户权限说明"><a href="#第十四章-用户权限说明" class="headerlink" title="第十四章 用户权限说明"></a>第十四章 用户权限说明</h1><p>普通用户如何像root用户 一些操作管理系统：</p><ol><li>直接切换到root账户下管理系统              篡权夺位</li><li>直接修改要做的数据文件权限</li><li>root用户赋予普通用户权限</li></ol><p>sudo root用户授权一个能力给普通用户</p><ol><li><p>怎么进行授权</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">visudo == vi /etc/sudoers</span><br><span class="line">visudo -c      --配置好的文件语法检查</span><br><span class="line">93  ljq   ALL=(ALL)   /usr/sbin/useradd， /usr/bin/rm</span><br><span class="line">/usr/sbin/*， /usr/bin/*                  以目录赋予权限，前加！是排除</span><br><span class="line">NOPASSWD: /usr/sbin/*， /usr/bin/*        不需要密码，可以直接以sudo执行</span><br></pre></td></tr></table></figure></li><li><p>如何验证ljq已经获取了root用户能力</p><p>#sudo -l       查看ljq能力权限</p></li><li><p>执行root用户可以执行的命令</p><p>#sudo useradd ljq01</p></li></ol><h1 id="第十五章-设置特殊权限位"><a href="#第十五章-设置特殊权限位" class="headerlink" title="第十五章 设置特殊权限位"></a>第十五章 设置特殊权限位</h1><p>rwx -w- –x       系统文件数据的9个权限位  系统中实际应该有12个权限位</p><h2 id="15-1-setuid"><a href="#15-1-setuid" class="headerlink" title="15.1 setuid"></a>15.1 setuid</h2><p>权限设置方法：<br>chmod u+s    文件信息<br>chmod 4755   文件信息（赋予所有用户这个命令的权限，权限等级为文件所有人的权限）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ljq-ct ~]$chmod 4755 /bin/cat</span><br><span class="line">[root@ljq-ct ~]$ll /bin/cat</span><br><span class="line">-rwsr-xr-x. 1 root root 54160 Oct 30  2018 /bin/cat</span><br><span class="line">在属主权限位多出s信息</span><br></pre></td></tr></table></figure><p>总结：setuid权限位设置。将文件属主拥沉默的有的能力，分配给说有人</p><h2 id="15-2-setgid"><a href="#15-2-setgid" class="headerlink" title="15.2 setgid"></a>15.2 setgid</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod g+s    文件信息</span><br><span class="line">[root@ljq-ct ~]$chmod g+s /bin/cat</span><br><span class="line">[root@ljq-ct ~]$ll /bin/cat</span><br><span class="line">-rwxr-sr-x. 1 root root 54160 Oct 30  2018 /bin/cat</span><br><span class="line">[root@ljq-ct ~]$chmod 2755 /bin/cat</span><br><span class="line">[root@ljq-ct ~]$ll /bin/cat</span><br><span class="line">-rwxr-sr-x. 1 root root 54160 Oct 30  2018 /bin/cat</span><br><span class="line">[root@ljq-ct ~]$chmod 6755 /bin/cat</span><br><span class="line">[root@ljq-ct ~]$ll /bin/cat</span><br><span class="line">-rwsr-sr-x. 1 root root 54160 Oct 30  2018 /bin/cat</span><br></pre></td></tr></table></figure><p>总结：setgid权限位设置。将文件属主拥有的能力，分配给说有人</p><h2 id="15-3-sticky-bit：粘滞位：（创建一个共享目录）"><a href="#15-3-sticky-bit：粘滞位：（创建一个共享目录）" class="headerlink" title="15.3 sticky bit：粘滞位：（创建一个共享目录）"></a>15.3 sticky bit：粘滞位：（创建一个共享目录）</h2><p>作用：</p><p>可以将不通用户信息放置到共享目录中，实现不同用户数据可以相互查看，但是不可以随意修改，只能自己改自己上传的文件</p><p>设置方法：</p><p>chmod o+t   目录信息</p><p>chmod 1777  目录信息</p><p>系统中已经有一个共享目录，权限位1777  &#x2F;tmp</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ljq-ct /]$ll /tmp -d</span><br><span class="line">drwxrwxrwt. 9 root root 4096 Jun 29 21:56 /tmp</span><br></pre></td></tr></table></figure><p><img src="/post/5d946f6c.htm/%E7%B2%98%E6%80%BB%E7%BB%93.png"></p><h1 id="第十六章-如何防范系统中的重要文件不被修改（root也不能修改）"><a href="#第十六章-如何防范系统中的重要文件不被修改（root也不能修改）" class="headerlink" title="第十六章 如何防范系统中的重要文件不被修改（root也不能修改）"></a>第十六章 如何防范系统中的重要文件不被修改（root也不能修改）</h1><p>给文件加上锁头：</p><p>目的：使root用户也不能直接修改文件</p><p>设置方法：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ljq-ct /]$chattr +i /etc/passwd</span><br><span class="line">[root@ljq-ct /]$lsattr /etc/passwd</span><br><span class="line">----i----------- /etc/passwd</span><br></pre></td></tr></table></figure><p>解锁方法：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ljq-ct /]$chattr -i /etc/passwd</span><br><span class="line">[root@ljq-ct /]$lsattr /etc/passwd</span><br><span class="line">---------------- /etc/passwd</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学习理解Linux文件属性，和用户权限等基本知识</summary>
    
    
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/categories/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="Linux" scheme="http://blog.cndis.cn/tags/Linux/"/>
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/tags/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    <category term="用户权限" scheme="http://blog.cndis.cn/tags/%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90/"/>
    
    <category term="文件属性" scheme="http://blog.cndis.cn/tags/%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>Linux用户和用户组管理相关文件内容详解</title>
    <link href="http://blog.cndis.cn/post/36666541.html"/>
    <id>http://blog.cndis.cn/post/36666541.html</id>
    <published>2022-07-30T09:19:59.000Z</published>
    <updated>2022-12-07T07:26:25.128Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-概览"><a href="#第一章-概览" class="headerlink" title="第一章 概览"></a>第一章 概览</h1><table><thead><tr><th>文件位置</th><th>内容</th><th align="left">格式</th></tr></thead><tbody><tr><td>&#x2F;etc&#x2F;passwd</td><td>存储用户信息</td><td align="left">用户名：密码占位符：用户编号(uid)：归属组编号(gid)：用户描述（可为空）：家目录：shell路径</td></tr><tr><td>&#x2F;etc&#x2F;shadow</td><td>存储用户的密码信息</td><td align="left">用户名：加密后的密码：上次修改密码日期：密码策略(4个数字)：账号失效日期：保留位</td></tr><tr><td>&#x2F;etc&#x2F;group</td><td>存储用户组信息</td><td align="left">组名：密码位：组编号：组内成员</td></tr><tr><td>&#x2F;etc&#x2F;gshadow</td><td>存储组的密码信息</td><td align="left">组名：密码：组管理员：组内成员</td></tr><tr><td>&#x2F;etc&#x2F;sudoers</td><td>配置命令执行权限</td><td align="left">用户名：权限定义：权限（sudo）</td></tr></tbody></table><h1 id="第二章-x2F-etc-x2F-passwd"><a href="#第二章-x2F-etc-x2F-passwd" class="headerlink" title="第二章 &#x2F;etc&#x2F;passwd"></a>第二章 &#x2F;etc&#x2F;passwd</h1><p>Linux 系统中的 &#x2F;etc&#x2F;passwd 文件，是系统用户配置文件，存储了系统中所有用户的基本信息，并且<strong>所有用户</strong>都可以对此文件执行读操作。</p><p><img src="/post/36666541.htm/passwd.png" alt="passwd文件"></p><p>我们先来看看这个文件里面有什么东西吧</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">...太多了，省略一部分...</span><br><span class="line">skx:x:1000:1000:ubuntu-18.04.1,,,:/home/skx:/bin/bash</span><br><span class="line">lilei:x:1001:1001:,,,:/home/lilei:/bin/bash</span><br><span class="line">1.2.3.4.5.6.</span><br></pre></td></tr></table></figure><p>文件中每一行代表着一个用户。</p><p>打开文件可以看到有很多行，怎么会有这么多用户呢？这些用户中的绝大多数是系统或服务正常运行所必需的用户，这种用户通常称为系统用户或伪用户。系统用户无法用来登录系统，但也不能删除，因为一旦删除，依赖这些用户运行的服务或程序就不能正常执行，会导致系统问题。</p><p>文件中每一行的格式如下所示，共有 7 个字段，用 “:” 进行分隔，下面分别介绍作用</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">用户名：密码：UID（用户ID）：GID（组ID）：描述性信息：主目录：默认Shell</span><br></pre></td></tr></table></figure><h2 id="2-1-字段详解"><a href="#2-1-字段详解" class="headerlink" title="2.1 字段详解"></a>2.1 字段详解</h2><h3 id="2-1-1-用户名"><a href="#2-1-1-用户名" class="headerlink" title="2.1.1 用户名"></a>2.1.1 用户名</h3><p>root, skx, lilei 这些都是用户名，用户名仅是为了方便用户记忆，Linux 系统是通过 UID 来识别用户身份，分配用户权限的。&#x2F;etc&#x2F;passwd 文件中就定义了用户名和 UID 之间的对应关系。</p><h3 id="2-1-2-密码"><a href="#2-1-2-密码" class="headerlink" title="2.1.2 密码"></a>2.1.2 密码</h3><p>“x” 表示此用户有密码，但不是真正的密码，真正的密码保存在 &#x2F;etc&#x2F;shadow 文件中。</p><p>在早期的 UNIX 中，这里保存的就是真正的加密密码串，但由于所有程序都能读取此文件，用户数据容易被窃取（可以暴力破解的）。现在 Linux 系统把真正的加密密码串放置在 &#x2F;etc&#x2F;shadow 文件中，此文件只有 root 用户可以浏览和操作，这样就最大限度地保证了密码的安全。</p><p>注意：“x” 不能删除，如果删除了 “x”，那么系统会认为这个用户没有密码，从而导致只输入用户名而不用输入密码就可以登陆。</p><h3 id="2-1-3-UID"><a href="#2-1-3-UID" class="headerlink" title="2.1.3 UID"></a>2.1.3 UID</h3><p>UID，也就是用户 ID。每个用户都有唯一的一个 UID，Linux 系统通过 UID 来识别不同的用户。</p><p>在不同系统中，UID值范围也有所不同，但一般来说UID是由一个16bit的无符号整数表示的，其范围在0-65535之间。</p><table><thead><tr><th align="left">UID</th><th align="left">账户</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">root，超级用户的UID总为0</td></tr><tr><td align="left">65535</td><td align="left">nobody，总是UID的最大值</td></tr><tr><td align="left">1~999</td><td align="left">一般约定是系统保留范围，由系统使用</td></tr><tr><td align="left">1000~65534</td><td align="left">一般用户UID</td></tr></tbody></table><h3 id="2-1-4-GID"><a href="#2-1-4-GID" class="headerlink" title="2.1.4 GID"></a>2.1.4 GID</h3><p>全称“Group ID”，简称“组ID”，表示用户初始组的组 ID 号。这里需要解释一下初始组和附加组的概念。</p><ul><li>初始组，指用户登陆时就拥有这个用户组的相关权限。</li><li>附加组，指用户可以加入多个其他的用户组，并拥有这些组的权限。</li></ul><p>简单点说就是，用户 A 属于初始组 A，现在又加入了组 B，A 就同时属于两个组，组 A 就是初始组，组 B 就是附加组。</p><p>&#x2F;etc&#x2F;passwd 文件中的组 ID 是初始组ID。</p><h3 id="2-1-5-描述性信息"><a href="#2-1-5-描述性信息" class="headerlink" title="2.1.5 描述性信息"></a>2.1.5 描述性信息</h3><p>用来解释这个用户的意义，没什么重要用途</p><h3 id="2-1-6-主目录"><a href="#2-1-6-主目录" class="headerlink" title="2.1.6 主目录"></a>2.1.6 主目录</h3><p>也就是用户登录后有操作权限的访问目录，通常称为用户的主目录也称用户的家目录，切换用户默认进入这个目录。</p><h3 id="2-1-7-默认的Shell"><a href="#2-1-7-默认的Shell" class="headerlink" title="2.1.7 默认的Shell"></a>2.1.7 默认的Shell</h3><p>Shell 就是 Linux 的命令解释器，是用户和 Linux 内核之间沟通的桥梁。</p><p>系统只认识 0101 的机器语言，我们是通过使用 Linux 命令来完成操作任务的，这就需要使用命令解释器。也就是说，Shell 命令解释器的功能就是将用户输入的命令转换成系统可以识别的机器语言。</p><p>通常情况下，Linux 系统默认使用的命令解释器是 bash（&#x2F;bin&#x2F;bash），当然还有其他命令解释器，例如 sh、csh 等。</p><h1 id="第三章-x2F-etc-x2F-shadow"><a href="#第三章-x2F-etc-x2F-shadow" class="headerlink" title="第三章 &#x2F;etc&#x2F;shadow"></a>第三章 &#x2F;etc&#x2F;shadow</h1><p>&#x2F;etc&#x2F;shadow 文件，用于存储 Linux 系统中用户的密码信息，又称为“影子文件”。</p><p><img src="/post/36666541.htm/shadow.png" alt="shadow文件"></p><p>早期的 UNIX 密码放在 &#x2F;etc&#x2F;passwd 文件中，由于该文件允许所有用户读取，易导致用户密码泄露，因此从 &#x2F;etc&#x2F;passwd 文件中分离出来，并单独放到了此文件中。&#x2F;etc&#x2F;shadow 文件只有 root 用户拥有读权限，保证了用户密码的安全性。</p><p>我们先看看 &#x2F;etc&#x2F;shadow 文件中有什么吧</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">root:!:17826:0:99999:7:::</span><br><span class="line">daemon:*:17737:0:99999:7:::</span><br><span class="line">bin:*:17737:0:99999:7:::</span><br><span class="line">...太多了，省略一部分...</span><br><span class="line">skx:$1$jP$V1agVNyLfEYwNQLc6IrJt0:17826:0:99999:7:::</span><br><span class="line">lilei:$6$zvt9aWzy$aoZDNPL0.mXFfsJczn.9gZtHZwmFTAFIbe4qHZd48zeB1mIka7jOsrmGvGMBV8LUV.iUdr6bk0hQZyGSOPiTy/:18420:0:99999:7:::</span><br><span class="line">1.2.3.4.5.6.</span><br></pre></td></tr></table></figure><p>文件中每行代表一个用户，使用 “:” 分隔，每行的用户信息有 9 个字段，格式如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">用户名：加密密码：最后一次修改时间：最小修改时间间隔：密码有效期：密码需要变更前的警告天数：密码过期后的宽限时间：账号失效时间：保留字段</span><br></pre></td></tr></table></figure><p>下面进行详细介绍</p><h2 id="3-1-字段详解"><a href="#3-1-字段详解" class="headerlink" title="3.1 字段详解"></a>3.1 字段详解</h2><h3 id="3-1-1-用户名"><a href="#3-1-1-用户名" class="headerlink" title="3.1.1 用户名"></a>3.1.1 用户名</h3><p>root, skx, lilei 这些都是用户。</p><h3 id="3-1-2-加密密码"><a href="#3-1-2-加密密码" class="headerlink" title="3.1.2 加密密码"></a>3.1.2 加密密码</h3><p>这里保存的是真正加密的密码，以 lilei 的密码为例</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$6$zvt9aWzy$aoZDNPL0.mXFfsJczn.9gZtHZwmFTAFIbe4qHZd48zeB1mIka7jOsrmGvGMBV8LUV.iUdr6bk0hQZyGSOPiTy/</span><br><span class="line">1.</span><br></pre></td></tr></table></figure><p>这个密码，是单向不可逆的。目前 Linux 的密码采用的是 SHA512 散列加密算法，原来采用的是 MD5 或 DES 加密算法。SHA512 散列加密算法的加密等级更高，也更加安全。</p><blockquote><p>注意，这串密码产生的乱码不能手工修改，如果手工修改，系统将无法识别密码，导致密码失效。很多软件透过这个功能，在密码串前加上 “!”、”*” 或 “x” 使密码暂时失效。</p></blockquote><p>所有伪用户的密码都是 “!!” 或 “*”，代表没有密码是不能登录的。当然，新创建的用户如果不设定密码，那么它的密码项也是 “!!”，代表这个用户没有密码，不能登录。</p><h3 id="3-1-3-最后一次修改时间"><a href="#3-1-3-最后一次修改时间" class="headerlink" title="3.1.3 最后一次修改时间"></a>3.1.3 最后一次修改时间</h3><p>此字段表示最后一次修改密码的时间，数字的含义是从 1970 年 1 月 1 日到现在的天数，1970 年 1 月 1 日作为 1，过一天加 1，上面 root 账号最后一次修改时间为 17826，这是哪一天呢，可以使用如下命令进行换算：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">root@ubuntu:~# date -d &quot;1970-01-01 17826 days&quot;</span><br><span class="line">2018年 10月 22日 星期一 00:00:00 +08</span><br><span class="line">1.2.</span><br></pre></td></tr></table></figure><h3 id="3-1-4-最小修改时间间隔"><a href="#3-1-4-最小修改时间间隔" class="headerlink" title="3.1.4 最小修改时间间隔"></a>3.1.4 最小修改时间间隔</h3><p>设置了这个值，则表示从变更密码的日期算起，多少天内无法再次修改密码，如果是 0 的话，则没有限制</p><h3 id="3-1-5-密码有效期"><a href="#3-1-5-密码有效期" class="headerlink" title="3.1.5 密码有效期"></a>3.1.5 密码有效期</h3><p>该字段的默认值为 99999，也就是 273 年，可认为是永久生效。如果改为 90，则表示密码被修改 90 天之后必须再次修改，否则该用户即将过期。可以通过这个字段强制用户定期修改密码。</p><h3 id="3-1-6-密码需要变更前的警告天数"><a href="#3-1-6-密码需要变更前的警告天数" class="headerlink" title="3.1.6 密码需要变更前的警告天数"></a>3.1.6 密码需要变更前的警告天数</h3><p>密码快过期了，系统就会给出警告了，提醒用户 “再过 n 天你的密码就要过期了，请尽快重新设置你的密码！”。该字段的默认值是 7。</p><h3 id="3-1-7-密码过期后的宽限天数"><a href="#3-1-7-密码过期后的宽限天数" class="headerlink" title="3.1.7 密码过期后的宽限天数"></a>3.1.7 密码过期后的宽限天数</h3><p>在密码过期后，不是立即失效，则在此字段规定的宽限天数内，用户还是可以登录系统的；如果过了宽限天数，系统将不再让此账户登陆，也不会提示账户过期，是完全禁用。</p><p>假设这个字段设置为 10，则代表密码过期 10 天后失效；如果是 0，则代表密码过期后立即失效；如果是 -1，则代表密码永远不会失效。</p><h3 id="3-1-8-账号失效时间"><a href="#3-1-8-账号失效时间" class="headerlink" title="3.1.8 账号失效时间"></a>3.1.8 账号失效时间</h3><p>过了这个日期账号就无法使用。使用自 1970 年 1 月 1 日以来的总天数作为账户的失效时间。该字段通常被使用在具有收费服务的系统中。</p><h3 id="3-1-9-保留"><a href="#3-1-9-保留" class="headerlink" title="3.1.9 保留"></a>3.1.9 保留</h3><p>这个字段目前没有使用，等待新功能的加入。</p><h1 id="第四章-x2F-etc-x2F-group"><a href="#第四章-x2F-etc-x2F-group" class="headerlink" title="第四章 &#x2F;etc&#x2F;group"></a>第四章 &#x2F;etc&#x2F;group</h1><p><img src="/post/36666541.htm/etc:group.png" alt="/etc/group"></p><p><img src="/post/36666541.htm/group.png" alt="group文件"></p><h2 id="4-1-x2F-etc-x2F-group文件描述"><a href="#4-1-x2F-etc-x2F-group文件描述" class="headerlink" title="4.1 &#x2F;etc&#x2F;group文件描述"></a>4.1 &#x2F;etc&#x2F;group文件描述</h2><p>&#x2F;etc&#x2F;group文件和&#x2F;etc&#x2F;shadow与&#x2F;etc&#x2F;passwd文件都是有关于系统管理员对用户和用户组管理时相关的文件。 &#x2F;etc&#x2F;group文件是有关于系统管理员对用户和用户组管理的文件,linux用户组的所有组信息都存放在&#x2F;etc&#x2F;group文件中。具有某种共同特征的用户集合起来就是一个用户组（Group）。用户组（Group）配置文件主要有 &#x2F;etc&#x2F;gshadow和&#x2F;etc&#x2F;group，其中&#x2F;etc&#x2F;gshadow是用户组的加密信息文件。</p><p>将用户分组是Linux系统中对用户进行管理及控制访问权限的一种方法。每个用户至少都属于某个用户组；一个组中可以有一个或者多个用户，一个用户也可以属于不 同的组。当一个用户同时属于多个组中的成员时，在&#x2F;etc&#x2F;passwd文件中记录的是用户所属的主要组，也就是登录时所属的默认组，而其它组称为附加组。</p><h2 id="4-2-x2F-etc-x2F-group字段解析"><a href="#4-2-x2F-etc-x2F-group字段解析" class="headerlink" title="4.2 &#x2F;etc&#x2F;group字段解析"></a>4.2 &#x2F;etc&#x2F;group字段解析</h2><p>用户组的所有信息都存放在**&#x2F;etc&#x2F;group**文件中。此文件的格式是由冒号(:)隔开若干个字段，这些字段具体如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">组名：加密后的组密码：组管理员：组中用户（多个用户用&quot;,&quot;隔开）</span><br></pre></td></tr></table></figure><p><strong>组名:口令:组标识号:组内用户列表</strong></p><p><strong>第一列</strong>：组名是用户组的名称，由字母或数字构成。与&#x2F;etc&#x2F;passwd中的登录名一样，组名不应重复。</p><p><strong>第二列</strong>：口令字段存放的是用户组加密后的口令字。一般Linux系统的用户组都没有口令，即这个字段一般为空，或者是*。</p><p><strong>第三列</strong>：组标识号与用户标识号类似，也是一个整数，被系统内部用来标识组。别称GID.</p><p><strong>第四列</strong>：属于这个组的所有用户的列表，不同用户之间用逗号(,)分隔。这个用户组可能是用户的主组，也可能是附加组。</p><h1 id="第五章-x2F-etc-x2F-gshadow"><a href="#第五章-x2F-etc-x2F-gshadow" class="headerlink" title="第五章 &#x2F;etc&#x2F;gshadow"></a>第五章 &#x2F;etc&#x2F;gshadow</h1><p><img src="/post/36666541.htm/gshadow.png" alt="gshadow"></p><h1 id="第六章-x2F-etc-x2F-sudoers"><a href="#第六章-x2F-etc-x2F-sudoers" class="headerlink" title="第六章 &#x2F;etc&#x2F;sudoers"></a>第六章 &#x2F;etc&#x2F;sudoers</h1><p>翻译及说明如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This file MUST be edited with the &#x27;visudo&#x27; command as root.</span></span><br><span class="line"><span class="comment"># 这个文件必须是&#x27;root&#x27;用户以&#x27;visudo&#x27;命令进行编辑</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># Please consider adding local content in /etc/sudoers.d/ instead of</span></span><br><span class="line"><span class="comment"># directly modifying this file.</span></span><br><span class="line"><span class="comment"># 请考虑在/etc/sudoers.d/中添加本地内容而不是直接修改该文件。  </span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># See the man page for details on how to write a sudoers file.</span></span><br><span class="line"><span class="comment"># 有关如何编写sudoers文件的详细信息，请参阅手册页。(使用命令 man sudoers)</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line">Defaultsenv_reset</span><br><span class="line">Defaultsmail_badpass</span><br><span class="line">Defaultssecure_path=<span class="string">&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Host alias specification</span></span><br><span class="line"><span class="comment"># 主机别名规范</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># User alias specification</span></span><br><span class="line"><span class="comment"># 用户别名规范</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Cmnd alias specification</span></span><br><span class="line"><span class="comment"># 驱动命令别名规范</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># User privilege specification</span></span><br><span class="line"><span class="comment"># 用户权限规范</span></span><br><span class="line"><span class="comment"># 语法：</span></span><br><span class="line"><span class="comment"># 用户或用户组 登录的主机=(可以变换的身份)可以执行的命令</span></span><br><span class="line"><span class="comment"># 说明：</span></span><br><span class="line"><span class="comment"># 加“%”代表用户组</span></span><br><span class="line"><span class="comment">#命令部分（等号后面）可以有其他的格式，如下面例子：</span></span><br><span class="line"><span class="comment"># %sys ALL = NETWORKING, SOFTWARE, SERVICES, LOCATE, DRIVERS</span></span><br><span class="line"><span class="comment"># 允许sys用户组中的用户使用NETWORKING等所有别名（别名在上方别名规范中配置）中配置的命令</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># %wheel    ALL=(ALL)    NOPASSWD: ALL</span></span><br><span class="line"><span class="comment"># 允许wheel用户组中的用户在不输入该用户的密码的情况下使用所有命令</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># %users  ALL=/sbin/mount /mnt/cdrom, /sbin/umount /mnt/cdrom</span></span><br><span class="line"><span class="comment"># 允许users用户组中的用户像root用户一样使用mount、unmount、chrom命令 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许root用户执行任意路径下的任意命令 </span></span><br><span class="line">rootALL=(ALL:ALL) ALL</span><br><span class="line"></span><br><span class="line"><span class="comment"># Members of the admin group may gain root privileges</span></span><br><span class="line"><span class="comment"># admin组的成员可以获得root权限  </span></span><br><span class="line">%admin ALL=(ALL) ALL</span><br><span class="line"></span><br><span class="line"><span class="comment"># Allow members of group sudo to execute any command</span></span><br><span class="line"><span class="comment"># 允许sudo组的成员执行任何命令  </span></span><br><span class="line">%sudoALL=(ALL:ALL) ALL</span><br><span class="line"></span><br><span class="line"><span class="comment"># See sudoers(5) for more information on &quot;#include&quot; directives:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#includedir /etc/sudoers.d</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">有关用户和组的文件passwd文件, shadow文件, gshadow文件, sudoers文件</summary>
    
    
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/categories/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="Linux" scheme="http://blog.cndis.cn/tags/Linux/"/>
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/tags/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    <category term="passwd文件" scheme="http://blog.cndis.cn/tags/passwd%E6%96%87%E4%BB%B6/"/>
    
    <category term="shadow文件" scheme="http://blog.cndis.cn/tags/shadow%E6%96%87%E4%BB%B6/"/>
    
    <category term="gshadow文件" scheme="http://blog.cndis.cn/tags/gshadow%E6%96%87%E4%BB%B6/"/>
    
    <category term="sudoers文件" scheme="http://blog.cndis.cn/tags/sudoers%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统目录详解</title>
    <link href="http://blog.cndis.cn/post/6a98e9b4.html"/>
    <id>http://blog.cndis.cn/post/6a98e9b4.html</id>
    <published>2022-07-28T08:55:11.000Z</published>
    <updated>2022-12-07T07:26:25.130Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-Linux和Windows文件系统"><a href="#第一章-Linux和Windows文件系统" class="headerlink" title="第一章 Linux和Windows文件系统"></a>第一章 Linux和Windows文件系统</h1><p>下面分别简单介绍一下启动Windows和Linux之后，它们是怎样看待自己世界的。着重介绍Linux。</p><h2 id="1-1-Window上面的文件系统"><a href="#1-1-Window上面的文件系统" class="headerlink" title="1.1 Window上面的文件系统"></a>1.1 Window上面的文件系统</h2><p>Windows系统中一切东西都是存放在硬盘上的。启动系统后，先硬盘，再硬盘上的分区和每个分区所对应的文件系统，最后是存放在某个分区特定的文件系统中的文件，也就是说，Windows是通过“某个硬盘-硬盘上的某个分区-分区上的特定文件系统-特定文件系统中的文件”这样的顺序来访问到一个文件的。</p><p>具体点说，假设我们的机器上面一个硬盘，硬盘分为个区，那么我们启动系统之后就会看到C，D，E个分区(也就是我们启动系统后看到的”C”盘，”D”盘等)，每个分区可以被格式化为各自不同的文件系统(例如NTFS格式，FAT32格式等，文件系统的基本功能就是为了存放文件的，不同文件系统区别一般在于管理其中存放的文件的功能的强弱，分区被格式化成指定格式的文件系统之后，就可以存放任何文件和目录了。这里，我们可以把文件大体分为两种：系统文件和用户文件。一般来说系统文件(例如Windows操作系统本身，一些系统程序，程序运行所需的库文件，以及一些系统配置文件等)存放的默认位置在C盘，当然也可以在安装时候指定在其他盘;其它用户文件，包含用户后来安装的程序以及一些数据文件等，用户可以把它们随意存放在任意的分区。</p><p>这样组织优点更缺点。优点是：用户存放东西的位置比较自由，系统结构简单便于新用户上手。缺点很多这里只列出几种：</p><ol><li><p>由于对“系统文件”和“用户文件”存放位置缺乏细致的规定，数据组织的方式显得比较凌乱，并且两种文件之间很容易相互干扰(例如数据文。</p></li><li><p>用户的使用经验对系统的使用效率影响很大。一般来说，我们使用Windows时候合理使用分区会提升的系统效率。例如根据需要设置合理的系统分区(C分区的大小，尽量少往C盘存放数据文件，根据具体情况可以将一些“重要并且常用的” 程序安装在C分区，随时保持系统目录的清洁和大小助于提升系统的运行速度，用户安装的一般软件尽量不要安装在C盘，安装软件时候指定的位置最好采用默认标准目录名称(例如X:Program Files目录，这里X表示盘符而不要自己定义一些奇怪名字的目录，这样便于软件的维护等等。</p></li><li><p>共享不便。Windows上经验的用户们会将自己的目录结构组织好，但是每个用户组织自己内容的方式是不一样的，所以他的机器上哪里存放了什么内容，别人很难知道，为共享带来了麻烦。但是这些在Linux系统中，情况就所不同了。</p></li></ol><h2 id="1-2-Linux上面的文件系统"><a href="#1-2-Linux上面的文件系统" class="headerlink" title="1.2 Linux上面的文件系统"></a>1.2 Linux上面的文件系统</h2><p>在Linux系统中，正好相反，一切东西都是存放在一个唯一的“虚拟文件系统”中的，这个“虚拟文件系统”是树状的结构以一个根目录开始。启动系统后，先有这个虚拟文件系统，再硬盘，再把某个硬盘的某个分区做为这个虚拟文件系统的一部分(用某个子目录表示这个分区，再通过这个虚拟文件系统中对应硬盘分区的那个子目录确定硬盘分区中的特定文件系统，最后的文件就存放在这个特定的文件系统中，也就是说，Linux系统是通过“虚拟文件系统-硬盘-硬盘上的分区-分区上的特定文件系统-特定文件系统中的文件”这样的顺序来访问一个文件的。</p><p>可能对习惯了使用Windows的用户来说，这样的组织点不太适应，这里的“虚拟文件系统”，实质就是一颗目录树，最开始的目录叫做根目录，根目录中又有每一级子目录，或者文件，子目录又有子子目录和文件，其中每个子目录都特定的功能这个功能是约定俗成了的后面会详细说明……和Windows中把硬盘分成的C，D，E分区的概念不同了，Linux中最开始根本就没有硬盘的概念，就只有一个纯粹的“虚拟文件系统”。如果想要使用哪个硬盘的某个分区，就把那个分区“挂载”到某个子目录之下，这样硬盘中的分区，文件系统，目录等内容就呈现到了那个子目录里面。也就是说，在Linux中，我们使用硬盘中的数据，实际是先把硬盘“挂载”到某个子目录下，然后通过那个子目录来访问硬盘的。硬盘中原的数据组织结构都反映到了子目录上，成为了整个“虚拟文件系统”根目录下的一颗子树。</p><p>也许人会问，没这个“虚拟文件系统”就无法使用硬盘，但是最开始没有硬盘，那么这个“虚拟文件系统”以及相应的组织结构是怎么存放起来的呢?这个问题，就像先鸡还是先蛋这个问题一样看似简单实则……但是在Linux中，很轻易地跳出了这个思维循环，问题的答案并没在“虚拟文件系统”和“硬盘”这两者之间徘徊，而是第者——“内存”，Linux系统启动起来之后，整个“虚拟文件系统”的组织结构，都是随着每次系统的启动自动在内存中建立好了的，根本就不需要硬盘。</p><p>Linux这样组织它的目录结构，缺点当然更多的是优点。缺点就是，最开始“虚拟文件系统”中的每个子目录的功能是事先规定好了的，我们需要事先知道那些目录存放哪些文件，然后在相应的位置中创建自己的内容(当然最开始的新手，也可以像Windows那样随意地创建目录和文件，实际上最开始的目录也不多，主要就那么几个，花不了多长时间就会明白它们的作用的，本文后面着重对这些目录进行介绍。而它的优点这里只说几点：(1当我们了解了这些目录的功能之后，我们对整个Linux操作系统的运行机理也会一个大致的了解。(2助于我们以一种最高效的方式组织自己的数据，分类清晰并且不会对系统运行有任何影响，规定了最开始每个目录的功能，并没有限制我们的自由，因为我们知道我们可以在哪里创建自己的子目录并且在子目录中任意创建自己的文件。(3由于一个统一性的目录组织结构，所以Linux上面的用户在共享数据的时候，能够很容易地猜测出他所需要的数据大致存放在什么位置，同时也不会影响到私有数据的保密性(怎么存放自己的私有数据，那是用户自己决定的。</p><h2 id="1-3-Linux文件系统在操作系统中的位置"><a href="#1-3-Linux文件系统在操作系统中的位置" class="headerlink" title="1.3 Linux文件系统在操作系统中的位置"></a>1.3 Linux文件系统在操作系统中的位置</h2><p>在Linux系统中，主要两个东西：“虚拟文件系统”中的文件和Linux操作系统内核本身。逻辑上可以认为前者属于上层，后者在下层，前者基于后者，后者依赖前者而存在。</p><p>Linux把除了它本身(Linux操作系统内核以外的一切事物都看作是在“虚拟文件系统”中的文件了。无论是键盘，鼠标，数据，程序，CPU，内存，网卡……无论是硬件、软件、数据还是内存中的东西，我们都可以在虚拟文件系统中的相应子目录对他们进行访问和操作，操作统一。而实现这些管理的幕后就是Linux操作系统内核本身：启动Linux系统的时候，首先电脑把操作系统内核加载到内存中，内核本身提供了文件管理，设备管理，内存管理，CPU进程调度管理，网络管理等功能，等内核运行起来之后，就在内存中建立起相应的“虚拟文件系统”，最后就是内核利用它提供的那些功能，来管理虚拟文件系统中的硬件软件等各种资源了。</p><p>Linux把提供操作系统本身功能(管理计算机软硬件资源的那些部分划给了操作系统内核，使得操作系统内核成为一个独立的部分，有它自己的源代码;其他的一切(软件，硬件，数据)都根据其特性有自己的源代码或者自由地组织并且存放在那个“虚拟文件系统中”由操作系统内核来管理。这样，将系统本身和系统所管理的资源分开，有助于对系统或者系统所管理的资源进行灵活的定制和扩展，还能按需快速建立起只适合自己使用的操作系统(实际Ubuntu，Fedora，RedHat等各种不同的Linux操作系统简单来说就是对其文件系统和内核进行了不同的配置而产生的“大众化”的操作系统，相比之下，Windows就显得非常地零乱复杂，将系统、软件、硬件都混在了一起。</p><p>另外，我们还要注意个问题，就是在我们的角度上，是使用路径来访问一个文件的。表示文件的路径由“文件所在的目录+各级目录的分隔符+文件”个部分组成，这无论在Windows还是Linux上面，都是一样的，所不同的是，Windows下面目录分隔符是“”，Linux下面是“&#x2F;”，也许这也是两者之间为了表示其各自立场不同的一个原因吧?^_^</p><blockquote><p>例如：</p><p>Window系统上的文件：D:Program FilesPPStreamPPStream.exe</p><p>Linux系统上的文件：&#x2F;usr&#x2F;bin&#x2F;screen</p></blockquote><h1 id="第二章Linux目录结构"><a href="#第二章Linux目录结构" class="headerlink" title="第二章Linux目录结构"></a>第二章Linux目录结构</h1><p><img src="/post/6a98e9b4.htm/1%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png" alt="Linux目录结构"></p><p>大多数这些目录存在于所有类 Unix 操作系统中，并且通常以大致相同的方式使用；但是，这里的描述是专门用于 FHS 的，对于 Linux 以外的平台不具有权威性。</p><table><thead><tr><th align="center">目录</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">&#x2F;</td><td align="left">整个文件系统层次结构的<em>主层次</em>根和根目录。</td></tr><tr><td align="center">&#x2F;bin</td><td align="left">需要在单用户模式下可用的基本命令二进制文件；对于所有用户，<em>例如</em>cat、ls、cp。</td></tr><tr><td align="center">&#x2F;boot</td><td align="left">引导加载程序文件，<em>例如</em>内核、initrd。</td></tr><tr><td align="center">&#x2F;dev</td><td align="left">设备文件，<em>例如</em>， &#x2F;dev&#x2F;null ， &#x2F;dev&#x2F;disk0 ， &#x2F;dev&#x2F;sda1 ， &#x2F;dev&#x2F;tty ， &#x2F;dev&#x2F;random。</td></tr><tr><td align="center">&#x2F;etc</td><td align="left">特定于主机的系统范围配置文件。关于名称本身的含义一直存在争议。在贝尔实验室的 UNIX 实施文档的早期版本中，&#x2F;etc 被称为<em>etcetera 目录</em>，因为该目录在历史上保存了不属于其他地方的所有内容（但是，FHS 将 &#x2F;etc 限制为静态配置文件，并且可能不包含二进制文件）。 自从早期文档发布以来，目录名称已以各种方式重新解释。最近的解释包括诸如“可编辑文本配置”或“扩展工具箱”之类的首字母缩略词。</td></tr><tr><td align="center">&#x2F;etc&#x2F;opt</td><td align="left">存储在 &#x2F;opt 中的附加包的配置文件。</td></tr><tr><td align="center">&#x2F;etc&#x2F;sgml</td><td align="left">用于处理 SGML 的软件的配置文件，例如目录。</td></tr><tr><td align="center">&#x2F;etc&#x2F;X11</td><td align="left">X Window 系统版本 11 的配置文件。</td></tr><tr><td align="center">&#x2F;etc&#x2F;xml</td><td align="left">用于处理 XML 的软件的配置文件，例如目录。</td></tr><tr><td align="center">&#x2F;home</td><td align="left">用户的主目录，包含保存的文件、个人设置等。</td></tr><tr><td align="center">&#x2F;lib</td><td align="left">&#x2F;bin 和 &#x2F;sbin 中的二进制文件必不可少的库。</td></tr><tr><td align="center">&#x2F;lib<qual></qual></td><td align="left">替代格式基本库。这些目录是可选的，但如果它们存在，它们有一些要求。</td></tr><tr><td align="center">&#x2F;media</td><td align="left">CD-ROM 等可移动媒体的挂载点（2004 年出现在 FHS-2.3 中）。</td></tr><tr><td align="center">&#x2F;mnt</td><td align="left">临时挂载的文件系统。</td></tr><tr><td align="center">&#x2F;opt</td><td align="left">可选的应用软件包。</td></tr><tr><td align="center">&#x2F;proc</td><td align="left">提供进程和内核信息作为文件的虚拟文件系统。在Linux中，对应一个procfs挂载。通常由系统动态生成和填充。</td></tr><tr><td align="center">&#x2F;root</td><td align="left">root 用户的主目录。</td></tr><tr><td align="center">&#x2F;run</td><td align="left">运行时变量数据：关于自上次启动以来正在运行的系统的信息，<em>例如</em>，当前登录的用户和正在运行的守护进程。此目录下的文件必须在引导过程开始时删除或截断，但在提供此目录作为临时文件系统 (tmpfs) 的系统上，这不是必需的。</td></tr><tr><td align="center">&#x2F;sbin</td><td align="left">基本系统二进制文件，<em>例如</em>fsck、init、route。</td></tr><tr><td align="center">&#x2F;srv</td><td align="left">该系统提供的特定于站点的数据，例如 Web 服务器的数据和脚本、FTP 服务器提供的数据以及版本控制系统的存储库（出现在 2004 年的 FHS-2.3 中）。</td></tr><tr><td align="center">&#x2F;sys</td><td align="left">包含有关设备、驱动程序和一些内核功能的信息。</td></tr><tr><td align="center">&#x2F;tmp</td><td align="left">临时文件（另见 &#x2F;var&#x2F;tmp）。通常不会在系统重新启动之间保留，并且可能会受到严格的大小限制。</td></tr><tr><td align="center">&#x2F;usr</td><td align="left">只读用户数据的<em>二级层次结构</em>；包含大多数（多）用户实用程序和应用程序。</td></tr><tr><td align="center">&#x2F;usr&#x2F;bin</td><td align="left">非必要的命令二进制文件（在单用户模式下不需要）；对于所有用户。</td></tr><tr><td align="center">&#x2F;usr&#x2F;include</td><td align="left">标准包含文件。</td></tr><tr><td align="center">&#x2F;usr&#x2F;lib</td><td align="left">&#x2F;usr&#x2F;bin 和 &#x2F;usr&#x2F;sbin 中二进制文件的库。</td></tr><tr><td align="center">&#x2F;usr&#x2F;lib<qual></qual></td><td align="left">替代格式库，<em>例如</em>&#x2F;usr&#x2F;lib32 用于 64 位机器上的 32 位库（可选）。</td></tr><tr><td align="center">&#x2F;usr&#x2F;local</td><td align="left">本地数据的<em>三级层次结构</em>，特定于该主机。通常还有更多子目录，<em>例如</em>bin 、 lib 、 share 。</td></tr><tr><td align="center">&#x2F;usr&#x2F;sbin</td><td align="left">非必要的系统二进制文件，<em>例如</em>各种网络服务的守护进程。</td></tr><tr><td align="center">&#x2F;usr&#x2F;share</td><td align="left">与架构无关（共享）的数据。</td></tr><tr><td align="center">&#x2F;usr&#x2F;src</td><td align="left">源代码，<em>例如</em>，内核源代码及其头文件。</td></tr><tr><td align="center">&#x2F;usr&#x2F;X11R6</td><td align="left">X Window System，第 11 版，第 6 版（最高 FHS-2.3，可选）。</td></tr><tr><td align="center">&#x2F;var</td><td align="left">可变文件——在系统正常运行期间其内容预计会不断变化的文件——例如日志、假脱机文件和临时电子邮件文件。</td></tr><tr><td align="center">&#x2F;var&#x2F;cache</td><td align="left">应用程序缓存数据。由于耗时的 I&#x2F;O 或计算，这些数据是在本地生成的。应用程序必须能够重新生成或恢复数据。可以删除缓存的文件而不会丢失数据。</td></tr><tr><td align="center">&#x2F;var&#x2F;lib</td><td align="left">状态信息。程序在运行时修改的持久数据，<em>例如</em>数据库、打包系统元数据等。</td></tr><tr><td align="center">&#x2F;var&#x2F;lock</td><td align="left">锁定文件。跟踪当前正在使用的资源的文件。</td></tr><tr><td align="center">&#x2F;var&#x2F;log</td><td align="left">日志文件。各种日志。</td></tr><tr><td align="center">&#x2F;var&#x2F;mail</td><td align="left">邮箱文件。在某些发行版中，这些文件可能位于已弃用的 &#x2F;var&#x2F;spool&#x2F;mail 中。</td></tr><tr><td align="center">&#x2F;var&#x2F;opt</td><td align="left">来自存储在 &#x2F;opt 中的附加包的变量数据。</td></tr><tr><td align="center">&#x2F;var&#x2F;run</td><td align="left">运行时变量数据。此目录包含描述系统自启动以来的系统信息数据。在 FHS 3.0 中， &#x2F;var&#x2F;run 被替换为 &#x2F;run ；为了向后兼容，系统应该继续提供 &#x2F;var&#x2F;run 目录，或者提供从 &#x2F;var&#x2F;run 到 &#x2F;run 的符号链接。</td></tr><tr><td align="center">&#x2F;var&#x2F;spool</td><td align="left">等待处理的任务的假脱机，<em>例如</em>，打印队列和外发邮件队列。</td></tr><tr><td align="center">&#x2F;var&#x2F;spool&#x2F;mail</td><td align="left">用户邮箱的弃用位置。</td></tr><tr><td align="center">&#x2F;var&#x2F;tmp</td><td align="left">在重新启动之间保留的临时文件。</td></tr></tbody></table><p>以图示的方式，这里是文件系统的样子。其中一些目录也有标准文件 - 特别是 &#x2F;bin、&#x2F;etc 和 &#x2F;sbin。</p><p><img src="/post/6a98e9b4.htm/2Linux%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E8%AF%A6%E8%A7%A3.svg" alt="Linux目录结构详解"></p>]]></content>
    
    
    <summary type="html">初识Linux目录</summary>
    
    
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/categories/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="Linux" scheme="http://blog.cndis.cn/tags/Linux/"/>
    
    <category term="云计算运维综合架构" scheme="http://blog.cndis.cn/tags/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%BF%90%E7%BB%B4%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/"/>
    
    <category term="Linux目录" scheme="http://blog.cndis.cn/tags/Linux%E7%9B%AE%E5%BD%95/"/>
    
    <category term="Linux系统文件理解" scheme="http://blog.cndis.cn/tags/Linux%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6%E7%90%86%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>RedHat-OpenStack搭建</title>
    <link href="http://blog.cndis.cn/post/26fcf24e.html"/>
    <id>http://blog.cndis.cn/post/26fcf24e.html</id>
    <published>2022-07-22T01:42:07.000Z</published>
    <updated>2022-12-07T07:26:25.113Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-VMware-Workstation-虚拟机环境"><a href="#第一章-VMware-Workstation-虚拟机环境" class="headerlink" title="第一章 VMware Workstation 虚拟机环境"></a>第一章 VMware Workstation 虚拟机环境</h1><h2 id="1-1-NTP"><a href="#1-1-NTP" class="headerlink" title="1.1 NTP"></a>1.1 NTP</h2><p>RHEL7.1:NTP-Server+YUM 源(http):192.168.11.253&#x2F;24</p><p><img src="/post/26fcf24e.htm/NTP%E4%B8%BB%E6%9C%BA%E8%AF%A6%E6%83%85.png" alt="NTP主机"></p><h2 id="1-2-server-a"><a href="#1-2-server-a" class="headerlink" title="1.2 server-a"></a>1.2 server-a</h2><p>RHEL7.1:控制节点+计算节点:192.168.11.10&#x2F;24</p><p><img src="/post/26fcf24e.htm/server-a%E4%B8%BB%E6%9C%BA%E8%AF%A6%E6%83%85.png" alt="server-a主机"></p><h2 id="1-3-server-b"><a href="#1-3-server-b" class="headerlink" title="1.3 server-b"></a>1.3 server-b</h2><p>RHEL7.1:计算节点:192.168.11.11&#x2F;24</p><p><img src="/post/26fcf24e.htm/server-b%E4%B8%BB%E6%9C%BA%E8%AF%A6%E6%83%85.png" alt="server-b主机"></p><h1 id="第二章-NTP配置"><a href="#第二章-NTP配置" class="headerlink" title="第二章 NTP配置"></a>第二章 NTP配置</h1><h2 id="2-1-初始化"><a href="#2-1-初始化" class="headerlink" title="2.1 初始化"></a>2.1 初始化</h2><h3 id="2-1-1-设置主机名"><a href="#2-1-1-设置主机名" class="headerlink" title="2.1.1 设置主机名"></a>2.1.1 设置主机名</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/hostname</span><br><span class="line"><span class="meta">#</span><span class="bash">NTP</span></span><br></pre></td></tr></table></figure><h3 id="2-1-2-关闭-SELINUX"><a href="#2-1-2-关闭-SELINUX" class="headerlink" title="2.1.2 关闭 SELINUX"></a>2.1.2 关闭 SELINUX</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim  /etc/selinux/config</span><br><span class="line"><span class="meta">#</span><span class="bash">SELINUX=disabled           <span class="comment">#更改此参数</span></span></span><br></pre></td></tr></table></figure><h3 id="2-1-3-配置IP地址"><a href="#2-1-3-配置IP地址" class="headerlink" title="2.1.3 配置IP地址"></a>2.1.3 配置IP地址</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-eno16777736 </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">IPADDR=192.168.11.253</span><br><span class="line">NETMASK=255.255.255.0 </span><br><span class="line">NAME=eno16777736 </span><br><span class="line">DEVICE=eno16777736 </span><br><span class="line">ONBOOT=yes</span><br></pre></td></tr></table></figure><h3 id="2-1-4-禁止-NetworkManager-开机自启动"><a href="#2-1-4-禁止-NetworkManager-开机自启动" class="headerlink" title="2.1.4 禁止 NetworkManager 开机自启动"></a>2.1.4 禁止 NetworkManager 开机自启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl disable NetworkManager</span><br></pre></td></tr></table></figure><h3 id="2-1-5-禁止防火墙服务开机自启动"><a href="#2-1-5-禁止防火墙服务开机自启动" class="headerlink" title="2.1.5 禁止防火墙服务开机自启动"></a>2.1.5 禁止防火墙服务开机自启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure><h3 id="2-1-6-停止防火墙服务"><a href="#2-1-6-停止防火墙服务" class="headerlink" title="2.1.6 停止防火墙服务"></a>2.1.6 停止防火墙服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><h3 id="2-1-7-检查防火墙服务状态"><a href="#2-1-7-检查防火墙服务状态" class="headerlink" title="2.1.7 检查防火墙服务状态"></a>2.1.7 检查防火墙服务状态</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl status firewalld.service</span><br></pre></td></tr></table></figure><h3 id="2-1-8-重启"><a href="#2-1-8-重启" class="headerlink" title="2.1.8 重启"></a>2.1.8 重启</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="2-2-搭建-本地YUM-源"><a href="#2-2-搭建-本地YUM-源" class="headerlink" title="2.2 搭建 本地YUM 源"></a>2.2 搭建 本地YUM 源</h2><h3 id="2-2-1-上传-ISO"><a href="#2-2-1-上传-ISO" class="headerlink" title="2.2.1 上传 ISO"></a>2.2.1 上传 ISO</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /iso</span><br><span class="line"><span class="meta">#</span><span class="bash">传 rhel-server-7.1-x86_64-dvd.iso 系统安装光盘 ISO 文件至 ntp 的 iso 目录</span></span><br><span class="line"><span class="meta">#</span><span class="bash">再传 RHEL7OSP-6.0-2015-02-23.2-x86_64.iso 红帽 OpenStack 安装光盘 ISO 文件至 ntp 的 iso 目录</span></span><br></pre></td></tr></table></figure><h3 id="2-2-2-查看上传结果"><a href="#2-2-2-查看上传结果" class="headerlink" title="2.2.2 查看上传结果"></a>2.2.2 查看上传结果</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ll /iso</span><br><span class="line"><span class="meta">#</span><span class="bash">总用量 4325980</span></span><br><span class="line"><span class="meta">#</span><span class="bash">-rw-r--r-- 1 root root 539586560 1 月 15 22:39 RHEL7OSP-6.0-2015-02-23.2-x86_64.iso</span> </span><br><span class="line"><span class="meta">#</span><span class="bash">-rw-r--r-- 1 root root 3890216960 1 月 15 22:39 rhel-server-7.1-x86_64-dvd.iso</span></span><br></pre></td></tr></table></figure><h3 id="2-2-3-挂载系统安装光盘，建立临时本地-YUM-仓库，安装-Apache"><a href="#2-2-3-挂载系统安装光盘，建立临时本地-YUM-仓库，安装-Apache" class="headerlink" title="2.2.3 挂载系统安装光盘，建立临时本地 YUM 仓库，安装 Apache"></a>2.2.3 挂载系统安装光盘，建立临时本地 YUM 仓库，安装 Apache</h3><ol><li><p>建立临时目录</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /dvd</span><br></pre></td></tr></table></figure></li><li><p>挂载光盘</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mount /dev/sr0 /dvd</span><br></pre></td></tr></table></figure></li><li><p>建立本地 YUM 仓库</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/yum.repos.d/dvd.repo</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[DVD]</span><br><span class="line">name=dvd</span><br><span class="line">baseurl=file:///dvd</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure></li><li><p>测试本地仓库可用性</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum makecache ; yum repolist all</span><br></pre></td></tr></table></figure></li><li><p>安装 Apache</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install httpd</span><br></pre></td></tr></table></figure></li><li><p>启动 httpd 服务</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start httpd.service</span><br></pre></td></tr></table></figure></li><li><p>查看 httpd 服务状态</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl status httpd.service</span><br></pre></td></tr></table></figure></li><li><p>设置 httpd 服务开机自启动</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl enable httpd.service</span><br></pre></td></tr></table></figure></li></ol><h2 id="2-3-搭建基于-http-的网络-YUM-源仓库"><a href="#2-3-搭建基于-http-的网络-YUM-源仓库" class="headerlink" title="2.3 搭建基于 http 的网络 YUM 源仓库"></a>2.3 搭建基于 http 的网络 YUM 源仓库</h2><h3 id="2-3-1-建立发布目录"><a href="#2-3-1-建立发布目录" class="headerlink" title="2.3.1 建立发布目录"></a>2.3.1 建立发布目录</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /var/www/html/&#123;dvd,openstack&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-2-设置开机自动挂载"><a href="#2-3-2-设置开机自动挂载" class="headerlink" title="2.3.2 设置开机自动挂载"></a>2.3.2 设置开机自动挂载</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/fstab</span><br><span class="line">#添加两行</span><br><span class="line">/iso/RHEL7OSP-6.0-2015-02-23.2-x86_64.iso /var/www/html/openstack iso9660 defaults,loop,ro 0 0</span><br><span class="line">/iso/rhel-server-7.1-x86_64-dvd.iso /var/www/html/dvd iso9660 defaults,loop,ro 0 0</span><br></pre></td></tr></table></figure><h3 id="2-3-3-挂载-ISO"><a href="#2-3-3-挂载-ISO" class="headerlink" title="2.3.3 挂载 ISO"></a>2.3.3 挂载 ISO</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mount -a</span><br></pre></td></tr></table></figure><h3 id="2-3-4-测试挂载结果"><a href="#2-3-4-测试挂载结果" class="headerlink" title="2.3.4 测试挂载结果"></a>2.3.4 测试挂载结果</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></table></figure><h3 id="2-3-5-配置基于-http-的网络-YUM-源仓库"><a href="#2-3-5-配置基于-http-的网络-YUM-源仓库" class="headerlink" title="2.3.5 配置基于 http 的网络 YUM 源仓库"></a>2.3.5 配置基于 http 的网络 YUM 源仓库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/yum.repos.d/dvd.repo</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[DVD]</span><br><span class="line">name=DVD baseurl=http://192.168.11.253/dvd/ enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">[root@ntp ~]# vim /etc/yum.repos.d/openstack.repo [RH7-RHOS-6.0]</span><br><span class="line">name=RH7-RHOS-6.0 baseurl=http://192.168.11.253/openstack/RH7-RHOS-6.0/</span><br><span class="line">enabled=1 gpgcheck=0</span><br><span class="line">[RH7-RHOS-6.0-Installer]</span><br><span class="line">name=RH7-RHOS-6.0-Installer baseurl=http://192.168.11.253/openstack/RH7-RHOS-6.0-Installer/ enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">[RHEL7-Errata]</span><br><span class="line">name=RHEL7-Errata baseurl=http://192.168.11.253/openstack/RHEL7-Errata/ enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">[RHEL-7-RHSCL-1.2]</span><br><span class="line">name=RHEL-7-RHSCL-1.2 baseurl=http://192.168.11.253/openstack/RHEL-7-RHSCL-1.2/ enabled=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure><h3 id="2-3-6-清空本地-YUM-缓存数据"><a href="#2-3-6-清空本地-YUM-缓存数据" class="headerlink" title="2.3.6 清空本地 YUM 缓存数据"></a>2.3.6 清空本地 YUM 缓存数据</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum clean all</span><br></pre></td></tr></table></figure><h3 id="2-3-7-重建-YUM-缓存并测试网络-YUM-源仓库可用性"><a href="#2-3-7-重建-YUM-缓存并测试网络-YUM-源仓库可用性" class="headerlink" title="2.3.7 重建 YUM 缓存并测试网络 YUM 源仓库可用性"></a>2.3.7 重建 YUM 缓存并测试网络 YUM 源仓库可用性</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum makecache ; yum repolist all</span><br></pre></td></tr></table></figure><h2 id="2-4-传递仓库指向文件"><a href="#2-4-传递仓库指向文件" class="headerlink" title="2.4 传递仓库指向文件"></a>2.4 传递仓库指向文件</h2><p>利用 SSH 的客户端程序 SCP 将仓库指向文件传送至控制节点(192.168.11.10)和计算节点 (192.168.11.11)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ntp ~]# scp /etc/yum.repos.d/dvd.repo root@192.168.11.10:/etc/yum.repos.d/dvd.repo </span><br><span class="line">[root@ntp ~]# scp /etc/yum.repos.d/dvd.repo root@192.168.11.11:/etc/yum.repos.d/dvd.repo </span><br><span class="line">[root@ntp ~]# scp /etc/yum.repos.d/openstack.repo root@192.168.11.10:/etc/yum.repos.d/openstack.repo </span><br><span class="line">[root@ntp ~]# scp /etc/yum.repos.d/openstack.repo root@192.168.11.11:/etc/yum.repos.d/openstack.repo</span><br></pre></td></tr></table></figure><h2 id="2-5-搭建-NTP-服务"><a href="#2-5-搭建-NTP-服务" class="headerlink" title="2.5 搭建 NTP 服务"></a>2.5 搭建 NTP 服务</h2><h3 id="2-5-1-查询服务软件包的安装"><a href="#2-5-1-查询服务软件包的安装" class="headerlink" title="2.5.1 查询服务软件包的安装"></a>2.5.1 查询服务软件包的安装</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -qa | grep ntp</span><br></pre></td></tr></table></figure><h3 id="2-5-2-安装服务软件包"><a href="#2-5-2-安装服务软件包" class="headerlink" title="2.5.2 安装服务软件包"></a>2.5.2 安装服务软件包</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install ntp</span><br></pre></td></tr></table></figure><h3 id="2-5-3-确认服务软件已安装"><a href="#2-5-3-确认服务软件已安装" class="headerlink" title="2.5.3 确认服务软件已安装"></a>2.5.3 确认服务软件已安装</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum list ntp</span><br></pre></td></tr></table></figure><h3 id="2-5-4-修改-NTP-服务的主配置文件"><a href="#2-5-4-修改-NTP-服务的主配置文件" class="headerlink" title="2.5.4 修改 NTP 服务的主配置文件"></a>2.5.4 修改 NTP 服务的主配置文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ntp ~]# vim /etc/ntp.conf</span><br><span class="line">注释以下四行</span><br><span class="line">#server 0.rhel.pool.ntp.org iburst </span><br><span class="line">#server 1.rhel.pool.ntp.org iburst </span><br><span class="line">#server 2.rhel.pool.ntp.org iburst </span><br><span class="line">#server 3.rhel.pool.ntp.org iburst </span><br><span class="line">添加以下两行</span><br><span class="line">server 127.127.1.0</span><br><span class="line">fudge 127.127.1.0 stratum 10</span><br></pre></td></tr></table></figure><h3 id="2-5-5-启动-NTP-服务"><a href="#2-5-5-启动-NTP-服务" class="headerlink" title="2.5.5 启动 NTP 服务"></a>2.5.5 启动 NTP 服务</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start ntpd</span><br><span class="line">systemctl enable ntpd</span><br><span class="line">systemctl status ntpd</span><br></pre></td></tr></table></figure><h3 id="2-5-6-测试-NTP-服务"><a href="#2-5-6-测试-NTP-服务" class="headerlink" title="2.5.6 测试 NTP 服务"></a>2.5.6 测试 NTP 服务</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ntp ~]# ntpq -p</span><br><span class="line">remote refid st t when poll reach delay offset jitter</span><br><span class="line">============================================================================== </span><br><span class="line">*LOCAL(0) .LOCL. 10 l 15 64 377 0.000 0.000 0.000</span><br></pre></td></tr></table></figure><h1 id="第三章-server-b-配置"><a href="#第三章-server-b-配置" class="headerlink" title="第三章 server-b 配置"></a>第三章 server-b 配置</h1><h2 id="3-1-初始化"><a href="#3-1-初始化" class="headerlink" title="3.1 初始化"></a>3.1 初始化</h2><h3 id="3-1-1-设置主机名"><a href="#3-1-1-设置主机名" class="headerlink" title="3.1.1 设置主机名"></a>3.1.1 设置主机名</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/hostname</span><br><span class="line">#server-b</span><br></pre></td></tr></table></figure><h3 id="3-1-2-关闭-SELINUX"><a href="#3-1-2-关闭-SELINUX" class="headerlink" title="3.1.2 关闭 SELINUX"></a>3.1.2 关闭 SELINUX</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim  /etc/selinux/config</span><br><span class="line"><span class="meta">#</span><span class="bash">SELINUX=disabled           <span class="comment">#更改此参数</span></span></span><br></pre></td></tr></table></figure><h3 id="3-1-3-配置IP地址"><a href="#3-1-3-配置IP地址" class="headerlink" title="3.1.3 配置IP地址"></a>3.1.3 配置IP地址</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-eno16777736 </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">IPADDR=192.168.11.11</span><br><span class="line">NETMASK=255.255.255.0 </span><br><span class="line">GATEWAY=192.168.11.253 </span><br><span class="line">NAME=eno16777736 </span><br><span class="line">DEVICE=eno16777736 </span><br><span class="line">ONBOOT=yes</span><br></pre></td></tr></table></figure><h3 id="3-1-4-禁止-NetworkManager-开机自启动"><a href="#3-1-4-禁止-NetworkManager-开机自启动" class="headerlink" title="3.1.4 禁止 NetworkManager 开机自启动"></a>3.1.4 禁止 NetworkManager 开机自启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl disable NetworkManager</span><br></pre></td></tr></table></figure><h3 id="3-1-5-禁止防火墙服务开机自启动"><a href="#3-1-5-禁止防火墙服务开机自启动" class="headerlink" title="3.1.5 禁止防火墙服务开机自启动"></a>3.1.5 禁止防火墙服务开机自启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure><h3 id="3-1-6-停止防火墙服务"><a href="#3-1-6-停止防火墙服务" class="headerlink" title="3.1.6 停止防火墙服务"></a>3.1.6 停止防火墙服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><h3 id="3-1-7-检查防火墙服务状态"><a href="#3-1-7-检查防火墙服务状态" class="headerlink" title="3.1.7 检查防火墙服务状态"></a>3.1.7 检查防火墙服务状态</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl status firewalld.service</span><br></pre></td></tr></table></figure><h3 id="3-1-8-重启"><a href="#3-1-8-重启" class="headerlink" title="3.1.8 重启"></a>3.1.8 重启</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="3-2-测试网络-YUM-源仓库"><a href="#3-2-测试网络-YUM-源仓库" class="headerlink" title="3.2 测试网络 YUM 源仓库"></a>3.2 测试网络 YUM 源仓库</h2><h3 id="3-2-1-确认仓库指向文件"><a href="#3-2-1-确认仓库指向文件" class="headerlink" title="3.2.1 确认仓库指向文件"></a>3.2.1 确认仓库指向文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ll /etc/yum.repos.d/</span><br><span class="line">#总用量 12</span><br><span class="line">#-rw-r--r-- 1 root root 71 1 月 15 23:06 dvd.repo </span><br><span class="line">#-rw-r--r-- 1 root root 478 1 月 15 23:06 openstack.repo</span><br></pre></td></tr></table></figure><h3 id="3-2-2-重建-YUM-缓存和测试仓库可用性"><a href="#3-2-2-重建-YUM-缓存和测试仓库可用性" class="headerlink" title="3.2.2 重建 YUM 缓存和测试仓库可用性"></a>3.2.2 重建 YUM 缓存和测试仓库可用性</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum makecache ; yum repolist all</span><br></pre></td></tr></table></figure><h2 id="3-3-测试-NTP-服务器同步时间"><a href="#3-3-测试-NTP-服务器同步时间" class="headerlink" title="3.3 测试 NTP 服务器同步时间"></a>3.3 测试 NTP 服务器同步时间</h2><h3 id="3-3-1-显示当前时间-应该是较为正确的时间"><a href="#3-3-1-显示当前时间-应该是较为正确的时间" class="headerlink" title="3.3.1 显示当前时间(应该是较为正确的时间)"></a>3.3.1 显示当前时间(应该是较为正确的时间)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">date</span><br></pre></td></tr></table></figure><h3 id="3-3-2-将系统当前时间修改为“错误”的时间-故意的"><a href="#3-3-2-将系统当前时间修改为“错误”的时间-故意的" class="headerlink" title="3.3.2 将系统当前时间修改为“错误”的时间(故意的)"></a>3.3.2 将系统当前时间修改为“错误”的时间(故意的)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">date -s &quot;2019-1-3 3:3:3&quot;</span><br></pre></td></tr></table></figure><h3 id="3-3-3-确认错误时间已生效"><a href="#3-3-3-确认错误时间已生效" class="headerlink" title="3.3.3 确认错误时间已生效"></a>3.3.3 确认错误时间已生效</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">date</span><br></pre></td></tr></table></figure><h3 id="3-3-4-使用-ntp-客户端程序-ntpdate-同步时间"><a href="#3-3-4-使用-ntp-客户端程序-ntpdate-同步时间" class="headerlink" title="3.3.4 使用 ntp 客户端程序 ntpdate 同步时间"></a>3.3.4 使用 ntp 客户端程序 ntpdate 同步时间</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ntpdate 192.168.11.253</span><br></pre></td></tr></table></figure><h3 id="3-3-5-再次核对时间-应该已在同步过程中被修改为正确的时间"><a href="#3-3-5-再次核对时间-应该已在同步过程中被修改为正确的时间" class="headerlink" title="3.3.5 再次核对时间(应该已在同步过程中被修改为正确的时间)"></a>3.3.5 再次核对时间(应该已在同步过程中被修改为正确的时间)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">date</span><br></pre></td></tr></table></figure><h1 id="第四章-server-a-配置"><a href="#第四章-server-a-配置" class="headerlink" title="第四章 server-a 配置"></a>第四章 server-a 配置</h1><h2 id="4-1-初始化"><a href="#4-1-初始化" class="headerlink" title="4.1 初始化"></a>4.1 初始化</h2><h3 id="4-1-1-设置主机名"><a href="#4-1-1-设置主机名" class="headerlink" title="4.1.1 设置主机名"></a>4.1.1 设置主机名</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/hostname</span><br><span class="line"><span class="meta">#</span><span class="bash">NTP</span></span><br></pre></td></tr></table></figure><h3 id="4-1-2-关闭-SELINUX"><a href="#4-1-2-关闭-SELINUX" class="headerlink" title="4.1.2 关闭 SELINUX"></a>4.1.2 关闭 SELINUX</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim  /etc/selinux/config</span><br><span class="line"><span class="meta">#</span><span class="bash">SELINUX=disabled           <span class="comment">#更改此参数</span></span></span><br></pre></td></tr></table></figure><h3 id="4-1-3-配置IP地址"><a href="#4-1-3-配置IP地址" class="headerlink" title="4.1.3 配置IP地址"></a>4.1.3 配置IP地址</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-eno16777736 </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">IPADDR=192.168.11.253</span><br><span class="line">NETMASK=255.255.255.0 </span><br><span class="line">NAME=eno16777736 </span><br><span class="line">DEVICE=eno16777736 </span><br><span class="line">ONBOOT=yes</span><br></pre></td></tr></table></figure><h3 id="4-1-4-禁止-NetworkManager-开机自启动"><a href="#4-1-4-禁止-NetworkManager-开机自启动" class="headerlink" title="4.1.4 禁止 NetworkManager 开机自启动"></a>4.1.4 禁止 NetworkManager 开机自启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl disable NetworkManager</span><br></pre></td></tr></table></figure><h3 id="4-1-5-禁止防火墙服务开机自启动"><a href="#4-1-5-禁止防火墙服务开机自启动" class="headerlink" title="4.1.5 禁止防火墙服务开机自启动"></a>4.1.5 禁止防火墙服务开机自启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure><h3 id="4-1-6-停止防火墙服务"><a href="#4-1-6-停止防火墙服务" class="headerlink" title="4.1.6 停止防火墙服务"></a>4.1.6 停止防火墙服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><h3 id="4-1-7-检查防火墙服务状态"><a href="#4-1-7-检查防火墙服务状态" class="headerlink" title="4.1.7 检查防火墙服务状态"></a>4.1.7 检查防火墙服务状态</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl status firewalld.service</span><br></pre></td></tr></table></figure><h3 id="4-1-8-重启"><a href="#4-1-8-重启" class="headerlink" title="4.1.8 重启"></a>4.1.8 重启</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="4-2-测试网络-YUM-源仓库"><a href="#4-2-测试网络-YUM-源仓库" class="headerlink" title="4.2 测试网络 YUM 源仓库"></a>4.2 测试网络 YUM 源仓库</h2><h3 id="4-2-1-确认仓库指向文件"><a href="#4-2-1-确认仓库指向文件" class="headerlink" title="4.2.1 确认仓库指向文件"></a>4.2.1 确认仓库指向文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ll /etc/yum.repos.d/</span><br><span class="line">#总用量 12</span><br><span class="line">#-rw-r--r-- 1 root root 71 1 月 15 23:06 dvd.repo </span><br><span class="line">#-rw-r--r-- 1 root root 478 1 月 15 23:06 openstack.repo</span><br></pre></td></tr></table></figure><h3 id="4-2-2-重建-YUM-缓存和测试仓库可用性"><a href="#4-2-2-重建-YUM-缓存和测试仓库可用性" class="headerlink" title="4.2.2 重建 YUM 缓存和测试仓库可用性"></a>4.2.2 重建 YUM 缓存和测试仓库可用性</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum makecache ; yum repolist all</span><br></pre></td></tr></table></figure><h2 id="4-3-测试-NTP-服务器同步时间"><a href="#4-3-测试-NTP-服务器同步时间" class="headerlink" title="4.3 测试 NTP 服务器同步时间"></a>4.3 测试 NTP 服务器同步时间</h2><h3 id="4-3-1-显示当前时间-应该是较为正确的时间"><a href="#4-3-1-显示当前时间-应该是较为正确的时间" class="headerlink" title="4.3.1 显示当前时间(应该是较为正确的时间)"></a>4.3.1 显示当前时间(应该是较为正确的时间)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">date</span><br></pre></td></tr></table></figure><h3 id="4-3-2-将系统当前时间修改为“错误”的时间-故意的"><a href="#4-3-2-将系统当前时间修改为“错误”的时间-故意的" class="headerlink" title="4.3.2 将系统当前时间修改为“错误”的时间(故意的)"></a>4.3.2 将系统当前时间修改为“错误”的时间(故意的)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">date -s &quot;2019-1-3 3:3:3&quot;</span><br></pre></td></tr></table></figure><h3 id="4-3-3-确认错误时间已生效"><a href="#4-3-3-确认错误时间已生效" class="headerlink" title="4.3.3 确认错误时间已生效"></a>4.3.3 确认错误时间已生效</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">date</span><br></pre></td></tr></table></figure><h3 id="4-3-4-使用-ntp-客户端程序-ntpdate-同步时间"><a href="#4-3-4-使用-ntp-客户端程序-ntpdate-同步时间" class="headerlink" title="4.3.4 使用 ntp 客户端程序 ntpdate 同步时间"></a>4.3.4 使用 ntp 客户端程序 ntpdate 同步时间</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ntpdate 192.168.11.253</span><br></pre></td></tr></table></figure><h3 id="4-3-5-再次核对时间-应该已在同步过程中被修改为正确的时间"><a href="#4-3-5-再次核对时间-应该已在同步过程中被修改为正确的时间" class="headerlink" title="4.3.5 再次核对时间(应该已在同步过程中被修改为正确的时间)"></a>4.3.5 再次核对时间(应该已在同步过程中被修改为正确的时间)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">date</span><br></pre></td></tr></table></figure><h1 id="第五章-安装红帽-OpenStack"><a href="#第五章-安装红帽-OpenStack" class="headerlink" title="第五章 安装红帽 OpenStack"></a>第五章 安装红帽 OpenStack</h1><h2 id="系统更新"><a href="#系统更新" class="headerlink" title="系统更新"></a>系统更新</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure><h2 id="安装布署工具"><a href="#安装布署工具" class="headerlink" title="安装布署工具"></a>安装布署工具</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install -y https://www.rdoproject.org/repos/rdo-release.rpm</span><br><span class="line">yum install openstack-packstack</span><br></pre></td></tr></table></figure><h2 id="利用布署工具生成自动应答文件-文件名可任意"><a href="#利用布署工具生成自动应答文件-文件名可任意" class="headerlink" title="利用布署工具生成自动应答文件(文件名可任意)"></a>利用布署工具生成自动应答文件(文件名可任意)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">packstack --gen-answer-file=/root/ans.txt</span><br></pre></td></tr></table></figure><h2 id="修改自动应答文件实现自动化布署"><a href="#修改自动应答文件实现自动化布署" class="headerlink" title="修改自动应答文件实现自动化布署"></a>修改自动应答文件实现自动化布署</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@server-a ~]# vim /root/ans.txt #注意以下几项</span><br><span class="line">CONFIG_NTP_SERVERS=192.168.11.253       #NTP 服务器 IP</span><br><span class="line">CONFIG_CONTROLLER_HOST=192.168.11.10     #控制节点 IP</span><br><span class="line">CONFIG_COMPUTE_HOSTS=192.168.11.10,192.168.11.11 (建立多计算节点，此处控制节点复用)       #计算节点 IP</span><br><span class="line">CONFIG_NETWORK_HOSTS=192.168.11.10 (暂时由控制节点担当此角色)   #网络节点 IP</span><br><span class="line">CONFIG_KEYSTONE_ADMIN_PW=redhat      #WEB 界面管理员口令</span><br><span class="line">CONFIG_HORIZON_SSL=y                  #加密通信 WEB 界面</span><br><span class="line">(默认“n”，即 http://，修改“y”，即 https://) </span><br><span class="line">CONFIG_PROVISION_DEMO=n              #不创建演示环境，默认为&quot;y&quot;</span><br><span class="line">创建实例(演示时可采用)，修改&quot;n&quot;，不创建实例(利于学习管理过程)</span><br></pre></td></tr></table></figure><h2 id="使用自动应答文件安装红帽-OpenStack"><a href="#使用自动应答文件安装红帽-OpenStack" class="headerlink" title="使用自动应答文件安装红帽 OpenStack"></a>使用自动应答文件安装红帽 OpenStack</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">packstack --answer-file=/root/ans.txt</span><br></pre></td></tr></table></figure><p>安装过程中如遇以下错误，可忽略，重新执行安装命令即可</p><p><img src="/post/26fcf24e.htm/%E5%AE%89%E8%A3%85%E6%8A%A5%E9%94%99.png" alt="安装报错"></p><p>看到如下提示即完成安装</p>]]></content>
    
    
    <summary type="html">一键搭建Openstack云上环境</summary>
    
    
    
    <category term="Openstack" scheme="http://blog.cndis.cn/categories/Openstack/"/>
    
    
    <category term="Linux" scheme="http://blog.cndis.cn/tags/Linux/"/>
    
    <category term="OpenStack" scheme="http://blog.cndis.cn/tags/OpenStack/"/>
    
    <category term="云" scheme="http://blog.cndis.cn/tags/%E4%BA%91/"/>
    
    <category term="虚拟化" scheme="http://blog.cndis.cn/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>hexo+yilia添加live2d看板娘</title>
    <link href="http://blog.cndis.cn/post/e239dc63.html"/>
    <id>http://blog.cndis.cn/post/e239dc63.html</id>
    <published>2022-07-21T09:57:01.000Z</published>
    <updated>2022-12-07T07:26:25.111Z</updated>
    
    <content type="html"><![CDATA[<p>添加live2d看板娘，插件：hexo-helper-live2d</p><p>github仓库： <a href="https://github.com/EYHN/hexo-helper-live2d">https://github.com/EYHN/hexo-helper-live2d</a></p><h1 id="第一章-安装插件"><a href="#第一章-安装插件" class="headerlink" title="第一章 安装插件"></a>第一章 安装插件</h1><p>运行命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><h1 id="第二章-选择模型"><a href="#第二章-选择模型" class="headerlink" title="第二章 选择模型"></a>第二章 选择模型</h1><p>可到 <a href="https://huaji8.top/post/live2d-plugin-2.0/%E9%A2%84%E8%A7%88%E6%95%88%E6%9E%9C%E3%80%82">https://huaji8.top/post/live2d-plugin-2.0/预览效果。</a></p><p>命令为:npm install live2d-widget-model-模型名，模型为可参考上面的预览内容。</p><h1 id="第三章-配置"><a href="#第三章-配置" class="headerlink" title="第三章 配置"></a>第三章 配置</h1><p>站点的配置文件_config.yml或者是主题的配置文件中添加：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">\#</span> <span class="string">Live2D</span></span><br><span class="line"><span class="string">\##</span> <span class="string">https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line"> <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"> <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line"> <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line"> <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line"> <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line"> <span class="attr">tagMode:</span> <span class="literal">false</span></span><br><span class="line"> <span class="attr">debug:</span> <span class="literal">false</span></span><br><span class="line"> <span class="attr">model:</span></span><br><span class="line">  <span class="attr">use:</span> <span class="string">live2d-widget-model-miku</span> <span class="comment"># 模型：https://huaji8.top/post/live2d-plugin-2.0/</span></span><br><span class="line"> <span class="attr">display:</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">  <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">  <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line"> <span class="attr">mobile:</span></span><br><span class="line">  <span class="attr">show:</span> <span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="第四章-补充"><a href="#第四章-补充" class="headerlink" title="第四章 补充"></a>第四章 补充</h1><ul><li>添加动画一般都会比较耗内存，请自行选择是否添加。</li><li>魔改版：<a href="https://zhangshuqiao.org/2018-07/%E5%9C%A8%E7%BD%91%E9%A1%B5%E4%B8%AD%E6%B7%BB%E5%8A%A0Live2D%E7%9C%8B%E6%9D%BF%E5%A8%98/">在网页中添加Live2D看板娘</a>，基于next主题。，github： <a href="https://github.com/stevenjoezhang/live2d-widget">https://github.com/stevenjoezhang/live2d-widget</a></li><li>魔改2： <a href="https://www.fghrsh.net/post/123.html">https://www.fghrsh.net/post/123.html</a></li></ul><h1 id="第五章-取消看板娘"><a href="#第五章-取消看板娘" class="headerlink" title="第五章 取消看板娘"></a>第五章 取消看板娘</h1><p>暂时不用</p><p>将配置中的enable设置成false即可。</p><p>卸载插件</p><p>运行命令下载插件，删除配置信息：</p><ol><li>卸载模型：npm install live2d-widget-model-模型名</li><li>卸载live2d插件：npm     uninstall hexo-helper-live2d</li><li>去掉站点_config.yml下的配置信息即可。</li></ol>]]></content>
    
    
    <summary type="html">对于hexo-fluid主题添加live2d看板娘</summary>
    
    
    
    <category term="个人博客" scheme="http://blog.cndis.cn/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="个人博客" scheme="http://blog.cndis.cn/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="Hexo" scheme="http://blog.cndis.cn/tags/Hexo/"/>
    
    <category term="fluid美化" scheme="http://blog.cndis.cn/tags/fluid%E7%BE%8E%E5%8C%96/"/>
    
    <category term="添加live2d看板娘" scheme="http://blog.cndis.cn/tags/%E6%B7%BB%E5%8A%A0live2d%E7%9C%8B%E6%9D%BF%E5%A8%98/"/>
    
  </entry>
  
  <entry>
    <title>hexo-fluid添加utterances评论功能</title>
    <link href="http://blog.cndis.cn/post/722464.html"/>
    <id>http://blog.cndis.cn/post/722464.html</id>
    <published>2022-07-21T09:32:11.000Z</published>
    <updated>2022-12-07T07:26:25.110Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-新建一个github仓库"><a href="#第一章-新建一个github仓库" class="headerlink" title="第一章 新建一个github仓库"></a>第一章 新建一个github仓库</h1><p>首先创建一个公开的<a href="https://links.jianshu.com/go?to=https://github.com">github</a>仓库，按下图填完信息后Create repository创建</p><p><img src="/post/722464.htm/%E6%96%B0%E5%A2%9Egithub%E4%BB%93%E5%BA%93.png" alt="新增GitHub仓库"></p><h1 id="第二章-安装utterances"><a href="#第二章-安装utterances" class="headerlink" title="第二章 安装utterances"></a>第二章 安装utterances</h1><p>安装<a href="https://links.jianshu.com/go?to=https://github.com/apps/utterances">utterances app</a>(点击前往安装)，install(安装)按钮未登陆github时不会显示，已安装则显示的是configure。(为了写这文笔者还特地卸载重装了一遍)</p><p><img src="/post/722464.htm/%E5%AE%89%E8%A3%85utterances%E7%95%8C%E9%9D%A2.png" alt="安装utterances界面"></p><p>选择刚刚建好的github仓库，然后点击安装</p><p><img src="/post/722464.htm/%E5%AE%89%E8%A3%85%E7%95%8C%E9%9D%A2.png" alt="utterances安装界面"></p><h1 id="第三章-配置"><a href="#第三章-配置" class="headerlink" title="第三章 配置"></a>第三章 配置</h1><p><img src="/post/722464.htm/%E9%85%8D%E7%BD%AE%E6%8F%92%E4%BB%B6.png" alt="配置插件"></p><p>建议选择第一个</p><p><img src="/post/722464.htm/%E9%80%89%E6%8B%A9.png"></p><p>【可选项】根据个人需求选择是否为issue打上标签(label)。作为小白的我就暂时不设置了(留空)<br><img src="/post/722464.htm/%E7%95%99%E7%A9%BA%E9%80%89%E9%A1%B9.png"></p><p>然后是主题，根据个人喜好选择吧</p><p><img src="/post/722464.htm/%E9%80%89%E6%8B%A9%E4%B8%BB%E9%A2%98.png"></p><p>上述步骤填写完成后，最后一栏会根据你前面的操作自动生成配置信息(后面会用到)</p><p><img src="/post/722464.htm/%E7%94%9F%E6%88%90%E7%9A%84%E9%85%8D%E7%BD%AE.png"></p><p>到此，对utterances的配置就完成了，接下来把它应用到我们的Hexo-Fluid,注意copy一下</p><h1 id="第四章-添加到Hexo-Fluid"><a href="#第四章-添加到Hexo-Fluid" class="headerlink" title="第四章 添加到Hexo-Fluid"></a>第四章 添加到Hexo-Fluid</h1><p>打开配置文件(hexo&#x2F;themes&#x2F;fluid&#x2F;_config.yml)，将enable设置为true以开启评论</p><p><img src="/post/722464.htm/%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png"></p><p>然后在后面找到comments的具体配置</p><p><img src="/post/722464.htm/%E4%BF%AE%E6%94%B9%E8%AF%84%E8%AE%BA%E9%85%8D%E7%BD%AE.png"></p><p>修改后保存文件，重启hexo， 就可以看到文章下多了评论区啦！</p><p><img src="/post/722464.htm/%E6%88%90%E6%9E%9C.png"></p><p>如果发现有评论区但无法评论，可能是没有授权github(右下角有提示授权的地方)。如果还是没有评论区的话，可以打开浏览器控制台看看错误提示。也欢迎在评论区提出你的问题！</p>]]></content>
    
    
    <summary type="html">针对hexo-fluid环境，新增评论功能</summary>
    
    
    
    <category term="个人博客" scheme="http://blog.cndis.cn/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="个人博客" scheme="http://blog.cndis.cn/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="Hexo" scheme="http://blog.cndis.cn/tags/Hexo/"/>
    
    <category term="fluid评论" scheme="http://blog.cndis.cn/tags/fluid%E8%AF%84%E8%AE%BA/"/>
    
    <category term="utterances" scheme="http://blog.cndis.cn/tags/utterances/"/>
    
  </entry>
  
  <entry>
    <title>hexo-Fluid优化设置</title>
    <link href="http://blog.cndis.cn/post/e40b0509.html"/>
    <id>http://blog.cndis.cn/post/e40b0509.html</id>
    <published>2022-07-21T07:53:43.000Z</published>
    <updated>2022-12-07T07:26:25.109Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-全局"><a href="#第一章-全局" class="headerlink" title="第一章 全局"></a>第一章 全局</h1><h2 id="1-1-覆盖配置"><a href="#1-1-覆盖配置" class="headerlink" title="1.1 覆盖配置"></a>1.1 覆盖配置</h2><blockquote><p>TIP</p><p>覆盖配置可以使<strong>主题配置</strong>放置在 fluid 目录之外，避免在更新主题时丢失自定义的配置。</p><p>通过 Npm 安装主题的用户可忽略，其他用户建议学习使用</p></blockquote><p>Hexo 5.0.0 版本以上的用户，在博客目录下创建 <code>_config.fluid.yml</code> 文件，将主题的 <a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">_config.yml (opens new window)</a>全部配置（或部分配置）复制过去。</p><p>以后如果修改任何主题配置，都只需修改 <code>_config.fluid.yml</code> 的配置即可。</p><p>注意：</p><ul><li>只要存在于 <code>_config.fluid.yml</code> 的配置都是高优先级，修改原 <code>_config.yml</code> 是无效的。</li><li>每次更新主题可能存在配置变更，请注意更新说明，可能需要手动对 <code>_config.fluid.yml</code> 同步修改。</li><li>想查看覆盖配置有没有生效，可以通过 <code>hexo g --debug</code> 查看命令行输出。</li><li>如果想将某些配置覆盖为空，注意不要把主键删掉，不然是无法覆盖的，比如：</li></ul><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">about:</span></span><br><span class="line">  <span class="attr">icons:</span>  <span class="comment"># 不要把 icon 注释掉，否则无法覆盖配置</span></span><br><span class="line">    <span class="comment"># - &#123; class: &#x27;iconfont icon-github-fill&#x27;, link: &#x27;https://github.com&#x27; &#125;</span></span><br><span class="line">    <span class="comment"># - &#123; class: &#x27;iconfont icon-wechat-fill&#x27;, qrcode: &#x27;/img/favicon.png&#x27; &#125;</span></span><br></pre></td></tr></table></figure><details open style="user-select: auto !important; color: rgb(44, 62, 80); font-family: -apple-system, &quot;system-ui&quot;, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Fira Sans&quot;, &quot;Droid Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: 15px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><p style="line-height: 1.7; user-select: auto !important;">必须确保 Hexo 版本不低于 3.0.0，使用方式：</p><ol style="padding-left: 1.2em; line-height: 1.7; user-select: auto !important;"><li style="user-select: auto !important;">进入博客目录的<span>&nbsp;</span><code style="font-family: source-code-pro, Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; user-select: auto !important; color: rgb(71, 101, 130); padding: 0.25rem 0.5rem; margin: 0px; font-size: 0.85em; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;">source/_data</code><span>&nbsp;</span>目录（如不存在则创建）；</li><li style="user-select: auto !important;">在<span>&nbsp;</span><code style="font-family: source-code-pro, Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; user-select: auto !important; color: rgb(71, 101, 130); padding: 0.25rem 0.5rem; margin: 0px; font-size: 0.85em; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;">_data</code><span>&nbsp;</span>文件夹下创建<span>&nbsp;</span><code style="font-family: source-code-pro, Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; user-select: auto !important; color: rgb(71, 101, 130); padding: 0.25rem 0.5rem; margin: 0px; font-size: 0.85em; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;">fluid_config.yml</code><span>&nbsp;</span>文件，将主题的<span>&nbsp;</span><a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml" target="_blank" rel="noopener noreferrer" style="font-weight: 500; text-decoration: none; color: rgb(62, 175, 124); user-select: auto !important;">_config.yml<span style="user-select: auto !important;"><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewbox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"/><polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"/></svg><span>&nbsp;</span><span class="sr-only" style="user-select: auto !important; position: absolute; width: 1px; height: 1px; padding: 0px; margin: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: nowrap; border-width: 0px;">(opens new window)</span></span></a>全部配置（或部分配置）复制到<span>&nbsp;</span><code style="font-family: source-code-pro, Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; user-select: auto !important; color: rgb(71, 101, 130); padding: 0.25rem 0.5rem; margin: 0px; font-size: 0.85em; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;">fluid_config.yml</code><span>&nbsp;</span>中；</li><li style="user-select: auto !important;">以后配置都在<span>&nbsp;</span><code style="font-family: source-code-pro, Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; user-select: auto !important; color: rgb(71, 101, 130); padding: 0.25rem 0.5rem; margin: 0px; font-size: 0.85em; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;">fluid_config.yml</code><span>&nbsp;</span>中修改，配置会在<span>&nbsp;</span><code style="font-family: source-code-pro, Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; user-select: auto !important; color: rgb(71, 101, 130); padding: 0.25rem 0.5rem; margin: 0px; font-size: 0.85em; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;">hexo g</code><span>&nbsp;</span>时自动覆盖。</li></ol></details><h2 id="1-2-静态资源"><a href="#1-2-静态资源" class="headerlink" title="1.2 静态资源"></a>1.2 静态资源</h2><p>所有静态资源文件的 Url 可以通过<strong>主题配置</strong>中的 <code>static_prefix</code> 配置项修改。</p><p>比如需要指定公共 CDN 的 JQuery 库，只需将原配置改为：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">static_prefix:</span></span><br><span class="line">  <span class="comment"># ...</span></span><br><span class="line">  <span class="attr">jquery:</span> <span class="string">https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/</span></span><br></pre></td></tr></table></figure><h2 id="1-3-本地搜索"><a href="#1-3-本地搜索" class="headerlink" title="1.3 本地搜索"></a>1.3 本地搜索</h2><ul><li>已集成 hexo-generator-search 插件，若已安装其他搜索插件请关闭，以避免生成多余的索引文件。</li><li>默认在根目录生成并使用 <code>local-search.xml</code>。</li></ul><h2 id="1-4-页面顶部大图"><a href="#1-4-页面顶部大图" class="headerlink" title="1.4 页面顶部大图"></a>1.4 页面顶部大图</h2><h3 id="1-4-1-图片来源"><a href="#1-4-1-图片来源" class="headerlink" title="1.4.1 图片来源"></a>1.4.1 图片来源</h3><p>主题配置中，每个页面都有名为 <code>banner_img</code> 的属性，可以使用本地图片的相对路径，也可以为外站链接，比如：</p><p>指向本地图片：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">banner_img:</span> <span class="string">/img/bg/example.jpg</span>   <span class="comment"># 对应存放在 /source/img/bg/example.jpg</span></span><br></pre></td></tr></table></figure><p>指向外站链接：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">banner_img:</span> <span class="string">https://static.zkqiang.cn/example.jpg</span></span><br></pre></td></tr></table></figure><p>TIP</p><p>如果是本地图片，目录文件夹可自定义，但必须在 source 目录下，博客与主题的 source 目录最终会合并，因此优先选择博客的 source。</p><p>图片大小建议压缩到 1MB 以内，否则会严重拖慢页面加载。</p><h3 id="1-4-2-高度"><a href="#1-4-2-高度" class="headerlink" title="1.4.2 高度"></a>1.4.2 高度</h3><p>鉴于每个人的喜好不同，开放对页面 <code>banner_img</code> 高度的控制。</p><p><strong>主题配置</strong>中，每个页面对应的 <code>banner_img_height</code> 属性，有效值为 0 - 100。100 即为全屏，个人建议 70 以上。</p><h3 id="1-4-3-蒙版透明度"><a href="#1-4-3-蒙版透明度" class="headerlink" title="1.4.3 蒙版透明度"></a>1.4.3 蒙版透明度</h3><p><strong>主题配置</strong>中，每个页面对应的 <code>banner_mask_alpha</code> 属性，有效值为 0 - 1.0， 0 是完全透明（无蒙版），1 是完全不透明</p><blockquote><p>TIP</p><p>每篇文章可单独设置 Banner，具体见文章页设置</p><p>本主题不支持固定背景（fixed），原因：</p><ol><li>与目前代码结构有较大冲突，需要大量修改</li><li><code>fixed</code> 在移动端兼容性很差</li></ol></blockquote><h2 id="1-5-博客标题"><a href="#1-5-博客标题" class="headerlink" title="1.5 博客标题"></a>1.5 博客标题</h2><p>页面左上角的博客标题，默认使用<strong>博客配置</strong>中的 <code>title</code>，这个配置同时控制着网页在浏览器标签中的标题。</p><p>如需单独区别设置，可在<strong>主题配置</strong>中设置：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">navbar:</span></span><br><span class="line">  <span class="attr">blog_title:</span> <span class="string">博客标题</span></span><br></pre></td></tr></table></figure><h2 id="1-6-导航菜单"><a href="#1-6-导航菜单" class="headerlink" title="1.6 导航菜单"></a>1.6 导航菜单</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">navbar:</span></span><br><span class="line">  <span class="attr">menu:</span></span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">key:</span> <span class="string">&#x27;home&#x27;</span>, <span class="attr">link:</span> <span class="string">&#x27;/&#x27;</span>, <span class="attr">icon:</span> <span class="string">&#x27;iconfont icon-home-fill&#x27;</span> &#125;</span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">key:</span> <span class="string">&#x27;tag&#x27;</span>, <span class="attr">link:</span> <span class="string">&#x27;/tags/&#x27;</span>, <span class="attr">icon:</span> <span class="string">&#x27;iconfont icon-tags-fill&#x27;</span> &#125;</span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">key:</span> <span class="string">&#x27;about&#x27;</span>, <span class="attr">link:</span> <span class="string">&#x27;/about/&#x27;</span>, <span class="attr">icon:</span> <span class="string">&#x27;iconfont icon-user-fill&#x27;</span>, <span class="attr">name:</span> <span class="string">&#x27;联系我&#x27;</span> &#125;</span><br></pre></td></tr></table></figure><ul><li><code>key</code>: 用于关联有<a href="https://hexo.fluid-dev.com/docs/guide/#%E8%AF%AD%E8%A8%80%E9%85%8D%E7%BD%AE">语言配置</a>，如不存在关联则显示 key 本身的值</li><li><code>link</code>: 跳转链接</li><li><code>icon</code>: 图标的 css class，可以省略（即没有图标），主题内置图标详见<a href="https://hexo.fluid-dev.com/docs/icon/">这里</a></li><li><code>name</code>: 强制使用此名称显示（不再按语言配置显示），可省略</li></ul><p>另外支持二级菜单（下拉菜单），配置写法如下：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="bullet">-</span> &#123;</span><br><span class="line">      <span class="attr">key:</span> <span class="string">&#x27;文档&#x27;</span>,</span><br><span class="line">      <span class="attr">icon:</span> <span class="string">&#x27;iconfont icon-books&#x27;</span>,</span><br><span class="line">      <span class="attr">submenu:</span> [</span><br><span class="line">        &#123; <span class="attr">key:</span> <span class="string">&#x27;主题博客&#x27;</span>, <span class="attr">link:</span> <span class="string">&#x27;https://hexo.fluid-dev.com/&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">key:</span> <span class="string">&#x27;配置指南&#x27;</span>, <span class="attr">link:</span> <span class="string">&#x27;https://hexo.fluid-dev.com/docs/guide/&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">key:</span> <span class="string">&#x27;图标用法&#x27;</span>, <span class="attr">link:</span> <span class="string">&#x27;https://hexo.fluid-dev.com/docs/icon/&#x27;</span> &#125;</span><br><span class="line">      ]</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="1-7-懒加载"><a href="#1-7-懒加载" class="headerlink" title="1.7 懒加载"></a>1.7 懒加载</h2><p>懒加载又称延迟加载。开启后，当图片或评论插件滚动到可见范围内才会加载，可以大幅提高打开网页的速度。</p><p>该功能默认开启，可以在<strong>主题配置</strong>中修改参数：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">lazyload:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">loading_img:</span> <span class="string">/img/loading.gif</span></span><br><span class="line">  <span class="attr">onlypost:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">offset_factor:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><p><code>loading_img</code>: 指定加载时的占位图片</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">onlypost`: 为 true 时，懒加载仅在文章页生效，如果自定义页面需要使用，可以在 [Front-matter (opens new window)](https://hexo.io/zh-cn/docs/front-matter)里指定 `lazyload: true</span><br></pre></td></tr></table></figure><p><code>offset_factor</code>: 触发加载的偏移倍数，基数是视窗高度（即提前 N 屏高度触发加载），可根据部署环境的请求速度调节</p><h2 id="1-8-全局字体"><a href="#1-8-全局字体" class="headerlink" title="1.8 全局字体"></a>1.8 全局字体</h2><p>所有页面统一字体的字号和字族可以通过<strong>主题配置</strong>中的下列配置项设置：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">font:</span>  <span class="comment"># 主题字体配置</span></span><br><span class="line">  <span class="attr">font_size:</span> <span class="string">16px</span>        <span class="comment"># 全局字号</span></span><br><span class="line">  <span class="attr">font_family:</span>           <span class="comment"># 全局字体族</span></span><br><span class="line">  <span class="attr">code_font_size:</span> <span class="number">85</span><span class="string">%</span>    <span class="comment"># 代码的字号</span></span><br></pre></td></tr></table></figure><p>关于字体族（<code>font-family</code>）如果不了解可以看<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/font-family">这篇文章 (opens new window)</a>先了解一下。</p><p>需要注意：</p><ul><li>最好使用系统自带的字体，否则需要通过<a href="https://hexo.fluid-dev.com/docs/guide/#%E8%87%AA%E5%AE%9A%E4%B9%89-js-css-html">自定义功能</a>额外引入 <code>@font-face</code>，字体一般较大，不建议引入；</li><li>应当至少添加一个通用的字体族名（如 serif，具体见上方链接文章）。</li></ul><p>如果想设置单独的页面，可以直接在 markdown 里通过 style 标签实现：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: example</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">  <span class="comment">/* 设置整个页面的字体 */</span></span></span><br><span class="line"><span class="css">  <span class="selector-tag">html</span>, <span class="selector-tag">body</span>, <span class="selector-class">.markdown-body</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">font-family</span>: KaiTi,<span class="string">&quot;Microsoft YaHei&quot;</span>,Georgia, sans, serif;</span></span><br><span class="line"><span class="css">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">  <span class="comment">/* 只设置 markdown 字体 */</span></span></span><br><span class="line"><span class="css">  <span class="selector-class">.markdown-body</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">font-family</span>: KaiTi,<span class="string">&quot;Microsoft YaHei&quot;</span>,Georgia, sans, serif;</span></span><br><span class="line"><span class="css">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-9-网页统计"><a href="#1-9-网页统计" class="headerlink" title="1.9 网页统计"></a>1.9 网页统计</h2><p>目前支持多种统计网站，开启后按需填入 Key 或 ID 即可。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">web_analytics:</span>  <span class="comment"># 网页访问统计</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment"># 默认为false，启用网页统计改为true即可</span></span><br><span class="line">  <span class="attr">baidu:</span>  <span class="comment"># 百度统计的Key，参见 https://tongji.baidu.com/sc-web/10000033910/home/site/getjs?siteId=13751376 代码获取中 hm.js? 后边的字符串</span></span><br><span class="line">  <span class="attr">google:</span>  <span class="comment"># Google统计的Tracking ID，参见 https://analytics.google.com/analytics/web/</span></span><br><span class="line">  <span class="attr">tencent:</span>  <span class="comment"># 腾讯统计的H5 App id，参见 https://mta.qq.com/h5/manage/ctr_app_manage (开启高级功能才有cid)</span></span><br><span class="line">    <span class="attr">sid:</span></span><br><span class="line">    <span class="attr">cid:</span></span><br><span class="line">  <span class="attr">woyaola:</span>  <span class="comment"># 51.la站点统计ID，参见 https://www.51.la/user/site/index</span></span><br><span class="line">  <span class="attr">cnzz:</span>  <span class="comment"># 友盟/cnzz站点统计web_id，参见 https://web.umeng.com/main.php?c=site&amp;a=show</span></span><br><span class="line">  <span class="attr">leancloud:</span>  <span class="comment"># LeanCloud 计数统计，可用于 PV UV 展示，如果 web_analytics.enable 没有开启，PV UV 展示只会查询，不会增加</span></span><br><span class="line">    <span class="attr">app_id:</span></span><br><span class="line">    <span class="attr">app_key:</span></span><br><span class="line">    <span class="attr">server_url:</span>  <span class="comment"># REST API 服务器地址，国际版不填</span></span><br></pre></td></tr></table></figure><h2 id="1-10-展示PV与UV统计"><a href="#1-10-展示PV与UV统计" class="headerlink" title="1.10 展示PV与UV统计"></a>1.10 展示PV与UV统计</h2><p>页脚可以展示 PV 与 UV 统计数据，目前支持两种数据来源：<a href="https://www.leancloud.cn/">LeanCloud (opens new window)</a>与 <a href="http://busuanzi.ibruce.info/">不蒜子 (opens new window)</a>。</p><p>相关<strong>主题配置</strong>如下：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">statistics:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">source:</span> <span class="string">&quot;busuanzi&quot;</span>  <span class="comment"># 可选 leancloud | busuanzi  根据自己需求选择</span></span><br><span class="line">    <span class="attr">pv_format:</span> <span class="string">&quot;总访问量 &#123;&#125; 次&quot;</span>  <span class="comment"># 显示的文本，&#123;&#125;是数字的占位符（必须包含)，下同</span></span><br><span class="line">    <span class="attr">uv_format:</span> <span class="string">&quot;总访客数 &#123;&#125; 人&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>TIP</p><p>不蒜子不需要申请账号，直接开启即可，但有时候会响应缓慢拖慢整个页面加载。</p><p>不蒜子在 localhost 域名下显示的不是真正的数据，因此无需在意。</p><p>LeanCloud 使用前需要申请账号（国内需要身份认证），然后在 <code>web_analytics</code> 配置项中将 <code>leancloud</code> API 相关参数填上才能生效。</p><p>LeanCloud 在 localhost 域名下不会增加数据。</p><p>如果参数填写错误或者接口异常，不会显示数据，请在浏览器控制台排查具体原因</p></blockquote><h2 id="1-11-语言配置"><a href="#1-11-语言配置" class="headerlink" title="1.11 语言配置"></a>1.11 语言配置</h2><p>不同语言会影响一些主题自带的文字。</p><p>设置语言是在<strong>博客配置</strong>中，需要对应 <code>fluid/languages/</code> 目录内的配置文件名:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br></pre></td></tr></table></figure><p>你可以在主题 <a href="https://github.com/fluid-dev/hexo-theme-fluid/tree/master/languages">languages (opens new window)</a>目录里查看支持哪些语言，只要上面的配置的值和文件名相同即可。</p><p>你也可以使用类似于覆盖配置的方式去自定义语言，可按如下操作：</p><ol><li>进入博客目录的 <code>source/_data</code> 目录（如不存在则创建），创建 <code>languages</code> 文件夹；</li><li>在 <code>source/_data/languages</code> 文件夹下创建 <code>xxx.yml</code> 文件（<code>xxx</code> 替换为对应语言的代码，例如 <code>zh-CN</code>）</li><li>将 <a href="https://github.com/fluid-dev/hexo-theme-fluid/tree/master/languages">fluid&#x2F;languages (opens new window)</a>目录下对应语言的配置内容复制到 <code>xxx.yml</code> 中；</li><li>以后配置都在 <code>xxx.yml</code> 中修改，配置会在 <code>hexo g</code> 时自动覆盖。</li></ol><p>当然你可以按这个方法创建一份其他语言的配置</p><h2 id="1-12-强制全局HTTPS"><a href="#1-12-强制全局HTTPS" class="headerlink" title="1.12 强制全局HTTPS"></a>1.12 强制全局HTTPS</h2><p>当你的域名升级到 HTTPS 后，可能之前存在部分图片等资源使用的是 HTTP，这时混用出现网页报错，造成图片无法显示。</p><p>控制台里也会出现报错：<code>Mixed Content: The page at &#39;https://xxx&#39; was loaded over HTTPS</code>。</p><p>这种情况可以在<strong>主题配置</strong>中开启此配置：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">force_https:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>即可将所有请求强制升级为 HTTPS（如是外部资源，需要本身支持 HTTPS）</p><h2 id="1-13-二级站点路径"><a href="#1-13-二级站点路径" class="headerlink" title="1.13 二级站点路径"></a>1.13 二级站点路径</h2><p>如果你的博客部署在二级路径（如: xxx.com&#x2F;blog&#x2F;），需要修改<strong>博客配置</strong>中：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">http://xxx.com/blog</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/blog/</span></span><br></pre></td></tr></table></figure><h2 id="1-14-自定义JS-x2F-CSS-x2F-HTML"><a href="#1-14-自定义JS-x2F-CSS-x2F-HTML" class="headerlink" title="1.14 自定义JS&#x2F;CSS&#x2F;HTML"></a>1.14 自定义JS&#x2F;CSS&#x2F;HTML</h2><p>如果你想引入外部的 JS、CSS（比如 IconFont）或 HTML，可以通过以下<strong>主题配置</strong>，具体见注释：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定自定义 js 文件路径，路径是相对 source 目录</span></span><br><span class="line"><span class="attr">custom_js:</span> <span class="string">/js/custom.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定自定义 css 文件路径，路径是相对 source 目录</span></span><br><span class="line"><span class="attr">custom_css:</span> <span class="string">/css/custom.css</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义 &lt;head&gt; 节点中的 HTML 内容</span></span><br><span class="line"><span class="attr">custom_head:</span> <span class="string">&#x27;&lt;meta name=&quot;key&quot; content=&quot;value&quot;&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义底部 HTML 内容（位于 footer 上方），也可用于外部引入 js css 这些操作，注意不要和 post.custom 配置冲突</span></span><br><span class="line"><span class="attr">custom_html:</span> <span class="string">&#x27;&lt;link rel=&quot;stylesheet&quot; href=&quot;//at.alicdn.com/t/font_1067060_qzomjdt8bmp.css&quot;&gt;&#x27;</span></span><br></pre></td></tr></table></figure><p>另外 <code>custom_js</code> 和 <code>custom_css</code> 都可以指定多个路径：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_css:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">/css/custom.css</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">//at.alicdn.com/t/font_1736178_ijqayz9ro8k.css</span></span><br></pre></td></tr></table></figure><h2 id="1-15-暗色模式"><a href="#1-15-暗色模式" class="headerlink" title="1.15 暗色模式"></a>1.15 暗色模式</h2><p>主题暗色模式，开启后菜单中会出现切换按钮</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">dark_mode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">default:</span> <span class="string">auto</span></span><br></pre></td></tr></table></figure><p><code>default</code> 是暗色默认的模式，可选参数：auto &#x2F; light &#x2F; dark</p><p>选择 auto 时优先遵循 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media/prefers-color-scheme">prefers-color-scheme (opens new window)</a>，如果不支持则按用户本地时间 18 点到次日 6 点之间进入暗色模式。</p><p>无论选择任何模式，当用户手动切换后会在用户本地保存选项，该用户不再按照默认模式</p><h2 id="1-16-OpenGraph"><a href="#1-16-OpenGraph" class="headerlink" title="1.16 OpenGraph"></a>1.16 OpenGraph</h2><p><a href="https://ogp.me/">OpenGraph (opens new window)</a>是 Facebook 发布的一套网页元信息标记协议，可以让任何页面成为社交平台中的富媒体标签。</p><p>本主题基于 <a href="https://hexo.io/docs/helpers.html#open-graph">Hexo 内置方法 (opens new window)</a>实现了该功能，并且默认开启，但如果想在 Facebook 等平台更好地使用，需要在<strong>主题配置</strong>完善如下配置项：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">open_graph:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">twitter_card:</span> <span class="string">summary_large_image</span></span><br><span class="line">  <span class="attr">twitter_id:</span></span><br><span class="line">  <span class="attr">twitter_site:</span></span><br><span class="line">  <span class="attr">google_plus:</span></span><br><span class="line">  <span class="attr">fb_admins:</span></span><br><span class="line">  <span class="attr">fb_app_id:</span></span><br></pre></td></tr></table></figure><p>另外你可以在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter (opens new window)</a>设置字段来指定单个页面的 OpenGraph 属性：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">og_img:</span> <span class="string">/img/og.png</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h1 id="第二章-首页"><a href="#第二章-首页" class="headerlink" title="第二章 首页"></a>第二章 首页</h1><h2 id="2-1-Slogan-打字机"><a href="#2-1-Slogan-打字机" class="headerlink" title="2.1 Slogan(打字机)"></a>2.1 Slogan(打字机)</h2><p>首页大图中的标题文字，可在<strong>主题配置</strong>中设定是否开启：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">index:</span></span><br><span class="line">  <span class="attr">slogan:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">text:</span> <span class="string">这是一条</span> <span class="string">Slogan</span></span><br><span class="line">    <span class="attr">api:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">&quot;https://v1.hitokoto.cn/&quot;</span></span><br><span class="line">      <span class="attr">method:</span> <span class="string">&quot;GET&quot;</span></span><br><span class="line">      <span class="attr">headers:</span> &#123;&#125;</span><br><span class="line">      <span class="attr">keys:</span> [<span class="string">&quot;hitokoto&quot;</span>]</span><br></pre></td></tr></table></figure><p>如果 <code>text</code> 为空则按<strong>博客配置</strong>的 <code>subtitle</code> 显示。</p><p>另外支持通过 API 接口获取内容，如果请求失败则按 text 字段显示：</p><p><code>url</code>: API 地址，必须返回的是一个 JSON 格式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">method`: 请求方法，可选 `GET`、`POST`、`PUT</span><br></pre></td></tr></table></figure><p><code>headers</code>: 请求头，如果接口需要传一些验证的头部信息，在这里设置</p><p><code>keys</code>: 从请求结果获取字符串的取值字段，程序会根据列表中的字段依次取值，最终需要获得到一个字符串</p><p>例如 API 返回的内容为：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;Fluid&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;content&quot;</span>: <span class="string">&quot;An elegant theme&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;Test&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;content&quot;</span>: <span class="string">&quot;Test content&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>设置 <code>keys: [&quot;data&quot;, &quot;content&quot;]</code>，程序会如下执行：</p><ol><li>由于返回体是列表，程序会首先获取第一个元素（不是列表则跳过此步骤）</li><li>通过第一个 key <code>data</code> 获取值，发现不是一个字符串，继续执行</li><li>通过第二个 key <code>content</code> 获取值，发现是一个字符串，返回内容；如果不是字符串则获取失败，使用 text 值</li></ol><blockquote><p>WARNING</p><p>如果 API 没有请求成功，请打开浏览器的控制台（console）检查是否报错，其中如果有包含 <code>No Access-Control-Allow-Origin header</code> 的报错，说明该 API 有跨域限制，这必须从 API 后端服务来解决。</p></blockquote><p>标题文字默认开启了打字机动效，相关配置如下：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">fun_features:</span></span><br><span class="line">  <span class="attr">typing:</span> <span class="comment"># 为 subtitle 添加打字机效果</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">typeSpeed:</span> <span class="number">70</span> <span class="comment"># 打印速度</span></span><br><span class="line">    <span class="attr">cursorChar:</span> <span class="string">&quot;_&quot;</span> <span class="comment"># 游标字符</span></span><br><span class="line">    <span class="attr">loop:</span> <span class="literal">false</span> <span class="comment"># 是否循环播放效果</span></span><br></pre></td></tr></table></figure><blockquote><p>TIP</p><p>请求 API 的功能必须同时开启打字机动效才能生效</p></blockquote><h2 id="2-2-文章摘要"><a href="#2-2-文章摘要" class="headerlink" title="2.2 文章摘要"></a>2.2 文章摘要</h2><p>开关自动摘要（默认开启）：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">index:</span></span><br><span class="line">  <span class="attr">auto_excerpt:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>若要手动指定摘要，使用 <code>&lt;!-- more --&gt;</code> MD文档里划分，如：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">正文的一部分作为摘要</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">余下的正文</span><br></pre></td></tr></table></figure><p>或者在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter (opens new window)</a>里设置 <code>excerpt</code> 字段，如：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">这是标题</span></span><br><span class="line"><span class="attr">excerpt:</span> <span class="string">这是摘要</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><blockquote><p>TIP</p><p>优先级: 手动摘要 &gt; 自动摘要</p><p>如果关闭自动摘要，并且没有设置手动摘要，摘要区域空白</p><p>无论哪种摘要都最多显示 3 行，当屏幕宽度不足时会隐藏部分摘要。</p></blockquote><h2 id="2-3-文章跳转方式"><a href="#2-3-文章跳转方式" class="headerlink" title="2.3 文章跳转方式"></a>2.3 文章跳转方式</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">index:</span></span><br><span class="line">  <span class="attr">post_url_target:</span> <span class="string">_self</span></span><br></pre></td></tr></table></figure><p>可选值：</p><ol><li>_blank：新标签页打开</li><li>_self：当前标签页打开</li></ol><h2 id="2-4-文章信息"><a href="#2-4-文章信息" class="headerlink" title="2.4 文章信息"></a>2.4 文章信息</h2><p>可配置隐藏包括发布时间、分类、标签。</p><p>经过测试，如果首页的文章列表中没有略缩图和摘要，标题+文章信息的显示方式会使页面过于拥挤，所以给出此项配置供喜欢首页只显示文章标题的同学使用。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">index:</span></span><br><span class="line">  <span class="attr">post_meta:</span></span><br><span class="line">    <span class="attr">date:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">category:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">tag:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="2-5-隐藏文章"><a href="#2-5-隐藏文章" class="headerlink" title="2.5 隐藏文章"></a>2.5 隐藏文章</h2><p>如果想把某些文章隐藏起来，不在首页和其他分类里展示，可以在文章开头 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter (opens new window)</a>中配置 <code>hide: true</code> 属性。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">文章标题</span></span><br><span class="line"><span class="attr">index_img:</span> <span class="string">/img/example.jpg</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019-10-10 10:00:00</span></span><br><span class="line"><span class="attr">hide:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">以下是文章内容</span></span><br></pre></td></tr></table></figure><blockquote><p>TIP</p><p>隐藏会使文章在分类和标签类里都不显示</p><p>隐藏后依然可以通过文章链接访问</p></blockquote><h2 id="2-6-文章排序"><a href="#2-6-文章排序" class="headerlink" title="2.6 文章排序"></a>2.6 文章排序</h2><p>如果想手动将某些文章固定在首页靠前的位置，可以在安装 <code>hexo-generator-index</code> &gt;&#x3D; 2.0.0 版本的情况下，在文章开头 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter (opens new window)</a>中配置 <code>sticky</code> 属性：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">文章标题</span></span><br><span class="line"><span class="attr">index_img:</span> <span class="string">/img/example.jpg</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019-10-10 10:00:00</span></span><br><span class="line"><span class="attr">sticky:</span> <span class="number">100</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">以下是文章内容</span></span><br></pre></td></tr></table></figure><p><code>sticky</code> 数值越大，该文章越靠前，达到类似于置顶的效果，其他未设置的文章依然按默认排序。</p><p>当文章设置了 <code>sticky</code> 后，主题会默认在首页文章标题前增加一个图标，来标识这是一个置顶文章，你可以通过<strong>主题配置</strong>去关闭或修改这个功能：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">index:</span></span><br><span class="line">  <span class="attr">post_sticky:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">&#x27;iconfont icon-top&#x27;</span></span><br></pre></td></tr></table></figure><p><code>icon</code> 可以通过<a href="https://hexo.fluid-dev.com/docs/icon/">自定义图标</a>修改为其他图标。</p><h1 id="第三章-文章页"><a href="#第三章-文章页" class="headerlink" title="第三章 文章页"></a>第三章 文章页</h1><h2 id="3-1-文章在首页的封面图"><a href="#3-1-文章在首页的封面图" class="headerlink" title="3.1 文章在首页的封面图"></a>3.1 文章在首页的封面图</h2><p>对于单篇文章，在文章开头 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter (opens new window)</a>中配置 <code>index_img</code> 属性。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">文章标题</span></span><br><span class="line"><span class="attr">tags:</span> [<span class="string">Hexo</span>, <span class="string">Fluid</span>]</span><br><span class="line"><span class="attr">index_img:</span> <span class="string">/img/example.jpg</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019-10-10 10:00:00</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">以下是文章内容</span></span><br></pre></td></tr></table></figure><p>和 Banner 配置相同，<code>/img/example.jpg</code> 对应的是存放在 <code>/source/img/example.jpg</code> 目录下的图片（目录也可自定义，但必须在 source 目录下）。</p><p>也可以使用外链 Url 的绝对路径。</p><p>如果想统一给文章设置一个默认图片（文章不设置 <code>index_img</code> 则默认使用这张图片），可在<strong>主题配置</strong>中设置：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post:</span></span><br><span class="line">  <span class="attr">default_index_img:</span> <span class="string">/img/example.jpg</span></span><br></pre></td></tr></table></figure><p>当 <code>default_index_img</code> 和 <code>index_img</code> 都为空时，该文章在首页将不显示图片</p><h2 id="3-2-文章页顶部大图"><a href="#3-2-文章页顶部大图" class="headerlink" title="3.2 文章页顶部大图"></a>3.2 文章页顶部大图</h2><p>默认显示<strong>主题配置</strong>中的 <code>post.banner_img</code>，如需要设置单个文章的 Banner，在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter (opens new window)</a>中指定 <code>banner_img</code> 属性。</p><p>本地图片存放位置同上。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">文章标题</span></span><br><span class="line"><span class="attr">tags:</span> [<span class="string">Hexo</span>, <span class="string">Fluid</span>]</span><br><span class="line"><span class="attr">index_img:</span> <span class="string">/img/example.jpg</span></span><br><span class="line"><span class="attr">banner_img:</span> <span class="string">/img/post_banner.jpg</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019-10-10 10:00:00</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">以下是文章内容</span></span><br></pre></td></tr></table></figure><h2 id="3-3-文章内容图片"><a href="#3-3-文章内容图片" class="headerlink" title="3.3 文章内容图片"></a>3.3 文章内容图片</h2><p>本地图片存放位置同上。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![](/img/example.jpg)</span><br></pre></td></tr></table></figure><h2 id="3-4-日期-x2F-字数-x2F-阅读时长-x2F-阅读数"><a href="#3-4-日期-x2F-字数-x2F-阅读时长-x2F-阅读数" class="headerlink" title="3.4 日期&#x2F;字数&#x2F;阅读时长&#x2F;阅读数"></a>3.4 日期&#x2F;字数&#x2F;阅读时长&#x2F;阅读数</h2><p>显示在文章页大标题下的文章信息，除了作者和阅读次数，其他功能都是默认开启的。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post:</span></span><br><span class="line">  <span class="attr">meta:</span></span><br><span class="line">    <span class="attr">author:</span>  <span class="comment"># 作者，优先根据 front-matter 里 author 字段，其次是 hexo 配置中 author 值</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">date:</span>  <span class="comment"># 文章日期，优先根据 front-matter 里 date 字段，其次是 md 文件日期</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">format:</span> <span class="string">&quot;dddd, MMMM Do YYYY, h:mm a&quot;</span>  <span class="comment"># 格式参照 ISO-8601 日期格式化</span></span><br><span class="line">    <span class="attr">wordcount:</span>  <span class="comment"># 字数统计</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">format:</span> <span class="string">&quot;&#123;&#125; 字&quot;</span>  <span class="comment"># 显示的文本，&#123;&#125;是数字的占位符（必须包含)，下同</span></span><br><span class="line">    <span class="attr">min2read:</span>  <span class="comment"># 阅读时间</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">format:</span> <span class="string">&quot;&#123;&#125; 分钟&quot;</span></span><br><span class="line">    <span class="attr">views:</span>  <span class="comment"># 阅读次数</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">source:</span> <span class="string">&quot;leancloud&quot;</span>  <span class="comment"># 统计数据来源，可选：leancloud | busuanzi   注意不蒜子会间歇抽风</span></span><br><span class="line">      <span class="attr">format:</span> <span class="string">&quot;&#123;&#125; 次&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>TIP</p><p>日期格式必须遵循 ISO-8601 规范，否则无法正常显示；</p><p>其他格式必须包括 <code>&#123;&#125;</code> 符号代替数字，文字可自由设置。</p></blockquote><h2 id="3-5-代码块"><a href="#3-5-代码块" class="headerlink" title="3.5 代码块"></a>3.5 代码块</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">code:</span></span><br><span class="line">  <span class="attr">copy_btn:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">highlight:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">lib:</span> <span class="string">&quot;highlightjs&quot;</span></span><br><span class="line">    <span class="attr">highlightjs:</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">&#x27;Github Gist&#x27;</span></span><br><span class="line">      <span class="attr">bg_color:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">prismjs:</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">&quot;default&quot;</span></span><br><span class="line">      <span class="attr">preprocess:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><code>copy_btn</code>: 是否开启复制代码的按钮</p><p><code>line_number</code>: 是否开启行号</p><p><code>highlight</code>: 是否开启代码高亮</p><p><code>lib</code>: 选择生成高亮的库，可选项: highlightjs、prismjs，对应下面两组配置，高亮的配置说明具体见<strong>主题配置</strong>中的注释</p><h2 id="3-6-评论"><a href="#3-6-评论" class="headerlink" title="3.6 评论"></a>3.6 评论</h2><p>开启评论需要在<strong>主题配置</strong>中开启并指定评论模块：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post:</span></span><br><span class="line">  <span class="attr">comments:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">disqus</span></span><br></pre></td></tr></table></figure><p>然后在下方还要设置对应评论模块的参数，比如 disqus 对应设置：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">disqus:</span></span><br><span class="line">  <span class="attr">shortname:</span> <span class="string">fluid</span></span><br></pre></td></tr></table></figure><p>当前支持的评论插件如下：</p><ul><li><a href="https://valine.js.org/configuration.html">Valine (opens new window)</a>:基于 LeanCloud</li><li><a href="https://waline.js.org/">Waline (opens new window)</a>: 从 Valine 衍生而来，额外增加了服务端和多种功能</li><li><a href="https://github.com/gitalk/gitalk">Gitalk (opens new window)</a>: 基于 GitHub Issues</li><li><a href="https://utteranc.es/">Utterances (opens new window)</a>: 基于 GitHub Issues</li><li><a href="https://disqus.com/">Disqus (opens new window)</a>: 基于第三方的服务</li><li><a href="http://changyan.kuaizhan.com/">畅言 (opens new window)</a>: 基于第三方的服务</li><li><a href="https://www.livere.com/">来必力(Livere) (opens new window)</a>: 基于第三方的服务</li><li><a href="https://remark42.com/">Remark42 (opens new window)</a>: 需要自托管服务端</li><li><a href="https://twikoo.js.org/">Twikoo (opens new window)</a>: 基于腾讯云开发</li><li><a href="https://cusdis.com/">Cusdis (opens new window)</a>: 基于第三方服务或自托管服务</li></ul><p>使用方式和参数设置请点击上面链接查看各自的文档。</p><p>若想自己添加新的评论插件，可通过<a href="https://hexo.fluid-dev.com/docs/guide/#%E8%87%AA%E5%AE%9A%E4%B9%89-js-css-html">自定义功能</a>加入 <code>&lt;script&gt;</code>，并判断是否存在 <code>#comments</code> 元素进行挂载。</p><blockquote><p>TIP</p><p>国内用户推荐使用 Valine、Waline 或者 twikoo</p><p>如果设置后评论模块没有显示，说明配置没有完成，或者配置有误出现报错（请在浏览器控制台查看具体报错）</p></blockquote><p>如果想在某个文章页关闭评论，或者想在某个自定义页面开启评论，可以通过在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter (opens new window)</a>设置 <code>comment: bool</code> 来控制评论开关，或者通过 <code>comment: &#39;type&#39;</code> 来开启指定的评论插件。</p><p>例如在关于页开启并指定评论插件：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">关于页</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">about</span></span><br><span class="line"><span class="attr">index_img:</span> <span class="string">/img/example.jpg</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019-10-10 10:00:00</span></span><br><span class="line"><span class="attr">comment:</span> <span class="string">&#x27;valine&#x27;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">以下是正文内容</span></span><br></pre></td></tr></table></figure><h2 id="3-7-脚注"><a href="#3-7-脚注" class="headerlink" title="3.7 脚注"></a>3.7 脚注</h2><p>主题内置了脚注语法支持，可以在文章末尾自动生成带有锚点的脚注，该功能在<strong>主题配置</strong>中默认开启：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post:</span></span><br><span class="line">  <span class="attr">footnote:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">header:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>脚注语法如下：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这是一句话[^1]</span><br><span class="line">[<span class="symbol">^1</span>]: <span class="link">这是对应的脚注</span></span><br></pre></td></tr></table></figure><p>更优雅的使用方式，是将脚注写在文末，比如：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">正文</span><br><span class="line"></span><br><span class="line"><span class="section">## 参考</span></span><br><span class="line">[<span class="symbol">^1</span>]: <span class="link">参考资料1</span></span><br><span class="line">[<span class="symbol">^2</span>]: <span class="link">参考资料2</span></span><br></pre></td></tr></table></figure><p>当然你也可以通过修改上方配置项 <code>header</code> 来自动加入节标题，如下所示：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post:</span></span><br><span class="line">  <span class="attr">footnote:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">header:</span> <span class="string">&#x27;&lt;h2&gt;参考&lt;/h2&gt;&#x27;</span>  <span class="comment"># 等同于手动写 `## 参考`</span></span><br></pre></td></tr></table></figure><h1 id="第四章-关于页"><a href="#第四章-关于页" class="headerlink" title="第四章 关于页"></a>第四章 关于页</h1><h2 id="4-1-创建关于页"><a href="#4-1-创建关于页" class="headerlink" title="4.1 创建关于页"></a>4.1 创建关于页</h2><p>首次使用主题的「关于页」需要手动创建：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new page about</span><br></pre></td></tr></table></figure><p>创建成功后修改 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p><p>修改后的文件示例如下：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标题</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">about</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="string">这里可以写正文，支持</span> <span class="string">Markdown,</span> <span class="string">HTML</span></span><br></pre></td></tr></table></figure><blockquote><p>WARNING</p><p><code>layout: about</code> 必须存在，并且不能修改成其他值，否则不会显示头像等样式。</p></blockquote><h2 id="4-2-关于信息"><a href="#4-2-关于信息" class="headerlink" title="4.2 关于信息"></a>4.2 关于信息</h2><p>在关于页介绍自己的基础信息，可以在<strong>主题配置</strong>中设置：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">about:</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">/img/avatar.png</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">&quot;Fluid&quot;</span></span><br><span class="line">  <span class="attr">intro:</span> <span class="string">&quot;An elegant theme for Hexo&quot;</span></span><br></pre></td></tr></table></figure><h2 id="4-3-社交页图标"><a href="#4-3-社交页图标" class="headerlink" title="4.3 社交页图标"></a>4.3 社交页图标</h2><p>在<strong>主题配置</strong>中设置：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">about:</span></span><br><span class="line">  <span class="attr">icons:</span></span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">class:</span> <span class="string">&#x27;iconfont icon-github-fill&#x27;</span>, <span class="attr">link:</span> <span class="string">&#x27;https://github.com&#x27;</span>, <span class="attr">tip:</span> <span class="string">&#x27;GitHub&#x27;</span> &#125;</span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">class:</span> <span class="string">&#x27;iconfont icon-douban-fill&#x27;</span>, <span class="attr">link:</span> <span class="string">&#x27;https://douban.com&#x27;</span>, <span class="attr">tip:</span> <span class="string">&#x27;豆瓣&#x27;</span> &#125;</span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">class:</span> <span class="string">&#x27;iconfont icon-wechat-fill&#x27;</span>, <span class="attr">qrcode:</span> <span class="string">&#x27;/img/favicon.png&#x27;</span> &#125;</span><br></pre></td></tr></table></figure><ul><li><code>class</code>: 图标的 css class，主题内置图标详见<a href="https://hexo.fluid-dev.com/docs/icon/">这里</a></li><li><code>link</code>: 跳转链接</li><li><code>tip</code>: 鼠标悬浮在图标上显示的提示文字</li><li><code>qrcode</code>: 二维码图片，当使用此字段后，点击不再跳转，而是悬浮二维码</li></ul><blockquote><p>TIP</p><p>关闭 icons 时注意不要把 <code>icons</code> 这个 key 也一起注释，否则会被<a href="https://hexo.fluid-dev.com/docs/guide/#%E8%A6%86%E7%9B%96%E9%85%8D%E7%BD%AE">覆盖配置</a>填充上默认值，请按照如下设置：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  icons:</span><br><span class="line">    # - &#123; class: &#x27;iconfont icon-github-fill&#x27;, link: &#x27;https://github.com&#x27;, tip: &#x27;GitHub&#x27; &#125;</span><br><span class="line">    # - &#123; class: &#x27;iconfont icon-douban-fill&#x27;, link: &#x27;https://douban.com&#x27;, tip: &#x27;豆瓣&#x27; &#125;</span><br><span class="line">    # - &#123; class: &#x27;iconfont icon-wechat-fill&#x27;, qrcode: &#x27;/img/favicon.png&#x27; &#125;```</span><br><span class="line"></span><br><span class="line">## 4.4 评论</span><br><span class="line"></span><br><span class="line">开启评论的方式是通过在 [Front-matter (opens new window)](https://hexo.io/zh-cn/docs/front-matter)设置 `comment: bool` 来控制评论开关，或者通过 `comment: &#x27;type&#x27;` 来开启指定的评论插件。</span><br><span class="line"></span><br><span class="line">```yaml</span><br><span class="line">---</span><br><span class="line">title: 标题</span><br><span class="line">layout: about</span><br><span class="line">comment: &#x27;valine&#x27;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></blockquote><h1 id="第五章-友情链接页"><a href="#第五章-友情链接页" class="headerlink" title="第五章 友情链接页"></a>第五章 友情链接页</h1><p>友情链接页用于展示好友的博客入口，默认关闭，开启需要先在 <code>navbar</code> 项中将 <code>links</code> 的注释(#号)删掉：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">navbar:</span></span><br><span class="line">  <span class="attr">menu:</span></span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">key:</span> <span class="string">&#x27;links&#x27;</span>, <span class="attr">link:</span> <span class="string">&#x27;/links/&#x27;</span>, <span class="attr">icon:</span> <span class="string">&#x27;iconfont icon-link-fill&#x27;</span> &#125;</span><br></pre></td></tr></table></figure><p>然后找到 <code>links</code> 的配置项，对页面内容进行配置：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="attr">items:</span></span><br><span class="line">    <span class="bullet">-</span> &#123;</span><br><span class="line">      <span class="attr">title:</span> <span class="string">&#x27;Fluid Docs&#x27;</span>,</span><br><span class="line">      <span class="attr">intro:</span> <span class="string">&#x27;主题使用指南&#x27;</span>,</span><br><span class="line">      <span class="attr">link:</span> <span class="string">&#x27;https://hexo.fluid-dev.com/docs/&#x27;</span>,</span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">&#x27;/img/favicon.png&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="attr">default_avatar:</span> <span class="string">/img/avatar.png</span></span><br></pre></td></tr></table></figure><ul><li><code>title</code>: 友链站的标题</li><li><code>intro</code>: 站点或博主的简介，可省略</li><li><code>link</code>: 跳转链接</li><li><code>avatar</code>: 头像图片，可省略</li><li><code>default_avatar</code>: 成员的默认头像（仅在指定了头像并且加载失败时生效）</li></ul><p>友链页也可以使用自定义区域和评论，使用方式类似于文章页，具体见配置项与相关注释</p><h1 id="第六章-自定义页面"><a href="#第六章-自定义页面" class="headerlink" title="第六章 自定义页面"></a>第六章 自定义页面</h1><h2 id="6-1-创建页面"><a href="#6-1-创建页面" class="headerlink" title="6.1 创建页面"></a>6.1 创建页面</h2><p>如果想单独生成一个页面，步骤和创建「关于页」类似。</p><ol><li>首先用命令行创建页面：</li></ol><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ hexo new page example</span><br></pre></td></tr></table></figure><ol><li>创建成功后编辑博客目录下 <code>/source/example/index.md</code>：</li></ol><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">example</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">若不填默认是</span> <span class="string">title</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="string">这里写正文，支持</span> <span class="string">Markdown,</span> <span class="string">HTML</span></span><br></pre></td></tr></table></figure><p>正文默认没有 Markdown 样式，如果希望和文章相同的样式，可以加上：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;markdown-body&quot;</span>&gt;</span></span><br><span class="line">正文</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-2-配置"><a href="#6-2-配置" class="headerlink" title="6.2 配置"></a>6.2 配置</h2><p>页面的参数配置可以在<strong>主题配置</strong>中统一设置：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">page:</span></span><br><span class="line">  <span class="attr">banner_img:</span> <span class="string">/img/default.png</span></span><br><span class="line">  <span class="attr">banner_img_height:</span> <span class="number">70</span></span><br><span class="line">  <span class="attr">banner_mask_alpha:</span> <span class="number">0.3</span></span><br></pre></td></tr></table></figure><p>也可以直接在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter (opens new window)</a>里单独设置：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">example</span></span><br><span class="line"><span class="attr">banner_img:</span> <span class="string">/img/default.png</span></span><br><span class="line"><span class="attr">banner_img_height:</span> <span class="number">60</span></span><br><span class="line"><span class="attr">banner_mask_alpha:</span> <span class="number">0.5</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="string">这里可以写正文</span></span><br></pre></td></tr></table></figure><h2 id="6-3-评论"><a href="#6-3-评论" class="headerlink" title="6.3 评论"></a>6.3 评论</h2><p>自定义页面也可以开启评论插件，和关于页的方式相同，通过在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter (opens new window)</a>设置 <code>comment: bool</code> 来控制评论开关，或者通过 <code>comment: &#39;type&#39;</code> 来开启指定的评论插件：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">example</span></span><br><span class="line"><span class="attr">comment:</span> <span class="string">&#x27;valine&#x27;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h1 id="第七章-404-页"><a href="#第七章-404-页" class="headerlink" title="第七章 404 页"></a>第七章 404 页</h1><p>404 页是在访问不存在的博客链接时，出现的错误提示页面。</p><p>开启此页面需要在博客的部署环境上配置：</p><ul><li>如果博客部署在云服务器，需要 Nginx 配置文件设置 <code>error_page 404 = /404.html</code>；</li><li>如果部署在 GitHub Pages 上，不需要额外配置，但必须绑定顶级域名才生效；</li><li>其他 OSS 等平台，请参考各平台关于 404 页的配置文档，但并不是所有平台都支持跳转 Html。</li></ul><p>主题包含默认的404页面，你也可以将自定义的 <code>404.html</code> 放置在博客的 <code>source</code> 目录下。</p>]]></content>
    
    
    <summary type="html">对于hexo-fluid主题的优化美化操作</summary>
    
    
    
    <category term="个人博客" scheme="http://blog.cndis.cn/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="个人博客" scheme="http://blog.cndis.cn/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="Hexo" scheme="http://blog.cndis.cn/tags/Hexo/"/>
    
    <category term="fluid优化" scheme="http://blog.cndis.cn/tags/fluid%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github搭建个人博客</title>
    <link href="http://blog.cndis.cn/post/405e7e90.html"/>
    <id>http://blog.cndis.cn/post/405e7e90.html</id>
    <published>2022-07-21T06:45:39.000Z</published>
    <updated>2022-12-07T07:26:25.108Z</updated>
    
    <content type="html"><![CDATA[<p>我的个人博客就是使用Hexo博客框架+Fluid主题搭建而来的，之前也使用过CSDN、博客园等，最后都放弃了，因为一方面是广告多，另外一方面样式我也不是很喜欢，样式不能太多的自定义，这个博客搭建以来我也来来回回也修改了很多次，最后也是改成了现在的样式，后面还会继续做一些小优化，下面我也来分享一下使用Hexo+Fluid搭建个人博客的教程，希望大家都可以搭建出自己喜欢的样式的博客~</p><p>博客原文链接：<a href="https://www.jianshu.com/p/2e318226c88d?u_atoken=e8d38570-4083-444d-813b-7b96cf350e12&u_asession=01WQFVfmoEzPICGkE3CCjxfcVgfNIEkITTfVLmfeYPEa3eJqJ45xWHmcTJ01-mrm4hX0KNBwm7Lovlpxjd_P_q4JsKWYrT3W_NKPr8w6oU7K9B1SRg8odBgGjFx1dS58m2Ppcarp92QKzyJKyYjREPlmBkFo3NEHBv0PZUm6pbxQU&u_asig=0571xFqT6ytNlYS2FmxKjAUdLcfdlE6N4ueYBfPy2hMNpXtjcmcSTPOUPz7u9Tu7wvCVYa5wEX3ULU01_OcEKRiTFtHcTMN38O6feWR82FxaG5aGhiBO1akGYSdMy8hS9tJrxR8mQGeVBiMoXCW9KqjARkEbT2SVXhtw5AykWPMpf9JS7q8ZD7Xtz2Ly-b0kmuyAKRFSVJkkdwVUnyHAIJzaXIlIPGb_aiyL0gg3SifD9P-0aSHSG4NTeqTriOtL5-WPRPQyB_SKrj-61LB_f61u3h9VXwMyh6PgyDIVSG1W_ZlBjClI30kbsmlnmz0CPSEZHl47VoskR3y40Zs9kCIHhQvMc5F4Hdv370XZuyWp6E_cLwqQuq7qYKBMl1VDRwmWspDxyAEEo4kbsryBKb9Q&u_aref=WKzque3lSMgXVltunDy4kZLzZ38=">简书源文章</a></p><p>hexo博客首页加入轮播图： <a href="https://www.jianshu.com/p/334ac1caba94">https://www.jianshu.com/p/334ac1caba94</a></p><blockquote><p>ps:懒癌患者慎入</p></blockquote><p><img src="/post/405e7e90.htm/1.png" alt="展示"></p><h1 id="第一章-简述"><a href="#第一章-简述" class="headerlink" title="第一章 简述"></a>第一章 简述</h1><p>一般来说大多数教程会教我们把搭建的博客放到Github Pages上面，其实这也是一个不错的选择，但是由于Github服务器毕竟还是在国外，在国内访问的话速度会比较慢，如果追求速度的话，可以把博客放到国内的Coding（码云）上面，也可以放到腾讯云对象存储上面（还有七牛云存储等等），但是都是各有各的限制，腾讯云存储的话需要域名已经备案（然而备案就是一件比较麻烦的事……）。</p><p>所以如果不是非常想折腾的话，还是推荐直接放到GithubPages上即可 ，而且GithubPages有一个比较方便的地方就是可以一键开启HTTPS，这样避免了大多数浏览器烦人的不安全连接问题。</p><h1 id="第二章-环境准备"><a href="#第二章-环境准备" class="headerlink" title="第二章 环境准备"></a>第二章 环境准备</h1><p>在安装hexo框架之前，我们需要先安装其依赖环境：</p><ol><li>Node.js</li><li>Git</li></ol><p>因为Hexo博客框架就是基于Node.js的，所以必须要先安装Node.js环境，我们可以去<a href="http://nodejs.cn/download/current/">Node.js中文官网</a>下载，如图</p><p><img src="/post/405e7e90.htm/node%E4%B8%8B%E8%BD%BD%E9%A1%B5%E9%9D%A2.png" alt="Node官网下载页面"></p><h2 id="2-1-提示"><a href="#2-1-提示" class="headerlink" title="2.1 提示"></a>2.1 提示</h2><p>由于一般我们是在windows或者macOS环境下作为本机操作的，所以下载对应的安装包就可以了，下载好后一路点next就完成了，这个没什么问题。</p><p>然后我们需要安装一下Git，Git主要是帮助我们一键部署到Github仓库上面。</p><p>安装Git的话，如果是window系统，可以直接去<a href="https://gitforwindows.org/">windows的Git下载地址</a>去下载，如果是macOS的话，也可以在<a href="https://www.git-scm.com/download/">这里下载</a>。当这些环境都部署好之后，就可以开始我们的Hexo博客安装啦！</p><h1 id="第三章-安装Hexo"><a href="#第三章-安装Hexo" class="headerlink" title="第三章 安装Hexo"></a>第三章 安装Hexo</h1><p>本文安装环境为windows10，所以一下都以windows安装为例。</p><p>安装之前需要说明几个注意事项：</p><ol><li>很多命令既可以使用windows的cmd命令行来完成，也可以使用刚才安装好的Git     Bash来完成，但是部分命令会有一些问题，建议大家全部使用Git Bash来执行命令。</li><li>Hexo不同版本差别比较大，要注意自己安装的版本是哪个版本（跟着本文走就没问题啦），如果修改样式的话注意网上教程的Hexo版本差异。</li><li>Hexo安装好后有2种_config.xml文件，一个是hexo站点根目录下的全局_config.xml文件，还有一种是每个主题theme下的各自的_config.xml文件，注意区分二者，后面会详细说到。</li></ol><p>然后说明一下，我们在安装过程种使用的命令大多数是npm 命令，而npm命令本身是很慢的（源在国外），我们可以使用淘宝的cnpm来替代npm命令，不过貌似网上也有很多人不推荐使用cnpm，这个也因人而异吧，至少我用着还行。</p><p>打开Git Bash，Git Bash可以在刚才安装好的Git下找到，然后在命令下安装cnpm：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>上面-g表示全局安装，安装完成后会有提示，然后我们开始安装hexo。</p><h2 id="3-1-安装hexo"><a href="#3-1-安装hexo" class="headerlink" title="3.1 安装hexo"></a>3.1 安装hexo</h2><p>依然是在GitBash中操作，输入一下命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm install -g hexo</span><br></pre></td></tr></table></figure><h2 id="3-2-创建hexo文件夹"><a href="#3-2-创建hexo文件夹" class="headerlink" title="3.2 创建hexo文件夹"></a>3.2 创建hexo文件夹</h2><p>在电脑某个地方创建一个名为hexo的文件夹（当然名字可以随便取），比如我个人的就是E:\blog\hexo，由于这个文件夹是你以后存放博客代码和文章的地方，所以也最好不要乱放，然后我们在GitBash中cd到创建好的文件夹。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /e/blog/hexo</span><br></pre></td></tr></table></figure><h2 id="3-3-初始化hexo"><a href="#3-3-初始化hexo" class="headerlink" title="3.3 初始化hexo"></a>3.3 初始化hexo</h2><p>在上面cd到创建的文件夹后，输入以下命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>这个命令执行的时间非常长，主要是初始化hexo博客中的文件夹，包括hexo博客内置的各种node_modules组件等等，所以耐心的稍等一下！</p><p>初始化完成后，我们打开刚才创建的文件夹，会发现里面有如下文件夹：</p><p><img src="/post/405e7e90.htm/hexo%E5%88%9D%E5%A7%8B%E5%8C%96%E5%AE%8C%E6%88%90%E6%96%87%E4%BB%B6%E5%A4%B9.png" alt="hexo初始化完成文件夹"></p><p>注意，这个里面有一个_config.xml文件，这个我们叫做站点根目录配置文件，里面的初始内容如下：（附上中文介绍）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site 站点主配置</span><br><span class="line">title: Hexo  # 网站标题</span><br><span class="line">subtitle:    # 网站副标题</span><br><span class="line">description:   # 网站描述</span><br><span class="line">keywords:      # 可以不填写保持默认</span><br><span class="line">author: JankinLui  # 网站拥有者昵称</span><br><span class="line">language:    # 网站语言设置，一般根据依赖的主题而定</span><br><span class="line">timezone:    # 网站时区设置，一般不填写保持默认</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span><br><span class="line">url: https//:blog.cndis.cn   # 网站url设置</span><br><span class="line">root: /                    # 网站根目录链接</span><br><span class="line">permalink: :year/:month/:day/:title/   # 文章链接，默认是按照 /年/月/日/文章标题 设置的链接</span><br><span class="line">permalink_defaults:                    # 默认链接形式</span><br><span class="line"></span><br><span class="line"># Directory  网站主要目录，这里一般不做改动</span><br><span class="line">source_dir: source</span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"># Writing  网站文章设置，同样一般不做改动</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">post_asset_folder: false</span><br><span class="line">relative_link: false</span><br><span class="line">future: true</span><br><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br><span class="line">  </span><br><span class="line"># Home page setting  主页设置，一般不做改动</span><br><span class="line"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span><br><span class="line"># per_page: Posts displayed per page. (0 = disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line">index_generator:</span><br><span class="line">  path: &#x27;&#x27;</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line">  </span><br><span class="line"># Category &amp; Tag  分类设置，一般不做改动</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Date / Time format  日期设置，一般不做改动</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"># Pagination  导航页，一般不做改动</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Extensions  使用的主题名称，会在这里切换</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: fluid  # 此处切换主题名称</span><br><span class="line"></span><br><span class="line"># Deployment  部署，一般选择部署到Github上</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type:</span><br></pre></td></tr></table></figure><p>其实到这里来说，我们的hexo博客已经做好了！不信？我们执行下面命令看看：</p><p>&#x2F;&#x2F;cd到根目录执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>然后我们打开浏览器，输入<a href="http://localhost:4000，是不是惊奇的发现已经完成了？">http://localhost:4000，是不是惊奇的发现已经完成了？</a></p><p><img src="/post/405e7e90.htm/hexo%E5%AE%89%E8%A3%85%E5%AE%8C%E6%88%90%E9%BB%98%E8%AE%A4%E9%A1%B5.png" alt="hexo安装完成默认页"></p><p>等….等一下，页面怎么是英文的？？？！</p><p>别慌，上面提到配置文件的时候已经说到是语言没有修改了，我们可以打开hexo目录下的themes文件夹，发现里面有一个landscape文件夹，没错，你刚才看到的默认主题就是这个名叫landscape的主题，是不是内心吐槽了一句好丑啊…..当然啊，不然我们怎么会使用其他主题呢？</p><p>别慌，我们先来分析一下这个landscape文件夹</p><p><img src="/post/405e7e90.htm/lunguages%E6%96%87%E4%BB%B6%E5%A4%B9.png" alt="lunguages文件夹"></p><p>注意这里面有一个_config.xml配置文件，其实上面已经一再强调过，这个跟前面的站点根目录下配置文件同名，那么这个配置文件我们就叫做<font color="red">主题配置文件。</font></p><p>里面的初始内容我们暂时不管（因为不同主题的配置文件内容不一样，反正我们又不使用这个主题~）。</p><p>先来看看上面的languages文件夹，一看就懂，都知道这就是网站语言配置文件，好，我们进去看一下，噢~里面的zh-CN和zh-TW可不就是中文吗。其中zh-CN指的是简体中文，zh-TW（湾湾）是繁体中文，欧克。然后我们再去站点根目录下，注意这里是站点根目录下的配置文件中，就是最上面提到的，将这里：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Site 站点主配置</span><br><span class="line">title: 搭建Hexo博客  //网站标题修改</span><br><span class="line">subtitle: so easy~  //副标题修改</span><br><span class="line">description: </span><br><span class="line">keywords:      </span><br><span class="line">author: JankinLui   //此处填写你自己的昵称  </span><br><span class="line">language: zh-CN    //这里改成上面在主题配置文件中看到的语言名字</span><br><span class="line">timezone:   </span><br></pre></td></tr></table></figure><p>更改完后，我们回到GitBash命令行，输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>再重新打开浏览器刷新，是不是页面语言变成中文的了！</p><p><img src="/post/405e7e90.htm/%E4%B8%AD%E6%96%87%E9%BB%98%E8%AE%A4%E9%A1%B5.png" alt="中文默认页"></p><p>好吧，现在再说一下上面的hexo s hexo g是什么东西，hexo s是启动hexo服务的，而hexo g是重新生成public文件夹，那么public文件夹是什么呢？</p><p>别慌，我们回头看一下hexo文件夹目录：</p><p><img src="/post/405e7e90.htm/hexo%E7%9B%AE%E5%BD%95.png" alt="hexo目录"></p><p>看到这个public文件夹吗，这个里面就是生成的所有静态文件，包括html，css，js文件以及图片等，稍微懂点前端的人都知道其中代表的什么意思。简单点来说如果在本地修改了什么文件内容，可以使用hexo g 命令重新生成一下public文件夹，然后再hexo s启动服务就可以看到变化了，当然hexo s本身就具有在线调试的功能，如果hexo s无法刷新页面修改内容，那么使用hexo g &amp;&amp; hexo s就可以看到更改内容啦~</p><p>上面就是搭建hexo博客的基本内容。</p><h1 id="第四章-将Hexo博客部署到Github上"><a href="#第四章-将Hexo博客部署到Github上" class="headerlink" title="第四章 将Hexo博客部署到Github上"></a>第四章 将Hexo博客部署到Github上</h1><p>为什么要部署到Github上呢，当然是有以下原因：</p><ol><li>因为Hexo博客都是静态文件，访问速度快。</li><li>免费方便，不用花一分钱就可以自己搭建一个自由的个人博客，并且没有服务器没有后台。</li><li>可以随意绑定自己的域名，并且可以一键开启HTTPS，很方便。</li><li>数据绝对安全，github可以恢复任意版本。</li><li>博客内容可以轻松打包、转移以及发布到其它平台。</li><li>….</li></ol><p>所以在部署到Github之前，我们需要准备好自己的Github账号。</p><h2 id="4-1-创建Github仓库"><a href="#4-1-创建Github仓库" class="headerlink" title="4.1 创建Github仓库"></a>4.1 创建Github仓库</h2><p>首先我们需要在Github上创建一个repository，注意名字必须为你的Github用户名.github.io，如下图：</p><p><img src="/post/405e7e90.htm/%E5%88%9B%E5%BB%BAGithub%E4%BB%93%E5%BA%93.png" alt="创建Github仓库"></p><p>不能设置为其它名字，只能用这个仓库名。这样设置以后，我们在不绑定域名的前提下，可以直接使用<code>http://jankinlui.github.io</code>来访问自己的个人博客，这样就比较方便。</p><h2 id="4-2-配置SSH-key"><a href="#4-2-配置SSH-key" class="headerlink" title="4.2 配置SSH key"></a>4.2 配置SSH key</h2><p>如果是第一次在自己的本机上使用Git上传到Github上，那么必须配置SSH key，表示Github允许这台机器有权限使用Git上传代码。</p><p>首先我们可以再GitBash中使用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd ~/.ssh</span><br></pre></td></tr></table></figure><p>来查看本机已经存在的ssh密钥，如果是第一次使用那就是显示<code>No such file or directory</code>啦。</p><p>然后输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;邮件地址&quot;</span><br></pre></td></tr></table></figure><p>上面的邮件地址就是你的Github注册邮箱地址，连续回车之后，最终会生成一个文件在C盘用户目录下面</p><p><img src="/post/405e7e90.htm/ssh%E7%9B%AE%E5%BD%95.png" alt="ssh目录"></p><p>打开这个.ssh文件，里面存放了密钥，然后我们打开自己的Github个人主页，进入<code>个人设置 -&gt; SSH and GPG keys -&gt; New SSH key</code></p><p><img src="/post/405e7e90.htm/ssh-key.png" alt="ssh-key"></p><p>上面的Titie可以任意填写，下面的key注意要打开.ssh文件，将密钥复制进去。</p><h2 id="4-3-测试是否成功"><a href="#4-3-测试是否成功" class="headerlink" title="4.3 测试是否成功"></a>4.3 测试是否成功</h2><p>使用如下命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh -T git@github.com <span class="comment"># 注意邮箱地址不用改</span></span></span><br></pre></td></tr></table></figure><p>如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>点击yes，会显示</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hi Sanarous! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>看到这个信息就说明SSH已经配置成功！</p><h2 id="4-4-配置Git提交的用户信息"><a href="#4-4-配置Git提交的用户信息" class="headerlink" title="4.4 配置Git提交的用户信息"></a>4.4 配置Git提交的用户信息</h2><p>上面配置成功后，我们就可以设置Git的全局用户信息了</p><p>使用以下命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.name <span class="string">&quot;JankinLui&quot;</span> // 你的github用户名，非昵称</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.email  <span class="string">&quot;xxx@qq.com&quot;</span> // 填写你的github注册邮箱</span></span><br></pre></td></tr></table></figure><p>配置完成后以后提交代码都是使用的这个用户信息进行提交的。</p><h2 id="4-5-将Hexo博客部署到Github上"><a href="#4-5-将Hexo博客部署到Github上" class="headerlink" title="4.5 将Hexo博客部署到Github上"></a>4.5 将Hexo博客部署到Github上</h2><p>首先打开hexo站点的配置文件，找到deloy并填写如下配置：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:JankinLui/JankinLui.github.io.git</span> <span class="comment"># 用户名改成你自己的</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>注意不要写成：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">github</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/JankinLui/JankinLui.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>后面一种写法是hexo2.x的写法，现在已经不行了，无论是哪种写法，此时直接执行<code>hexo d</code>的话一般会报如下错误： <code>Deployer not found: github 或者 Deployer not found: git</code></p><p>原因是还需要安装一个插件:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后我们可以通过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure><p>来完成博客部署到Github上啦。</p><h1 id="第五章-安装Fluid主题"><a href="#第五章-安装Fluid主题" class="headerlink" title="第五章 安装Fluid主题"></a>第五章 安装Fluid主题</h1><p>本次以Fluid主题为例，其他主题为同等方式</p><p>由于默认的主题landscape界面比较丑（当然魔改也是可以的），我们可以使用Hexo官方推荐的主题：<a href="https://links.jianshu.com/go?to=https://hexo.io/themes">https://hexo.io/themes</a> ，如果喜欢这里面的某些主题，可以直接去上面主题对应的界面中的Github中下载</p><h2 id="5-1-下载主题"><a href="#5-1-下载主题" class="headerlink" title="5.1 下载主题"></a>5.1 下载主题</h2><p>找到你喜爱的主题</p><p><img src="/post/405e7e90.htm/%E4%B8%BB%E9%A2%98%E4%B8%8B%E8%BD%BD.png" alt="主题下载"></p><p>我们安装fluid版本的话，有两种方式：</p><ol><li>在GitBash中cd到博客根目录下，然后使用git clone命令将Fluid仓库克隆到hexo目录下的<code>themes/</code>，即命令是<code>git clone https://github.com/fluid-dev/hexo-theme-fluid.git themes/fluid</code></li><li>直接在Github页面上选择绿色的按钮<code>Clone or Download ZIP</code>，点击下载zip压缩包。</li></ol><p>如果第一种方式比较慢的话，可以选择第二种方式直接下载，然后将下载好的压缩包直接放在<code>E:\blog\hexo\themes\</code>下面，<code>git clone</code>的话也是在这个下面，下载好后的名字可以任取。</p><h2 id="5-2-设置hexo博客为Fluid主题"><a href="#5-2-设置hexo博客为Fluid主题" class="headerlink" title="5.2 设置hexo博客为Fluid主题"></a>5.2 设置hexo博客为Fluid主题</h2><p>在站点根目录下，设置以下代码：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">fluid</span>   <span class="comment">#此处填入你在themes目录下的fluid主题文件名</span></span><br></pre></td></tr></table></figure><h2 id="5-3-测试Fluid主题"><a href="#5-3-测试Fluid主题" class="headerlink" title="5.3 测试Fluid主题"></a>5.3 测试Fluid主题</h2><p>在GitBash中输入</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span></span><br></pre></td></tr></table></figure><p>等待启动完成在浏览器中输入<code>http://localhost:4000</code>即可查看安装好的Fluid主题</p><h1 id="第六章-美化小技巧"><a href="#第六章-美化小技巧" class="headerlink" title="第六章 美化小技巧"></a>第六章 美化小技巧</h1><p>下面介绍一下如何配置Fluid主题的配置文件</p><p>首先还是打开上面下载或者克隆好的Fluid主题目录，即在<code>hexo/themes/fluid</code>下面，然后打开其<code>_config.xml</code>主题配置文件。我们一一修改。</p><p>由于配置文件是yml，如果对yml语法不太熟的小伙伴，注意每个配置之间都必须有空格，不然报错。如<code>override: false</code>，注意<code>:</code>后面有一个空格，所有yml语法都是这样。</p><h2 id="6-1-网站图标设置"><a href="#6-1-网站图标设置" class="headerlink" title="6.1 网站图标设置"></a>6.1 网站图标设置</h2><p>使用notepad++、editplus或者sublime打开配置文件后，使用<code>Ctrl+F</code>搜索<code>favicon</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/favicon-logo.png</span>  <span class="comment"># 即为网站图标</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/favicon-fluid.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/apple-touch-icon-fluid.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/logo.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure><p>注意图片需要放到你的Fluid主题下面的<code>source/img</code>目录下面。</p><h2 id="6-2-菜单栏设置"><a href="#6-2-菜单栏设置" class="headerlink" title="6.2 菜单栏设置"></a>6.2 菜单栏设置</h2><p>搜索menu，找到如下：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line">  <span class="comment">#about: /about/ || user</span></span><br><span class="line">  <span class="comment">#tags: /tags/ || tags</span></span><br><span class="line">  <span class="comment">#categories: /categories/ || th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable/Disable menu icons.</span></span><br><span class="line"><span class="attr">menu_icons:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment">#表示是否显示菜单图标icons</span></span><br><span class="line">  <span class="attr">badges:</span> <span class="literal">false</span>  <span class="comment"># 显示每个菜单下面有多少个内容</span></span><br></pre></td></tr></table></figure><p>其中后面<code>||</code>后面表示的fontawesome中的图标名称，如果想要修改图标，可以去<a href="https://links.jianshu.com/go?to=http://www.fontawesome.com.cn/">FontAwesome官网</a>找自己喜欢的图标样式。</p><h2 id="6-3-社交链接设置"><a href="#6-3-社交链接设置" class="headerlink" title="6.3 社交链接设置"></a>6.3 社交链接设置</h2><p>搜索social，找到如下代码：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#social:</span></span><br><span class="line">  <span class="comment">#GitHub: https://github.com/XXXXX || github</span></span><br><span class="line">  <span class="comment">#E-Mail: mailto:XXXX@gmail.com || envelope</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/XXXXX || google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/XXXXX || twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/XXXXX || facebook</span></span><br><span class="line">  <span class="comment">#VK Group: https://vk.com/XXXXX || vk</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/XXXXX || stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/XXXXX || youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/XXXXX || instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:XXXXX?call|chat || skype</span></span><br></pre></td></tr></table></figure><p>后面的XXXXX改成你自己在对应网站的ID即可。然后将前面的#注释去掉即可。</p><h2 id="6-4-友情链接设置"><a href="#6-4-友情链接设置" class="headerlink" title="6.4 友情链接设置"></a>6.4 友情链接设置</h2><p>友情链接页用于展示好友的博客入口，默认关闭，开启需要先在 <code>navbar</code> 项中将 <code>links</code> 的注释(#号)删掉：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">navbar:</span></span><br><span class="line">  <span class="attr">menu:</span></span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">key:</span> <span class="string">&#x27;links&#x27;</span>, <span class="attr">link:</span> <span class="string">&#x27;/links/&#x27;</span>, <span class="attr">icon:</span> <span class="string">&#x27;iconfont icon-link-fill&#x27;</span> &#125;</span><br></pre></td></tr></table></figure><p>然后找到 <code>links</code> 的配置项，对页面内容进行配置：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="attr">items:</span></span><br><span class="line">    <span class="bullet">-</span> &#123;</span><br><span class="line">      <span class="attr">title:</span> <span class="string">&#x27;Fluid Docs&#x27;</span>,</span><br><span class="line">      <span class="attr">intro:</span> <span class="string">&#x27;主题使用指南&#x27;</span>,</span><br><span class="line">      <span class="attr">link:</span> <span class="string">&#x27;https://hexo.fluid-dev.com/docs/&#x27;</span>,</span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">&#x27;/img/favicon.png&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="attr">default_avatar:</span> <span class="string">/img/avatar.png</span></span><br></pre></td></tr></table></figure><ul><li><code>title</code>: 友链站的标题</li><li><code>intro</code>: 站点或博主的简介，可省略</li><li><code>link</code>: 跳转链接</li><li><code>avatar</code>: 头像图片，可省略</li><li><code>default_avatar</code>: 成员的默认头像（仅在指定了头像并且加载失败时生效）</li></ul><p>友链页也可以使用自定义区域和评论，使用方式类似于文章页，具体见配置项与相关注释。</p><blockquote><p>Ps:具体相关优化请看后几篇文章</p></blockquote>]]></content>
    
    
    <summary type="html">免费搭建个人博客，以hexo和github进行搭建教程</summary>
    
    
    
    <category term="个人博客" scheme="http://blog.cndis.cn/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="个人博客" scheme="http://blog.cndis.cn/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="Hexo" scheme="http://blog.cndis.cn/tags/Hexo/"/>
    
    <category term="fluid" scheme="http://blog.cndis.cn/tags/fluid/"/>
    
    <category term="免费" scheme="http://blog.cndis.cn/tags/%E5%85%8D%E8%B4%B9/"/>
    
  </entry>
  
</feed>
